#define SCRIPT_REALNAME "gl_k_wpnchk"
#include "../headers/define.h"
#include "../sfall/sfall.h"
#include "../headers/maps.h"
#include "../headers/command.h"

procedure start;

// avoid registering the hook over and over again
variable scorcher_registered := 0;

procedure test_scorcher begin
   variable target:=0;
   variable attacker:=0;
   variable damage_to_target:=0;
   variable damage_to_attacker:=0;
   variable target_special_effect_flags:=0;
   variable attacker_special_effect_flags:=0;
   variable weapon:=0;
   variable body_part:=0;
   variable num_hits:=0;

   target:=get_sfall_arg;
   attacker:=get_sfall_arg;
   damage_to_target:=get_sfall_arg;
   damage_to_attacker:=get_sfall_arg;
   target_special_effect_flags:=get_sfall_arg;
   attacker_special_effect_flags:=get_sfall_arg;
   weapon:=get_sfall_arg;
   body_part:=get_sfall_arg;
   num_hits += 1;
   if (weapon) then begin // todo: I'm sure this long ass condition can be simplified. I just don't fully understand what it does
      if (  (      cur_map_index != MAP_EPA_SUBLEVELS_1
               and cur_map_index != MAP_EPA_SUBLEVELS_2
               and cur_map_index != MAP_EPA_SECRET
            )
            or
            (       cur_map_index == MAP_EPA
               and ((dude_elevation != 1) or (dude_elevation != 2))
            )
         )
      then begin
         if ( (global_var(GVAR_TEST_SOLAR_SCORCHER) == 1) and (obj_pid(weapon) == PID_SOLAR_SCORCHER) and (num_hits >= 1) ) then begin
            set_global_var(GVAR_TEST_SOLAR_SCORCHER,2);
         end
      end
   end
end

procedure start begin
   if game_loaded and global_var(GVAR_TEST_SOLAR_SCORCHER) == 1 and scorcher_registered == 0 // only register when we have the quest
   then begin
      register_hook_proc(HOOK_COMBATDAMAGE, test_scorcher);
      scorcher_registered := 1;
   end
end

procedure map_enter_p_proc begin
   if global_var(GVAR_TEST_SOLAR_SCORCHER) == 1 and scorcher_registered == 0 // only register when we have the quest
   then begin
      register_hook_proc(HOOK_COMBATDAMAGE, test_scorcher);
      scorcher_registered := 1;
   end
end
