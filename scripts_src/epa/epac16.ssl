/*
  ***   Script conwerted to Interplay format by Fallout Script Edytor (by Jargo)  ***
*/

#define SCRIPT_REALNAME "epac16"
#include "../headers/define.h"
//#include "../headers/<TownMapName.h>"

#define NAME                    SCRIPT_EPAC16          //Script name from scripts.h
#define TOWN_REP_VAR            GVAR_TOWN_REP_           //Global variable name for this Town

#include "../headers/command.h"
#include "../headers/modreact.h"
#include "../headers/partybkg.h"

#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)

procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure use_obj_on_p_proc;

procedure start
begin
end

procedure critter_p_proc
begin
  if (self_can_see_dude) then
    attack(dude_obj);
end

procedure destroy_p_proc
begin
end

procedure look_at_p_proc
begin
end

procedure description_p_proc
begin
end

procedure use_skill_on_p_proc
begin
  if (action_being_used == 10) then
    script_overrides;
end

procedure damage_p_proc
begin
  if (source_obj == dude_obj) then
    attack(dude_obj);
end

procedure map_enter_p_proc
begin
  set_self_team(TEAM_RAT);
  set_self_ai(AI_GENERIC_RAT);
  add_timer_event(self_obj, game_ticks(random(1, 5)), 0);
end

procedure timed_event_p_proc
begin
  if (not combat_is_initialized and ((critter_state(self_obj) bwand 1) == 0)) then
  begin
    reg_anim_clear( self_obj);
    reg_anim_begin();
    self_walk_to_tile(tile_num_in_direction(self_tile, random(0, 5), random(1, 3)));
    reg_anim_end();
  end
  add_timer_event(self_obj, game_ticks(random(3, 5)), 0);
end

procedure use_obj_on_p_proc begin
   if ((obj_pid(obj_being_used_with) == PID_BUG_SPRAY)) then begin
      kill_critter(self_obj, ANIM_melted_to_nothing_sf);
      //critter_dmg(self_obj,get_critter_stat(self_obj,STAT_current_hp)+10,DMG_plasma);
   end
end
