/*
  ***   Script conwerted to Interplay format by Fallout Script Edytor (by Jargo)  ***
*/

#define SCRIPT_REALNAME "epai14"
#include "../headers/define.h"
//#include "../headers/<TownMapName.h>"

#define NAME                    SCRIPT_EPAI14          //Script name from scripts.h
#define TOWN_REP_VAR            GVAR_TOWN_REP_           //Global variable name for this Town

#include "../headers/command.h"
#include "../headers/modreact.h"
#include "../headers/partybkg.h"

#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)

procedure start;
procedure use_obj_on_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure use_skill_on_p_proc;
procedure use_p_proc;

#define FLASHING  ( (self_tile == 16901) or (self_tile == 16893) or (self_tile == 23889) or (self_tile == 23897) )
#define BROKEN_GENERATOR_HEX  (16901)

procedure destroy_p_proc;


procedure start
begin
end

procedure map_enter_p_proc begin
   if (self_tile == BROKEN_GENERATOR_HEX) and (global_var(GVAR_EPALIGHTING_GEN) < 4) then begin
      //do nothing
   end else if (FLASHING) then begin
      reg_anim_begin();
      reg_anim_animate_forever(self_obj, ANIM_stand);
      reg_anim_end();
   end

   add_timer_event(self_obj, 1, 1);

   if ( (self_tile == BROKEN_GENERATOR_HEX) and (global_var(GVAR_EPALIGHTING_GEN) < 4) ) then begin
      add_timer_event(self_obj, game_ticks(random(5, 10)), 3);
   end

end

procedure map_update_p_proc begin
   if (self_tile == BROKEN_GENERATOR_HEX) and (global_var(GVAR_EPALIGHTING_GEN) < 4) then begin
      //do nothing
   end else if ( (FLASHING) and (combat_is_initialized == 0) ) then begin
      reg_anim_begin();
      reg_anim_animate_forever(self_obj, ANIM_stand);
      reg_anim_end();
   end
end

procedure timed_event_p_proc begin

   if (fixed_param == 1) then begin
      if (self_tile == BROKEN_GENERATOR_HEX) and (global_var(GVAR_EPALIGHTING_GEN) < 4) then begin
         //do nothing
      end else if ( (FLASHING) and (anim_busy(self_obj) == false) and (combat_is_initialized == 0) ) then begin
         reg_anim_begin();
         reg_anim_animate_forever(self_obj, ANIM_stand);
         reg_anim_end();
      end
      add_timer_event(self_obj, 1, 1);
   end

   if (fixed_param == 3) then begin
      if ( (self_tile == BROKEN_GENERATOR_HEX) and (global_var(GVAR_EPALIGHTING_GEN) < 4) ) then begin
         float_msg(self_obj, mstr(random(200, 201)), FLOAT_MSG_YELLOW);
         add_timer_event(self_obj, game_ticks(random(15, 30)), 3);
      end
   end
end

procedure use_obj_on_p_proc
begin
   variable LVar1 := 0;
   variable LVar2 := 0;
   variable generator := 0;

   LVar2 := dude_item(PID_PUMP_PARTS);
   LVar1 := obj_pid(obj_being_used_with);
   if (global_var(GVAR_EPALIGHTING_GEN) == 3) then begin
      script_overrides;
      if (LVar1 == PID_PUMP_PARTS) then begin
         script_overrides;
         display_msg(mstr(106));
         set_global_var(GVAR_EPALIGHTING_GEN, 4);
         give_xp(500);
         rm_obj_from_inven(dude_obj, LVar2);
         destroy_object(LVar2);
         gfade_out(ONE_GAME_SECOND);
            reg_anim_clear(self_obj);
            reg_anim_begin();
               reg_anim_animate_forever(self_obj, ANIM_stand);
            reg_anim_end();
         gfade_in(ONE_GAME_SECOND);
      end
   end
end

procedure description_p_proc begin
  script_overrides;
  display_msg(mstr(103));
end

procedure look_at_p_proc begin
  script_overrides;
  if (local_var(LVAR_Herebefore) == 0) then
    display_msg(mstr(101));
  else
    display_msg(mstr(102));
end

procedure use_skill_on_p_proc begin
   if (self_tile == BROKEN_GENERATOR_HEX) then begin
      if (action_being_used == SKILL_REPAIR) then begin
         script_overrides;
         if (has_skill(source_obj, SKILL_REPAIR) > 55) then begin
            if (global_var(GVAR_EPALIGHTING_GEN) == 1) then begin
               display_msg(mstr(104));
               game_time_advance(ONE_GAME_MINUTE*10);
               float_msg(self_obj, mstr(105), FLOAT_MSG_YELLOW);
               set_global_var(GVAR_EPALIGHTING_GEN, 3);
            end else if (global_var(GVAR_EPALIGHTING_GEN) == 3) then begin
               display_msg(mstr(100));
            end else if (global_var(GVAR_EPALIGHTING_GEN) >= 4) then begin
               display_msg(mstr(108));
            end else begin
               display_msg(mstr(109));
            end
         end else begin
            display_msg(mstr(107));
         end
      end
   end
end

procedure use_p_proc
begin
end


procedure destroy_p_proc
begin
end
