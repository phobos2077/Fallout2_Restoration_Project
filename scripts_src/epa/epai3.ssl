/*        Script from item templete*          /

/*
        Name:
        Location:
        Description:

        Log:


           Created:

           Updated:
*/

/* Include Files */

#define SCRIPT_REALNAME "epai3"
#include "../headers/define.h"

#define NAME                    SCRIPT_EPAI3

#include "../headers/command.h"

procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node990;
procedure Node999;

#define LVAR_Fluoride_Info          (0)

variable initial_search :=0;
variable times_searched :=0;

procedure start begin
end

procedure map_enter_p_proc
begin
   add_timer_event(self_obj, game_ticks(random(5, 10)), 3);
end

procedure timed_event_p_proc
begin
  if (fixed_param == 3) then
  begin
    float_msg(self_obj, mstr(random(311, 313)), FLOAT_MSG_YELLOW);
    add_timer_event(self_obj, game_ticks(random(15, 30)), 3);
  end
end


procedure look_at_p_proc begin
 script_overrides;
 display_msg(mstr(100));
end

procedure description_p_proc begin
 script_overrides;
 display_msg(mstr(101));
end

procedure use_p_proc
begin
   if (combat_is_initialized == 0) then begin
      initial_search := 0;
      times_searched := 0;

      start_gdialog(NAME, self_obj, 4, -1, -1);
      gsay_start;
         call Node001;
      gsay_end;
      end_dialogue;
   end
end

procedure Node001 begin
   Reply(102);
   NOption(103,Node002,004);
   NOption(104,Node999,004);
end

procedure Node002 begin
   if (initial_search == 1) then begin
      Reply(109);
   end else begin
      Reply(105);
      game_time_advance(ONE_GAME_MINUTE * 30);
   end
   NOption(106,Node003,004);
   NOption(107,Node005,004);
   NOption(150,Node008,004);
   NOption(151,Node009,004);
   NOption(108,Node990,004);
   NOption(104,Node999,004);
   initial_search := 1;
end

procedure Node003 begin
   Reply(110);
   NOption(111,Node004,004);
end

procedure Node004 begin
   Reply(112);
   NOption(113,Node002,004);
end

procedure Node005 begin
   Reply(120);
   NOption(121,Node002,004);
   set_global_var(GVAR_FOUND_EPILEPSY_CURE,1);
end

procedure Node006 begin
   set_local_var(LVAR_Fluoride_Info,1);
   Reply(136);
   NOption(137,Node007,004);
end

procedure Node007 begin
   display_msg(mstr(200));
   give_xp(200);
   Reply(138);
   NOption(139,Node002,004);
end

procedure Node008 begin
   Reply(160);
   NOption(139,Node002,004);
end

procedure Node009 begin
   Reply(170);
   NOption(139,Node002,004);
end

procedure Node990 begin
   if (local_var(LVAR_Fluoride_Info) == 1) then begin
      if (times_searched == 0) then
         Reply(130);
      else
         Reply(131);

      NOption(108,Node990,004);
   end else begin
      if (times_searched == 0) then begin
         Reply(130);
         NOption(108,Node990,004);
      end else if (times_searched == 1) then begin
         Reply(131);
         NOption(108,Node990,004);
      end else if (times_searched > 1) then begin
         if ( (is_success(do_check(dude_obj,STAT_lu,-8))) or (times_searched > 20) ) then begin
            Reply(134);
            NOption(135,Node006,004);
         end else begin
            if (times_searched == 5) then
               Reply(1311);
            if (times_searched == 10) then
               Reply(132);
            else if (times_searched == 20) then
               Reply(133);
            else
               Reply(131);
            NOption(108,Node990,004);
         end
      end
   end

   NOption(139,Node002,004);
   NOption(104,Node999,004);
   game_time_advance(ONE_GAME_MINUTE * 30);
   times_searched += 1;

end

procedure Node999 begin

end
