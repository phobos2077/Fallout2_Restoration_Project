/*
	Script from spatial templete.
*/


/* Include Files */
#define SCRIPT_REALNAME "eshib"
#include "../headers/define.h"
#include "../headers/epasl.h"

#define NAME                    SCRIPT_ESHIB

#include "../headers/command.h"

/* Standard Script Procedures */
procedure start;
procedure spatial_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;

#define KITSUNE_SPATIAL_HEX    17304
#define DEX_SPATIAL_HEX        17292
#define CATJULES_SPATIAL_HEX   17298

#define LVAR_Triggered                 (1)
/*****************************************************************
   Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_
*****************************************************************/

/*******************************************************************
   Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_)
*******************************************************************/

/*******************************************************************
   Local variables which do not need to be saved between map changes.
*******************************************************************/


/*******************************************************************
*******                         PROCEDURES                   *******
*******************************************************************/


/*******************************************************************
   The start procedure is the first procedure called when the map is
   first entered. Any initial information that needs to be set up
   should be placed in here.
*******************************************************************/

procedure start
begin
end


/***************************************************************************************
   Whenever the map is first entered, this procedure will be called.
***************************************************************************************/

procedure map_enter_p_proc
begin
end


/**************************************************************************************
   This procedure gets called roughly every 30 seconds of real time.
**************************************************************************************/

procedure map_update_p_proc
begin
end


/**************************************************************************************
   This procedure gets called when player is near.
**************************************************************************************/

procedure spatial_p_proc
begin
   variable LVar1 := 0;

   if (source_obj == dude_obj) then begin
      if ( (map_var(MVAR_Kitsune_Free) > 0) and (local_var(LVAR_Triggered) == 0) and (self_tile == KITSUNE_SPATIAL_HEX) ) then begin
         set_local_var(LVAR_Triggered,1);
         //LVar1 := create_object_sid(PID_KITSUNE, 16737, dude_elevation, SCRIPT_EPAC12);
         //critter_attempt_placement(LVar1, 16737, dude_elevation);
         LVar1 := create_object_sid(PID_KITSUNE, KITSUNE_SPATIAL_HEX, dude_elevation, SCRIPT_EPAC12);
         critter_attempt_placement(LVar1, KITSUNE_SPATIAL_HEX, dude_elevation);
         set_obj_invisible(LVar1); //invisi
      end else if ( (map_var(MVAR_Dex_Free) > 0) and (local_var(LVAR_Triggered) == 0) and (self_tile == DEX_SPATIAL_HEX) ) then begin
         set_local_var(LVAR_Triggered,1);
         //LVar1 := create_object_sid(PID_DEX, 16729, dude_elevation, SCRIPT_EPAC10);
         //critter_attempt_placement(LVar1, 16729, dude_elevation);
         LVar1 := create_object_sid(PID_DEX, DEX_SPATIAL_HEX, dude_elevation, SCRIPT_EPAC10);
         critter_attempt_placement(LVar1, DEX_SPATIAL_HEX, dude_elevation);
         set_obj_invisible(LVar1); //invisi
      end else if ( (map_var(MVAR_Cat_Jules_Free) > 0) and (local_var(LVAR_Triggered) == 0) and (self_tile == CATJULES_SPATIAL_HEX) ) then begin
         set_local_var(LVAR_Triggered,1);
         //LVar1 := create_object_sid(PID_CAT_JULES, 16721, dude_elevation, SCRIPT_EPAC11);
         //critter_attempt_placement(LVar1, 16721, dude_elevation);
         LVar1 := create_object_sid(PID_CAT_JULES, CATJULES_SPATIAL_HEX, dude_elevation, SCRIPT_EPAC11);
         critter_attempt_placement(LVar1, CATJULES_SPATIAL_HEX, dude_elevation);
         set_obj_invisible(LVar1); //invisi
      end
   end
end
