/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: ETGOO
        Location: EPA
        Description:

        Log:


           Created:

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "esgoo"
#include "../headers/define.h"
//#include "../headers/<TownName.h>"

#define NAME                    SCRIPT_KTGOO //use the Klamath message file

#include "../headers/command.h"

#define MIN_DMG_SPATIAL         (1)
#define MAX_DMG_SPATIAL         (3)
#define DAMAGE_TYPE             DMG_plasma

procedure start;
procedure spatial_p_proc;
procedure meltem;
procedure pain;

variable my_boots;
variable worn;
variable k;
variable mutate:=0;

procedure start begin
end

procedure spatial_p_proc
begin
     my_boots:=0;
     worn:=0;
     //dont need to be carrying boots in hand
     if (get_item(source_obj, PID_RUBBER_BOOTS)) then begin
        //if carrying boots ..do boot damage
       //ndebug("NPC Code");
        k := random(1,100);
        if (k < 2) then begin //1% chance to melt
           my_boots := get_item(source_obj, PID_RUBBER_BOOTS);
           rm_obj_from_inven(source_obj, my_boots);
           destroy_object(my_boots);
           if (source_obj == dude_obj) then
              display_msg(mstr(130));
        end
     end
     else begin //check if target is a gecko
        if ( (obj_pid(source_obj) == PID_FRUIT_FLY) or (obj_pid(source_obj) == PID_GOLDEN_GECKO) or (obj_pid(source_obj) == PID_TOUGH_GOLDEN_GECKO)
          or (obj_pid(source_obj) == PID_GECKO_SMALL) or (obj_pid(source_obj) == PID_TOUGH_GECKO_SMALL) ) then begin
          //do nothing
          end
          else
             call pain;
     end
 end

procedure meltem begin
   //ndebug("My Boots Protect Me!");
   k := random(1,100);
   if (k < 2) then begin //1% chance to melt
      //ndebug("Melting");
      rm_obj_from_inven(dude_obj, my_boots);
      destroy_object(my_boots);
      display_msg(mstr(130));
      //remove boots from players inventory
   end
end

procedure pain begin
   if (get_armor(source_obj) != 0) then
      worn := obj_pid(get_armor(source_obj));
   if ( (worn != PID_POWERED_ARMOR) and (worn != PID_HARDENED_POWER_ARMOR) and (worn != PID_ADVANCED_POWER_ARMOR) and (worn != PID_ADVANCED_POWER_ARMOR_MK2) and  (worn != PID_ENVIRONMENTAL_ARMOUR) ) then begin //edit by killap - added  (worn != PID_ENVIRONMENTAL_ARMOUR)
        //if not wearing powered armor then do damage
        //ndebug("It hurts!");
        if ( (source_obj == dude_obj) and (global_var(GVAR_MUTATE_STAGE) < 1) ) then begin
           mutate:=global_var(GVAR_MUTATE);
           mutate:=mutate+2;
           set_global_var(GVAR_MUTATE,mutate);
           if (mutate > 29) then begin
              //set_global_var(GVAR_MUTATE, 1); //set state of character to mutate
              set_global_var(GVAR_MUTATE_WHEN, GAME_TIME_IN_DAYS); //store the time
              set_global_var(GVAR_MUTATE_STAGE,1);
              display_msg(mstr(150));
           end
           else if (mutate > 14) then
              display_msg(mstr(140));
           else
              display_msg(mstr(110));
        end
        critter_dmg(source_obj, 2, DMG_plasma);
     end
end
