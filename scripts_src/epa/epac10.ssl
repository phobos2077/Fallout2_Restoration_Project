/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/
/*
        Name:  Dex
        Location: EPA
        Description: The evil NPC found at the EPA

        Log:

           Created: June, 2008

           Updated:
*/

/* Include Files */

#define SCRIPT_REALNAME "epac10"
#include "../headers/define.h"
#include "../headers/epasl.h"

#define NAME                    SCRIPT_EPAC10               //Script name from scripts.h
#define TOWN_REP_VAR            GVAR_TOWN_REP_EPA           //Global variable name for this Town

#include "../headers/command.h"
#include "../headers/modreact.h"
#include "../headers/newr1.h"
#include "../headers/epasl.h"

#define PARTY_NODE_X                   Node1000

#define dex_party_member_options                                                 \
         if (local_var(LVAR_Vault_Times_Asked) <= 2) then                        \
            NOption(1200 + (local_var(LVAR_Vault_Times_Asked) > 0),Node300,004); \
         else if (local_var(LVAR_Vault_Times_Asked) == 3) then                   \
            NOption(1201,Node301,004);                                           \
         else if (local_var(LVAR_Story_Count) < 6) then                          \
            NOption(1202,Node304,004);                                           \
         if (check_general_rep < 0) then                                         \
            NOption(3000,Node100,004);                                           \
         if (local_var(LVAR_Gave_Bonus) == 0) then                               \
            NOption(3100,Node200,004);                                           \
         party_member_default_options

#define dex_joins_party                   party_add_self;                                                   \
                                          set_self_team(TEAM_PLAYER)

#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)
#define LVAR_WAITING                    (7)
#define LVAR_FOLLOW_DISTANCE            (8)
#define LVAR_TEAM                       (9)
#define LVAR_Player_Status              (10)
#define LVAR_Gave_Bonus                 (11)
#define LVAR_Vault_Times_Asked          (12)
#define LVAR_Joined                     (13)
#define LVAR_Wait                       (14)
#define LVAR_Kill_NPC                   (15)
#define LVAR_Kill_Player                (16)
#define LVAR_Story_Count                (17)

#define Good_Player 1
#define Bad_Player  2

variable count := 0;
variable Perform_Critter_Float := 0;
variable chamber := 0;

procedure start;
procedure critter_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;

procedure kill_p_proc;

procedure Node999;
procedure Node900;
procedure Node901;
procedure Node902;

procedure Node1000;
procedure Node1001;
procedure Node1002;
procedure Node1003;
procedure Node1004;
procedure Node1005;
procedure Node1006;
procedure Node1007;
procedure Node1008;
procedure Node1009;
procedure Node1010;
procedure Node1010b;
procedure Node1010c;
procedure Node1100;

procedure Node2000;
procedure Node2001;
procedure Node2002;
procedure Node2003;
procedure Node2004;
procedure Node2005;
procedure Node2006;
procedure Node2007;
procedure Node2008;
procedure Node2009;

procedure Node2100;
procedure Node2101;
procedure Node2102;
procedure Node2103;
procedure Node2104;
procedure Node2105;
procedure Node2106;
procedure Node2107;
procedure Node2108;

procedure Node2200;
procedure Node2201;
procedure Node2202;
procedure Node2203;
procedure Node2204;
procedure Node2205;
procedure Node2206;
procedure Node2207;

procedure Node000;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node006a;
procedure Node006b;
procedure Node006c;
procedure Node007;
procedure Node007a;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node022a;
procedure Node022b;
procedure Node022c;
procedure Node022d;
procedure Node023;
procedure Node023a;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node038a;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node049;
procedure Node049a;
procedure Node050;
procedure Node050a;
procedure Node051;
procedure Node052;
procedure Node053;
procedure Node054;
procedure Node055;

procedure Node100;
procedure Node101;
procedure Node102;
procedure Node103;
procedure Node104;
procedure Node105;
procedure Node106;
procedure Node107;
procedure Node108;
procedure Node109;
procedure Node110;
procedure Node111;
procedure Node112;
procedure Node113;

procedure Node200;
procedure Node201;
procedure Node202;

procedure Node300;
procedure Node301;
procedure Node302;
procedure Node303;
procedure Node304;
procedure Node305;
procedure Node306;
procedure Node307;
procedure Node308;
procedure Node309;
procedure Node310;
procedure Node311;
procedure Node312;
procedure Node313;
procedure Node314;
procedure Node315;
procedure Node316;

#define DEX_HIB_HEX           (17090)
#define DEX_LOCKER_HEX        (15694)

procedure start begin
   //critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD);
end

procedure push_p_proc begin
   call Node2004;
end

procedure critter_p_proc begin
   if( Perform_Critter_Float == 1 ) then begin
      Perform_Critter_Float := 0;
      // Float an appropriate message based on where we are.
      if( cur_map_index == MAP_EPA_SUBLEVELS_1 or cur_map_index == MAP_EPA_SUBLEVELS_2) then
         call Node2207;
      else if( cur_map_index == MAP_ARROYO_VILLAGE ) then
         call Node2200;
      else if( cur_map_index == MAP_MODOC_MAINSTREET ) then
         call Node2206;
      else if( cur_map_index == MAP_GECKO_SETTLEMENT ) then
         call Node2205;
      else if( cur_map_index == MAP_VAULTCITY_DOWNTOWN ) then
         call Node2202;
      else if( cur_map_index == MAP_NEW_RENO_1 ) then
         call Node2201;
      else if( cur_map_index == MAP_BROKEN_HILLS1 ) then
         call Node2204;
      else if( cur_map_index == MAP_NCR_DOWNTOWN ) then
         call Node2203;
   end

   if ((local_var(LVAR_Hostile) == 1) and (self_can_see_dude)) then begin
      attack(dude_obj);
   end else begin
      if (local_var(LVAR_Herebefore) == 0) then begin
         call talk_p_proc;
      end else if (Dex_In_Party) then begin
         if (party_is_waiting == false) then begin
            party_member_follow_dude
         end
      end
   end
end

procedure use_p_proc begin
end

procedure look_at_p_proc begin
  script_overrides;
  display_msg(mstr(100));
end

procedure description_p_proc begin
  script_overrides;
  display_msg(mstr(101));
end

procedure use_skill_on_p_proc begin
end

procedure use_obj_on_p_proc begin

   if ( (obj_pid(obj_being_used_with) == PID_MICRO_FUSION_CELL) or (obj_pid(obj_being_used_with) == PID_SMALL_ENERGY_CELL) ) then begin
      script_overrides;
      display_msg(g_mstr(20000));
   end

   if (Dex_In_Party) then begin
         if ( (obj_pid(obj_being_used_with) == PID_FIRST_AID_KIT) or
            (obj_pid(obj_being_used_with) == PID_DOCTORS_BAG) or
            (obj_pid(obj_being_used_with) == PID_RADAWAY) or
            (obj_pid(obj_being_used_with) == PID_ANTIDOTE) or
            (obj_pid(obj_being_used_with) == PID_STIMPAK) or
            (obj_pid(obj_being_used_with) == PID_SUPER_STIMPAK) ) then
            call Node2009;
         else if( (obj_pid(obj_being_used_with) == PID_BEER ) or
            (obj_pid(obj_being_used_with) == PID_BOOZE ) or
            (obj_pid(obj_being_used_with) == PID_ROT_GUT ) or
            (obj_pid(obj_being_used_with) == PID_ROENTGEN_RUM ) or
            (obj_pid(obj_being_used_with) == PID_GAMMA_GULP_BEER ) or
            ( obj_pid(obj_being_used_with) == PID_PSYCHO ) or
            ( obj_pid(obj_being_used_with) == PID_BUFFOUT ) or
            ( obj_pid(obj_being_used_with) == PID_MENTATS ) or
            ( obj_pid(obj_being_used_with) == PID_JET ) ) then
            call Node2003;
   end

end

procedure damage_p_proc begin
end

procedure map_enter_p_proc begin
   //critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD);
   party_member_map_enter;
   if ( Dex_Ptr != 0 ) then
      Perform_Critter_Float := 1;
   else
      Perform_Critter_Float := 0;

   flush_add_timer_event_sec(self_obj, random(25, 40), 1);
end

procedure map_update_p_proc begin
   if (combat_is_initialized == false) then begin
      if (anim_busy(self_obj) == false) then begin
         if (party_member_obj(self_pid) != 0) then begin
            if (chem_use_level(self_obj) == 1) then begin
               if ((100 * self_cur_hits / self_max_hits) <= 60) then begin
                  global_temp := 1;
                  obj_heal_no_skill(self_obj)
               end
            end else if (chem_use_level(self_obj) == 2) then begin
               if ((100 * self_cur_hits / self_max_hits) <= 30) then begin
                  global_temp := 1;
                  obj_heal_no_skill(self_obj)
               end
            end else if (chem_use_level(self_obj) == 3) then begin
               if ((100 * self_cur_hits / self_max_hits) <= 50) then begin
                  global_temp := 1;
                  obj_heal_no_skill(self_obj)
               end
            end else if (chem_use_level(self_obj) == 4) then begin
               if ((100 * self_cur_hits / self_max_hits) <= 50) then begin
                  global_temp := 1;
                  obj_heal_no_skill(self_obj)
               end
            end
         end
      end
   end
end

procedure kill_p_proc begin
   metarule3(107,self_obj,FID_HMWARR,0);
   float_msg(dude_obj, mstr(5002), FLOAT_MSG_YELLOW);
   critter_dmg(self_obj,10000,DMG_plasma);
end

procedure talk_p_proc begin


   if (local_var(LVAR_Herebefore) == 0) then begin
      set_local_var(LVAR_Herebefore,1);
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
         if (map_var(MVAR_Dex_Free) == 2) then begin
            call Node000;
         end else if ( (dude_is_male) and (check_general_rep >= 0) ) then begin
            //set_local_var(LVAR_Player_Status,Good_Player);
            call Node001;
         end else if ( (dude_is_female) and (check_general_rep >= 0) ) then begin
            //set_local_var(LVAR_Player_Status,Good_Player);
            call Node016;
         end else if ( (dude_is_male) and (check_general_rep < 0) ) then begin
            //set_local_var(LVAR_Player_Status,Bad_Player);
            call Node032;
         end else if ( (dude_is_female) and (check_general_rep < 0) ) then begin
            //set_local_var(LVAR_Player_Status,Bad_Player);
            call Node043;
         end
      gSay_End;
      end_dialogue;
  end else begin
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
         if ((Dex_In_Party) or (party_is_waiting)) then
            call Node1000;
         else
            call Node055;
      gSay_End;
      end_dialogue;
  end

  if (local_var(LVAR_Kill_NPC) == 1) then begin
      set_self_visible; //visi
      call kill_p_proc;
  end

  if (local_var(LVAR_Kill_Player) == 1) then begin
      critter_dmg(dude_obj,10000, DMG_normal_dam);
  end

end

procedure Node999 begin

end

procedure Node900 begin
   variable locker := 0;

   locker:=tile_contains_pid_obj(DEX_LOCKER_HEX,dude_elevation,PID_LOCKER_CLEAN_LEFT);
   move_obj_inven_to_obj(locker, self_obj);
   obj_open( locker );

   set_self_visible; //visi
   destroy_object(tile_contains_pid_obj(DEX_HIB_HEX,dude_elevation,33556340));
   chamber:=create_object(33556343,DEX_HIB_HEX,dude_elevation);

   set_local_var(LVAR_Hostile,1);

end

procedure Node901 begin
   variable locker := 0;

   if (dude_charisma <= 1) then begin
      Reply(2020);
      set_local_var(LVAR_Wait,1);
      NOption(g_mstr(10007),Node999,001);
   end else if (dude_at_max_party_size) then begin
      Reply(2010);
      set_local_var(LVAR_Wait,1);
      NOption(g_mstr(10007),Node999,001);
   end else begin
      dex_joins_party;
      set_local_var(LVAR_Joined,1);
      //floater(262);
   end

   locker:=tile_contains_pid_obj(DEX_LOCKER_HEX,dude_elevation,PID_LOCKER_CLEAN_LEFT);
   move_obj_inven_to_obj(locker, self_obj);
   obj_open( locker );

   set_self_visible; //visi
   destroy_object(tile_contains_pid_obj(DEX_HIB_HEX,dude_elevation,33556340));
   chamber:=create_object(33556343,DEX_HIB_HEX,dude_elevation);
end

procedure Node902 begin
   gfade_out(ONE_GAME_SECOND);
      do_default_sex;
      set_local_var(LVAR_Kill_Player,1);
   gfade_in(ONE_GAME_SECOND);
end

procedure timed_event_p_proc begin
 if (self_visible) then begin
   if (combat_is_initialized == false) then begin
      if (Dex_In_Party == false) then begin
      //blah
      end else begin
         if (party_healed_bad) then begin
            call Node2001;
         end else if (self_is_poisoned) then begin
            call Node2006;
         end else if (self_rads > 0) then begin
            call Node2002;
         end else if (Is_Crippled(self_obj)) then begin
            call Node2007;
         end else if (Is_Blind(self_obj)) then begin
            call Node2008;
         end else if ( (Sulik_In_Party) and (random(1,2) == 2) ) then begin
            call Node2100;
         end else if ( (Vic_In_Party) and (random(1,2) == 2) ) then begin
            call Node2101;
         end else if ( (Miria_In_Party) and (random(1,2) == 2) ) then begin
            call Node2102;
         end else if ( (Davin_In_Party) and (random(1,2) == 2) ) then begin
            call Node2103;
         end else if ( (MacRae_In_Party) and (random(1,2) == 2) ) then begin
            call Node2104;
         end else if ( (Lenny_In_Party) and (random(1,2) == 2) ) then begin
            call Node2105;
         end else if ( (Marcus_In_Party) and (random(1,2) == 2) ) then begin
            call Node2106;
         end else if ( (Myron_In_Party) and (random(1,2) == 2) ) then begin
            call Node2107;
         end else if ( (Goris_In_Party) and (random(1,2) == 2) ) then begin
            call Node2108;
         end else begin
            call Node2000;
         end
      end
   end
 end

 flush_add_timer_event_sec(self_obj, random(90, 120), 1);
end

procedure Node000 begin
   Reply(5000);
   NOption(5001,Node999,004);
   set_local_var(LVAR_Kill_NPC,1);
   destroy_object(tile_contains_pid_obj(DEX_HIB_HEX,dude_elevation,33556340));
   chamber:=create_object(33556343,DEX_HIB_HEX,dude_elevation);
end

procedure Node001 begin
   Reply(200);
   NOption(201,Node002,004);
end

procedure Node002 begin
   Reply(210);
   NOption(211,Node003,004);
   NOption(212,Node003,004);
end

procedure Node003 begin
   Reply(220);

   if (map_var(MVAR_Read_Dex_Bio) == 1) then begin
      NOption(223,Node005,004);
      BOption(224,Node004,004);
   end else begin
      NOption(222,Node005,004);
      BOption(221,Node900,004);
   end
end

procedure Node004 begin
   Reply(230);
   NOption(231,Node900,004);
end

procedure Node005 begin
   Reply(240);

   if (map_var(MVAR_Read_Dex_Bio) == 1) then begin
      BOption(242,Node900,004);
      BOption(243,Node007,004);
   end else begin
      NOption(241,Node006,004);
   end

end

procedure Node006 begin
   Reply(350);
   NOption(351,Node006b,004);
   NOption(352,Node006a,004);
end

procedure Node006a begin
   Reply(370);
   NOption(371,Node006c,004);
end

procedure Node006b begin
   Reply(360);
   NOption(251,Node007a,004);
end

procedure Node006c begin
   Reply(372);
   NOption(251,Node007a,004);
end

procedure Node007 begin
   Reply(250);
   NOption(251,Node007a,004);
end

procedure Node007a begin
   Reply(260);
   NOption(261,Node008,004);
end

procedure Node008 begin
   Reply(270);
   NOption(271,Node009,004);
end

procedure Node009 begin
   Reply(280);
   if (Fallout2_vault13_looking) then begin
      NOption(281,Node010,004);
      NOption(282,Node010,004);
   end else begin
      NOption(283,Node010,004);
   end
end

procedure Node010 begin
   Reply(290);
   if (map_var(MVAR_Read_Dex_Bio) == 1) then begin
      NOption(291,Node011,004);
      BOption(294,Node900,004);
   end else begin
      BOption(292,Node900,004);
      NOption(293,Node901,004); //join
   end
end

procedure Node011 begin
   Reply(300);
   NOption(301,Node012,004);
   BOption(302,Node900,004);
end

procedure Node012 begin
   Reply(310);
   NOption(311,Node013,004);
   NOption(312,Node013,004);
end

procedure Node013 begin
   Reply(320);
   NOption(321,Node014,004);
   NOption(322,Node901,004); //join
end

procedure Node014 begin
   Reply(330);
   NOption(331,Node015,004);
   BOption(332,Node900,004);
end

procedure Node015 begin
   Reply(340);
   BOption(341,Node901,004); //join
   NOption(342,Node901,004); //join
   BOption(343,Node900,004);
end

//female good/neutral pc
procedure Node016 begin
   Reply(400);
   NOption(401,Node017,004);
end

procedure Node017 begin
   Reply(410);
   //NOption(411,Node018,004);
   NOption(412,Node018,004);
end

procedure Node018 begin
   Reply(420);
   if (map_var(MVAR_Read_Dex_Bio) == 1) then begin
      NOption(mstr(421) + dude_name + mstr(422),Node021,004);
      BOption(425,Node900,004);
      NOption(mstr(426),Node019,004);
   end else begin
      NOption(mstr(421) + dude_name + mstr(422),Node021,004);
      NOption(mstr(423) + dude_name + mstr(424),Node021,004);
      NOption(mstr(426),Node019,004);
   end
end

procedure Node019 begin
   Reply(430);
   NOption(431,Node020,004);
end

procedure Node020 begin
   Reply(440);
   NOption(441,Node902,004);
end

procedure Node021 begin
   Reply(450);

   if (map_var(MVAR_Read_Dex_Bio) == 1) then begin
      NOption(451,Node022,004);
      NOption(452,Node022,004);
      BOption(453,Node900,004);
   end else begin
      NOption(454,Node022a,004);
      NOption(455,Node022a,004);
      BOption(456,Node900,004);
   end
end

procedure Node022a begin
   Reply(560);
   NOption(561,Node022b,004);
   NOption(562,Node022c,004);
end

procedure Node022b begin
   Reply(570);
   NOption(471,Node023a,004);
end

procedure Node022c begin
   Reply(580);
   NOption(581,Node022d,004);
end

procedure Node022d begin
   Reply(582);
   NOption(471,Node023a,004);
end

procedure Node022 begin
   Reply(460);
   if (map_var(MVAR_Read_Dex_Bio) == 1) then begin
      NOption(461,Node023,004);
      NOption(462,Node023,004);
   end else begin
      NOption(463,Node023,004);
      NOption(464,Node023,004);
   end
end

procedure Node023 begin
   Reply(470);
   NOption(471,Node023a,004);
end

procedure Node023a begin
   Reply(475);
   NOption(476,Node024,004);
end

procedure Node024 begin
   Reply(480);
   NOption(481,Node025,004);
end

procedure Node025 begin
   Reply(490);
   if (Fallout2_vault13_looking) then begin
      NOption(491,Node026,004);
      NOption(492,Node026,004);
   end else begin
      NOption(493,Node026,004);
   end
end

procedure Node026 begin
   Reply(500);
   NOption(501,Node901,004);
   NOption(502,Node027,004);
   BOption(503,Node900,004);
end

procedure Node027 begin
   if (map_var(MVAR_Read_Dex_Bio) == 1) then begin
      Reply(510);
      NOption(514,Node028,004);
      BOption(515,Node900,004);
   end else begin
      Reply(511);
      NOption(512,Node028,004);
      BOption(513,Node900,004);
   end
end

procedure Node028 begin
   Reply(520);
   NOption(521,Node029,004);
   NOption(522,Node029,004);
end

procedure Node029 begin
   Reply(530);
   NOption(531,Node030,004);
   NOption(532,Node901,004);
end

procedure Node030 begin
   Reply(mstr(540) + dude_name + mstr(541));
   NOption(542,Node031,004);
   BOption(543,Node900,004);
end

procedure Node031 begin
   Reply(550);
   if (map_var(MVAR_Read_Dex_Bio) == 1) then begin
      BOption(551,Node901,004);
      NOption(552,Node901,004);
      BOption(553,Node900,004);
   end else begin
      BOption(554,Node901,004);
      NOption(555,Node901,004);
      BOption(556,Node900,004);
   end
end

//evil male
procedure Node032 begin
   Reply(600);
   NOption(601,Node033,004);
end

procedure Node033 begin
   Reply(610);
   NOption(611,Node034,004);
   NOption(612,Node034,004);
end

procedure Node034 begin
   Reply(620);
   NOption(621,Node036,004);
   BOption(622,Node035,004);
end

procedure Node035 begin
   Reply(640);
   NOption(641,Node900,004);
end

procedure Node036 begin
   Reply(630);
   if (map_var(MVAR_Read_Dex_Bio) == 1) then begin
      NOption(631,Node037,004);
      BOption(632,Node900,004);
   end else begin
      NOption(633,Node037,004);
   end
end

procedure Node037 begin
   Reply(650);
   NOption(651,Node038,004);
   NOption(652,Node038,004);
end

procedure Node038 begin
   Reply(660);
   NOption(661,Node038a,004);
end

procedure Node038a begin
   Reply(665);
   NOption(666,Node039,004);
end

procedure Node039 begin
   Reply(670);
   NOption(671,Node040,004);
end

procedure Node040 begin
   Reply(680);
   if (Fallout2_vault13_looking) then begin
      NOption(681,Node041,004);
      NOption(682,Node041,004);
   end else begin
      NOption(683,Node041,004);
   end
end

procedure Node041 begin
   Reply(690);
   NOption(691,Node901,004);
   NOption(692,Node042,004);
end

procedure Node042 begin
   Reply(mstr(700) + dude_name + mstr(701));
   NOption(702,Node901,004);
   BOption(703,Node900,004);
end

//evil female
procedure Node043 begin
   Reply(800);
   NOption(801,Node044,004);
end

procedure Node044 begin
   Reply(810);
   //NOption(811,Node045,004);
   NOption(812,Node045,004);
end

procedure Node045 begin
   Reply(820);

   if (map_var(MVAR_Read_Dex_Bio) == 1) then begin
      NOption(mstr(821) + dude_name + mstr(822),Node049,004);
      BOption(825,Node900,004);
      NOption(mstr(826),Node046,004);
   end else begin
      NOption(mstr(821) + dude_name + mstr(822),Node049,004);
      NOption(mstr(823) + dude_name + mstr(824),Node049,004);
      NOption(mstr(826),Node046,004);
   end

end

procedure Node046 begin
   Reply(830);
   NOption(g_mstr(353),Node047,004);
end

procedure Node047 begin
   Reply(831);
   NOption(832,Node048,004);
end

procedure Node048 begin
   gfade_out(ONE_GAME_SECOND);
      do_default_sex;
   gfade_in(ONE_GAME_SECOND);
   Reply(833);
   NOption(g_mstr(350),Node901,004);
end

procedure Node049 begin
   Reply(840);
   if (map_var(MVAR_Read_Dex_Bio) == 1) then begin
      NOption(841,Node050,004);
      BOption(842,Node900,004);
   end else begin
      NOption(844,Node049a,004);
      BOption(845,Node049a,004);
      NOption(846,Node900,004);
   end
end

procedure Node049a begin
   Reply(900);
   NOption(851,Node050a,004);
end

procedure Node050 begin
   Reply(850);
   NOption(851,Node050a,004);
end

procedure Node050a begin
   Reply(855);
   NOption(856,Node051,004);
end

procedure Node051 begin
   Reply(860);
   NOption(861,Node052,004);
end

procedure Node052 begin
   Reply(870);
   if (Fallout2_vault13_looking) then begin
      NOption(871,Node053,004);
      NOption(872,Node053,004);
   end else begin
      NOption(873,Node053,004);
   end
end

procedure Node053 begin
   Reply(880);
   if (map_var(MVAR_Read_Dex_Bio) == 1) then begin
      NOption(881,Node901,004);
      NOption(882,Node054,004);
   end else begin
      NOption(883,Node901,004);
      NOption(884,Node901,004);
      BOption(885,Node900,004);
   end
end

procedure Node054 begin
   Reply(mstr(890) + dude_name + mstr(891));
   NOption(892,Node901,004);
   BOption(893,Node900,004);
end

procedure Node055 begin
   Reply(1110);
   NOption(1111,Node1100,004);
   NOption(1112,Node999,004);
end

//good male general

procedure Node1000 begin
   if (party_is_waiting) then begin
      Reply(random(1100,1106));
      party_member_default_options;
   end else begin
      Reply(random(1000 + (dude_is_female * 10),1005 + (dude_is_female * 10)));
      dex_party_member_options;
   end
end

procedure Node1001 begin
   // heal yourself
   obj_heal(self_obj)
   global_temp := 0;
   if (party_healed_max) then begin
      Reply(1800);
   end else if (party_healed_good) then begin
      Reply(1801);
   end else if (party_healed_hurt) then begin
      Reply(1802);
   end else begin
      Reply(1803);
   end
   dex_party_member_options;
end

procedure Node1002 begin
   // wait here
   set_party_waiting;
   Reply(random(1900,1904 + (dude_is_female * 3)));
   party_member_default_options;
end

procedure Node1003 begin
   // put your weapon away
   inven_unwield(self_obj);
   Reply(1500);
   dex_party_member_options;
end

procedure Node1004 begin
   // follow close
   set_follow_close;
   Reply(1403 + (dude_is_female * 2));
   dex_party_member_options;
end

procedure Node1005 begin
   // follow medium
   set_follow_medium;
   Reply(1406);
   dex_party_member_options;
end

procedure Node1006 begin
   // follow far
   set_follow_far;
   Reply(1402 + (dude_is_female * 2));
   dex_party_member_options;
end

procedure Node1007 begin
   // distance
   //Reply("TEMP MESSAGE: DISTANCE");
   Reply(1400 + dude_is_female);
   party_member_def_follow_options;
end

procedure Node1008 begin
   // gear
   //Reply("TEMP MESSAGE: GEAR");
   Reply(2000 + dude_is_female);
   party_member_def_gear_options;
end

procedure Node1009 begin
   // remove armor
   //NEED TO FIND OUT WHY THIS DOESNT WORK!!! - NBK
   remove_armor(self_obj)
   Reply(1600 + dude_is_female);
   dex_party_member_options;
end

procedure Node1010 begin
   // weapons that can be used
   //Reply("TEMP MESSAGE: CAN USE...");
   Reply(1700);
   NOption(1701,Node1010b,004);
end

procedure Node1010b begin
   Reply(1702);
   NOption(1703,Node1010c,004);
end

procedure Node1010c begin
   Reply(1704);
   NOption(1705,Node1000,004);
end

procedure Node1100 begin
   // join me
   if (dude_charisma <= 1) then begin
      set_self_abandon_party;
      Reply(2020);
      NOption(g_mstr(10007),Node999,001);
   end else if (dude_at_max_party_size) then begin
      set_self_abandon_party;
      Reply(2010);
      NOption(g_mstr(10007),Node999,001);
   end else begin
      end_party_waiting;
      Reply(random(2030,2031));
      dex_party_member_options;
   end
end

//floats

//general
procedure Node2000 begin
   floater(random(4000,4012));
end

//hurt
procedure Node2001 begin
   floater(random(4020,4023));
end

//radiated
procedure Node2002 begin
   floater(random(4030,4031));
end

//used drug
procedure Node2003 begin
   floater(random(4040,4043));
end

//push
procedure Node2004 begin
   floater(random(4050,4051));
end

//had sex
procedure Node2005 begin
   floater(random(4060,4063));
end

//poisoned
procedure Node2006 begin
   floater(random(4070,4071));
end

//crippled
procedure Node2007 begin
   floater(random(4080,4081));
end

//blind
procedure Node2008 begin
   floater(random(4090,4091));
end

//give health drug
procedure Node2009 begin
   floater(random(4045,4046));
end

//sulik float
procedure Node2100 begin
   floater(random(4100,4102));
end

//vic float
procedure Node2101 begin
   floater(random(4110,4111));
end

//maria float
procedure Node2102 begin
   floater(random(4120,4125));
end

//davin float
procedure Node2103 begin
   floater(random(4130,4131));
end

//cassidy float
procedure Node2104 begin
   floater(random(4140,4142));
end

//lenny float
procedure Node2105 begin
   floater(random(4150,4152));
end

//marcus float
procedure Node2106 begin
   floater(random(4160,4161));
end

//myron float
procedure Node2107 begin
   floater(random(4170,4172));
end

//goris float
procedure Node2108 begin
   floater(random(4180,4181));
end

//arroyo
procedure Node2200 begin
   floater(4200);
end

//new reno
procedure Node2201 begin
   floater(4210);
end

//vault city
procedure Node2202 begin
   floater(4220);
end

//ncr
procedure Node2203 begin
   floater(4230);
end

//broken hills
procedure Node2204 begin
   floater(4240);
end

//gecko
procedure Node2205 begin
   floater(4250);
end

//modoc
procedure Node2206 begin
   floater(4260);
end

//epa
procedure Node2207 begin
   floater(4270);
end

procedure Node100 begin
   Reply(3001);
   NOption(3002,Node101,004);
   NOption(3003,Node104,004);
   NOption(3004,Node1000,004);
end

procedure Node101 begin
   Reply(3010);
   NOption(3011,Node102,004);
end

procedure Node102 begin
   Reply(3012);
   NOption(3013,Node103,004);
end

procedure Node103 begin
   Reply(3014);
   NOption(3015,Node1000,004);
end

procedure Node104 begin
   Reply(3020);
   NOption(3021,Node105,004);
   NOption(3022,Node105,004);
end

procedure Node105 begin
   Reply(3023);
   NOption(3024,Node106,004);
end

procedure Node106 begin
   Reply(3025);
   NOption(3026,Node107,004);
end

procedure Node107 begin
   Reply(3027);
   NOption(3028,Node108,004);
   NOption(3029,Node1000,004);
end

procedure Node108 begin
   Reply(3030);
   NOption(3031,Node109,004);
end

procedure Node109 begin
   Reply(3032);
   NOption(3033,Node110,004);
end

procedure Node110 begin
   Reply(3034);
   NOption(3035,Node111,004);
end

procedure Node111 begin
   Reply(3036);
   NOption(3037,Node112,004);
   NOption(3038,Node1000,004);
end

procedure Node112 begin
   Reply(3039);
   NOption(3040,Node113,004);
end

procedure Node113 begin
   Reply(3041);
   NOption(3042,Node1000,004);
end

procedure Node200 begin
   Reply(3101);
   NOption(3102,Node201,004);
end

procedure Node201 begin
   Reply(3103 + dude_is_female);
   NOption(g_mstr(353),Node202,004);
end

procedure Node202 begin
   set_local_var(LVAR_Gave_Bonus,1);
   critter_mod_skill(dude_obj, SKILL_SPEECH, 15);
   critter_mod_skill(dude_obj, SKILL_BARTER, 15);
   game_time_advance(2*ONE_GAME_HOUR);

   Reply(3105);
   NOption(3106,Node1000,004);
end

procedure Node300 begin
   if (local_var(LVAR_Vault_Times_Asked) == 0) then
      Reply(1210);
   else if (local_var(LVAR_Vault_Times_Asked) == 1) then
      Reply(1220);
   else if (local_var(LVAR_Vault_Times_Asked) == 2) then
      Reply(1230);

   NOption(1211,Node1000,004);
   set_local_var(LVAR_Vault_Times_Asked,local_var(LVAR_Vault_Times_Asked) + 1);
end

procedure Node301 begin
   Reply(1240);
   NOption(1241,Node302,004);
end

procedure Node302 begin
   Reply(1242);
   NOption(1243,Node303,004);
end

procedure Node303 begin
   Reply(1244);
   NOption(1245,Node1000,004);
   set_local_var(LVAR_Vault_Times_Asked,local_var(LVAR_Vault_Times_Asked) + 1);
end

procedure Node304 begin
   variable tmp;

   //tmp := random(1,6);

   if (local_var(LVAR_Story_Count) == 0) then
      call Node305;
   else if (local_var(LVAR_Story_Count) == 1) then
      call Node306;
   else if (local_var(LVAR_Story_Count) == 2) then
      call Node309;
   else if (local_var(LVAR_Story_Count) == 3) then
      call Node311;
   else if (local_var(LVAR_Story_Count) == 4) then
      call Node313;
   else if (local_var(LVAR_Story_Count) == 5) then
      call Node315;

   set_local_var(LVAR_Story_Count,(local_var(LVAR_Story_Count) + 1));
   //count += 1;

end

procedure Node305 begin
   Reply(1250);
   NOption(1251,Node1000,004);
end

procedure Node306 begin
   Reply(1260);
   NOption(1261,Node307,004);
end

procedure Node307 begin
   Reply(1262);
   NOption(1263,Node308,004);
end

procedure Node308 begin
   Reply(1264);
   NOption(1265,Node1000,004);
end

procedure Node309 begin
   Reply(1270);
   NOption(1271,Node310,004);
end

procedure Node310 begin
   Reply(1272);
   NOption(1273,Node1000,004);
end

procedure Node311 begin
   Reply(1280);
   NOption(1281,Node312,004);
end

procedure Node312 begin
   Reply(1282);
   NOption(1283,Node1000,004);
end

procedure Node313 begin
   Reply(1290);
   NOption(1291,Node314,004);
end

procedure Node314 begin
   Reply(1292);
   NOption(1293,Node1000,004);
end

procedure Node315 begin
   Reply(1300);
   NOption(1301,Node316,004);
end

procedure Node316 begin
   Reply(1302);
   NOption(1303,Node1000,004);
end
