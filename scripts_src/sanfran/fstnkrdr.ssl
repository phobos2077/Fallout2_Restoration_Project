/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/******************************************************************************************
        Item: Tanker Door
        Description: Closes after thirty seconds from being open

        Log:
           Please note any changes that have been made to the file in Updated. Then comment
           the code which you have changed/altered/commented out. Please, do not delete any
           code which was written.

           Created: September 26, 1997

           Updated:
******************************************************************************************/


/* Include Files */
#define SCRIPT_REALNAME "fstnkrdr"
#include "../headers/define.h"

#define NAME                    SCRIPT_FSTNKRDR
#define CUR_COMP_SCRIPT         SCRIPT_FSTNKRDR

#include "../headers/command.h"

/* Standard Script Procedures */
procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;

/*****************************************************************
   Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_
*****************************************************************/

/*******************************************************************
   Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_)
*******************************************************************/
#define LVAR_Open_Time                       (0)

#define TIMER_CHECK_DOOR 1
#define TIMER_CHECK_STATE 2

/*******************************************************************
   Local variables which do not need to be saved between map changes.
*******************************************************************/


/*******************************************************************
*******                         PROCEDURES                   *******
*******************************************************************/


/*******************************************************************
   The start procedure is the first procedure called when the map is
   first entered. Any initial information that needs to be set up
   should be placed in here.
*******************************************************************/

procedure start begin
end

procedure timed_event_p_proc begin
   if (fixed_param == TIMER_CHECK_DOOR) then begin
      if (local_var(LVAR_Open_Time) != 0) then begin
         if (game_time - local_var(LVAR_Open_Time) > (ONE_GAME_SECOND * 30)) then begin
            if (not tile_get_next_critter(self_tile, 0, 0)) then begin
               set_local_var(LVAR_Open_Time, 0);
               reg_anim_clear(self_obj);
               reg_anim_begin();
               obj_close(self_obj);
               reg_anim_end();
            end else begin
               ndebug("Couldn't close door obj: " + tile_get_next_critter(self_tile, 0, 0) + " in the way.");
            end
         end
      end
      add_timer_event(self_obj, game_ticks(2), TIMER_CHECK_DOOR);
   end else if (fixed_param == TIMER_CHECK_STATE) then begin
      if (not anim_busy(self_obj)) then begin
         if (not obj_is_open(self_obj)) then begin
            ndebug("door closed");
            set_local_var(LVAR_Open_Time, 0);
         end else begin
            ndebug("door open");
            set_local_var(LVAR_Open_Time, game_time);
         end
      end else begin
         add_timer_event(self_obj, ONE_GAME_SECOND / 2, TIMER_CHECK_STATE);
      end
   end
end

/********************************************************************
********************************************************************/

procedure use_p_proc begin
   add_timer_event(self_obj, game_ticks(1), TIMER_CHECK_STATE);
end

/***************************************************************************
   This is cursory glance description that the player will receive should
   he just pass the Action Cursor over. Examines which give more information
   need to be in the description_p_proc procedure.
***************************************************************************/

procedure look_at_p_proc begin
end


/**********************************************************************************
**********************************************************************************/

procedure description_p_proc begin
end


/**********************************************************************************
   Make sure the door is working.
**********************************************************************************/

procedure use_skill_on_p_proc begin
end


/**********************************************************************************
   This is called when the player is using an object on the door. When the check is
   made to find out what is being used, obj_pid(obj_being_used_with) will need to
   be checked against a prototype.
**********************************************************************************/

procedure use_obj_on_p_proc begin
end


/******************************************************************************************
   IF it gets damaged it breaks
******************************************************************************************/

procedure damage_p_proc begin
end

/***************************************************************************************
   Whenever the map is first entered, this procedure will be called.
***************************************************************************************/

procedure map_enter_p_proc begin
   add_timer_event(self_obj, game_ticks(2), TIMER_CHECK_DOOR);
end


/**************************************************************************************
   This procedure gets called roughly every 30 seconds of real time.
**************************************************************************************/

procedure map_update_p_proc begin
end