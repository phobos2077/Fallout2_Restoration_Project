/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/******************************************************************************************
        Item: For Terminal
        Description: On the second level of the tanker in a secluded area

        Log:
           Please note any changes that have been made to the file in Updated. Then comment
           the code which you have changed/altered/commented out. Please, do not delete any
           code which was written.

           Created: September 26, 1997

           Updated:
******************************************************************************************/


/* Include Files */
#define SCRIPT_REALNAME "fsfobter"
#include "../headers/define.h"

#define NAME                    SCRIPT_FSFOBTER
#define CUR_COMP_SCRIPT         SCRIPT_FSFOBTER

#include "../headers/command.h"
#include "../headers/sftanker.h"
#include "../headers/sanfran.h"

/* Standard Script Procedures */
procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;

#define TIMER_FOBED 1
#define TIMER_UNFOB 2

/*****************************************************************
   Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_
*****************************************************************/

/*******************************************************************
   Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_)
*******************************************************************/

/*******************************************************************
   Local variables which do not need to be saved between map changes.
*******************************************************************/


/*******************************************************************
*******                         PROCEDURES                   *******
*******************************************************************/


/*******************************************************************
   The start procedure is the first procedure called when the map is
   first entered. Any initial information that needs to be set up
   should be placed in here.
*******************************************************************/

procedure start begin
end

procedure timed_event_p_proc begin
   if (fixed_param == TIMER_FOBED) then begin
      if (map_var(MVAR_Fobbed) == 0) then begin
         set_map_var(MVAR_Fobbed, 1);
         display_mstr(104);
      end else begin
         display_mstr(106);
      end
   end else if (fixed_param == TIMER_UNFOB) then begin
      if (map_var(MVAR_Fobbed) == 1) then begin
         if (tile_distance_objs(self_obj, dude_obj) <= 10) then begin
            display_mstr(105);
         end
         set_map_var(MVAR_Fobbed, 0);
      end
   end
end

/********************************************************************
********************************************************************/

procedure use_p_proc begin
   display_mstr(107);
end

/***************************************************************************
   This is cursory glance description that the player will receive should
   he just pass the Action Cursor over. Examines which give more information
   need to be in the description_p_proc procedure.
***************************************************************************/

procedure look_at_p_proc begin
   script_overrides;
   SHOW_TANKER_FOB_QST;
   display_msg(mstr(100));
end


/**********************************************************************************
**********************************************************************************/

procedure description_p_proc begin
   script_overrides;
   SHOW_TANKER_FOB_QST;
   if (map_var(MVAR_Fobbed) == 0) then begin
      display_mstr(102);
   end else begin
      display_mstr(103);
   end
end


/**********************************************************************************
   Make sure the door is working.
**********************************************************************************/

procedure use_skill_on_p_proc begin
   script_overrides;
   if (skill_success(dude_obj, SKILL_SCIENCE, 0)) then begin
      display_mstr(108);
   end else begin
      if (map_var(MVAR_Fobbed) == 0) then begin
         display_mstr(102);
      end else begin
         display_mstr(103);
      end
   end
end


/**********************************************************************************
   This is called when the player is using an object on the door. When the check is
   made to find out what is being used, obj_pid(obj_being_used_with) will need to
   be checked against a prototype.
**********************************************************************************/

procedure use_obj_on_p_proc begin
   variable tool;


   tool := obj_pid(obj_being_used_with);

   if (tool == PID_TANKER_FOB) then begin
      script_overrides;
      COMPLETE_TANKER_FOB
      if (map_var(MVAR_Fobbed) == 0) then
         add_timer_event(self_obj, 0, TIMER_FOBED);
      else
         add_timer_event(self_obj, 0, TIMER_UNFOB);
   end
end


/******************************************************************************************
   IF it gets damaged it breaks
******************************************************************************************/

procedure damage_p_proc begin
end

/***************************************************************************************
   Whenever the map is first entered, this procedure will be called.
***************************************************************************************/

procedure map_enter_p_proc begin
end


/**************************************************************************************
   This procedure gets called roughly every 30 seconds of real time.
**************************************************************************************/

procedure map_update_p_proc begin
end

/**************************************************************************************
   This is used for any dialogue that may need to occur with the player.
**************************************************************************************/

procedure talk_p_proc begin
end