/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Broken Hills Henchman A
        Location: Broken Hills
        Description:

        Log:
            SOME CARAVAN STUFF STILL NEEDS WORK..ASK COLIN...
            CHANGED ALL MAP VARS TO GLOBALS AS HENCHMAN APPEAR IN THE CARAVANS

           Created: July 1, 1998

           Updated:
*/

/* Include Files */

/* Note, the Following Lines need to be in this order so that
   the script will be compilable. The define Name is referenced
   in a module from define.h and used in command.h. Please do
   not change the ordering.
        -rwh2   11/13/97
*/
#define SCRIPT_REALNAME "hcencha"
#include "../headers/define.h"
#include "../headers/broken.h"  //broken hills defines
#include "../headers/broken1.h" //mapvars

#define NAME                    SCRIPT_HCENCHA
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BROKEN_HILLS)

#include "../headers/command.h"
#include "../headers/modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat;

/* Script Specific Procedure Calls */
procedure Node995;
procedure Node996;
procedure Node997;
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending


// The next lines are added in by the Designer Tool.
// Do NOT add in any lines here.
//~~~~~~~~~~~~~~~~ DESIGNER TOOL STARTS HERE

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;

//~~~~~~~~~~~~~~~~ DESIGN TOOL ENDS HERE
// The Following lines are for anything that is not needed to be
// seen by the design Tool


/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)
#define LVAR_Rank                       (7) //choose name and rank on first map enter
#define LVAR_Name                       (8)
#define LVAR_Counted                    (9)

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */


/* Local variables which do not need to be saved between map changes. */
variable Only_Once:=0;

procedure start begin
end

/* This procedure will get called each time that the map is first entered. It will
   set up the Team number and AI packet for this critter. This will override the
   default from the prototype, and needs to be set in scripts. */
procedure map_enter_p_proc begin
   variable item;
   variable weapon;

   Only_Once:=0;
   set_self_team(TEAM_BROKEN_HILLS);
   set_self_ai(AI_TOUGH_GUARD);

   if map_first_run then begin
      weapon := create_object(PID_COMBAT_SHOTGUN,0,0);
      add_obj_to_inven(self_obj, weapon);
      if (random(1,100) < 36) then begin //35% chance to have stimpak
         item := create_object(PID_STIMPAK,0,0);
         add_obj_to_inven(self_obj, item);
      end
      wield_obj_critter(self_obj,weapon);
   end

//Determine henchman rank and name (once only)
   if (local_var(LVAR_Counted) == 0) then begin
      set_local_var(LVAR_Counted, 1);
      set_global_var(GVAR_BH_BOSS, 200); //leader is Chad until someone dies
      set_global_var(GVAR_BH_HENCH_COUNT, global_var(GVAR_BH_HENCH_COUNT) + 1);
      set_local_var(LVAR_Rank, global_var(GVAR_BH_HENCH_COUNT)); //we have rank, now we need a name
      if ( (self_gender) == GENDER_MALE) then begin //i am male
         set_global_var(GVAR_BH_MALE_NAMES_USED, global_var(GVAR_BH_MALE_NAMES_USED) + 1);
         set_local_var(LVAR_Name, 200+global_var(GVAR_BH_MALE_NAMES_USED)); //now i know my name
      end
      else begin
         set_global_var(GVAR_BH_FEMALE_NAMES_USED, global_var(GVAR_BH_FEMALE_NAMES_USED) + 1);
         set_local_var(LVAR_Name, 300+global_var(GVAR_BH_FEMALE_NAMES_USED)); //now i know my name
      end
   end
end


/* Every heartbeat that the critter gets, this procedure will be called. Anything from
   Movement to attacking the player on sight can be placed in here.*/
procedure critter_p_proc begin

/* If the critter is mad at the player for any reason, it will attack and remember to attack
   the player should the game be saved and loaded repeatedly. Additionally, if any special
   actions need to be taken by the critter based on previous combat, the critter will remember
   this as well. */

   if ( ( ( global_var( GVAR_ENEMY_BROKEN_HILLS ) == 1 ) or (local_var(LVAR_Hostile) == 2) ) and (self_can_see_dude)) then begin
       set_local_var(LVAR_Hostile,1);
       attack(dude_obj);
   end
   //if a henchman was killed then I may change rank...this should work fine
   //for this situation...if the player is gunning all of them down this system
   //wont work but rank wont matter anymore.

   if (global_var(GVAR_BH_HENCH_KILLED) > 0) then begin
      //if I am lower in rank then I move up in rank
      //if my rank now equals zero then I am now the new boss
      if (global_var(GVAR_BH_CHECKED) < global_var(GVAR_BH_HENCH_COUNT)) then begin
         set_global_var(GVAR_BH_CHECKED,global_var(GVAR_BH_CHECKED)+1); //I've been checked
         if ( (global_var(GVAR_BH_RANK_KILLED) - 1) < (local_var(LVAR_Rank)) ) then begin
            set_local_var(LVAR_Rank, local_var(LVAR_Rank) - 1);
            if (local_var(LVAR_Rank) == 0) then begin //I am the new boss
               set_global_var(GVAR_BH_BOSS, local_var(LVAR_Name)); //me me me
            end
         end
      end
      else begin //if all henchmen have been checked
         set_global_var(GVAR_BH_HENCH_KILLED,0);
         set_global_var(GVAR_BH_CHECKED,0); //reset checked so we can count thru henchman again next time
      end

   end //of hench killed

end

/* Whenever the critter takes damage of any type, this procedure will be called. Things
   like setting ENEMY_ and LVAR_Personal_Enemy can be set here. */
procedure damage_p_proc begin

/* If the player causes damage to this critter, then he will instantly consider the player
   his personal enemy. In Critter_Proc or through dialog, actions will be taken against
   the player for his evil acts. */

   if (source_obj == dude_obj) then begin
       set_local_var(LVAR_Personal_Enemy,1);
       set_global_var(GVAR_ENEMY_BROKEN_HILLS,1);
   end

end

/* Any time that the player is caught stealing from this critter, Pickup_proc will be called.
   In here, various things can happen. The most common response is instant hostility which
   will be remembered. */
procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
       set_local_var(LVAR_Hostile,2);
   end
end

/* The dialog system is setup and prepares the player to talk to this NPC. Where To Go
   written by designers are placed in here. Additionally, Reactions are generated and
   stored which affects player interactions. */
procedure talk_p_proc begin
   GetReaction;


   if (local_var(LVAR_Personal_Enemy) == 1) then begin
       call Node998;
   end

   else if (global_var(GVAR_ENEMY_BROKEN_HILLS) == 1) then begin
      call Node020;
   end

   else if (global_var(GVAR_BH_CARAVAN) == CARAVAN_HOME) then begin
       start_gdialog(NAME,self_obj,4,-1,-1);
       gSay_Start;
           call Node019;
       gSay_End;
       end_dialogue;
   end

   else if (global_var(GVAR_BH_CARAVAN) == CARAVAN_GOING_HOME) then begin
       start_gdialog(NAME,self_obj,4,-1,-1);
       gSay_Start;
           call Node018;
       gSay_End;
       end_dialogue;
   end

   else if (global_var(GVAR_BH_CARAVAN) == CARAVAN_DEST_REACHED) then begin
       start_gdialog(NAME,self_obj,4,-1,-1);
       gSay_Start;
           call Node017;
       gSay_End;
       end_dialogue;
   end
/*
   else if (global_var(GVAR_BH_SENIOR_GUARD) == local_var(LVAR_rank)) then begin
       if ( (global_var(GVAR_BH_CHAD) == CHAD_ARRESTED) or (global_var(GVAR_BH_CHAD) == CHAD_KILLED) ) then begin
          start_gdialog(NAME,self_obj,4,-1,-1);
          gSay_Start;
           call Node014;
          gSay_End;
          end_dialogue;
      end
   end
*/

   else begin
       start_gdialog(NAME,self_obj,4,-1,-1);
       gSay_Start;
             if (local_var(LVAR_Herebefore) == 0) then begin
                call Node001;
             end
             else begin
                if ( dude_is_stupid ) then begin
                   call Node002;
                end
                else begin
                   call Node001;
                end
             end
       gSay_End;
       end_dialogue;
   end

end

/* This procedure gets called only on the death of this NPC. Special things like
   incrementing the death count for reputation purposes and Enemy Counters are placed
   in here. */
procedure destroy_p_proc begin
   set_global_var(GVAR_BH_HENCH_KILLED,1);
   set_global_var(GVAR_BH_RANK_KILLED, local_var(LVAR_Rank));
   set_global_var(GVAR_BH_HENCH_COUNT, global_var(GVAR_BH_HENCH_COUNT) - 1); //we've got one less henchman
/* Increment the aligned critter counter*/
   inc_good_critter

/* Set global_variable for Enemy status*/
end

/* Look_at_p_proc gets called any time that the player passes the cursor over any object.
   This should only hold the most cursory of glances for the player. */
procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

/* The player will see more indepth descriptions from this procedure. They are actively
   looking at the critter and want more information. Things like names can be added here
   if the critter is known to the player. */
procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(101) + mstr(local_var(LVAR_Name)) + mstr(150));
end

/* Any time a skill is used on a critter this call is made. This can be to give examinations
   for things like Doctor skill or messages for various other skills. */
procedure use_skill_on_p_proc begin
end

procedure combat begin
end

procedure Node920 begin
//
end

procedure Node995 begin
   if (dude_charisma >= 7) then begin
       TopReact;
   end
   else begin
       BottomReact;
   end
end

procedure Node996 begin
   BottomReact;
end

procedure Node997 begin
   if (dude_charisma >= 8) then
       call Node004;
   else
       call Node005;
end

/* Should the Player ever cause the NPC too much discomfort that he desires to attack the player,
   this call will be made. Essentially, it stores the Hostile vaule so that the critter remembers
   he was once hostile towards the player.*/
procedure Node998 begin
   set_local_var(LVAR_Hostile,2);
end

/* Anytime that there is a need for an ending to dialog, this node is to be called. It will just
   exit from the dialog system without any reprisals from the NPC. */
procedure Node999 begin
end

// Not lines are allowed to be added below here
// The Following lines are from the Design Tool
//~~~~~~~~~~~~~~~~ DESIGN TOOL STARTS HERE

procedure Node001 begin
   Reply(103);
   giQ_Option(-1,NAME,104,Node002,NEUTRAL_REACTION);
   if dude_moron_not_vegetable then
      NOption(105,Node002,002);
   NOption(106,Node003,004);
/*
   //FIX NBK
   //if Chad=suspicious,rumor,rumor_Gecko,rumor_BrokenHills then
   if ( (global_var(GVAR_BH_CHAD) == CHAD_SUSPICIOUS) or
        (global_var(GVAR_BH_CHAD) == CHAD_RUMOR_GECKO) or
        (global_var(GVAR_BH_CHAD) == CHAD_RUMOR_BROKENHILLS) ) then
      NOption(107,Node004,004);
*/
   NOption(108,Node005,004);
/*
   if ( (global_var(GVAR_BH_CHAD) == CHAD_ARRESTED) or (global_var(GVAR_BH_CHAD) == CHAD_KILLED) ) then
      NOption(109,Node007,004);
*/
   NOption(110,Node999,004);
end

procedure Node002 begin
   Reply(111);
   NOption(112,Node999,001);
end

procedure Node003 begin
   Reply(mstr(113) + mstr(global_var(GVAR_BH_BOSS)) + mstr(153));
   NOption(114,Node008,004);
   NOption(115,Node009,004);
end

procedure Node004 begin
   Reply(116);
   NOption(117,Node010,004);
   NOption(118,Node011,004);
   NOption(119,Node012,004);
   NOption(120,Node013,004);
   NOption(121,Node999,004);
end

procedure Node005 begin
   Reply(mstr(122) + mstr(local_var(LVAR_Name)) + mstr(151));
   NOption(114,Node001,004);
   NOption(115,Node999,004);
end

procedure Node007 begin
   Reply(mstr(123) + mstr(global_var(GVAR_BH_BOSS)) + mstr(154));
   NOption(124,Node999,004);
end

procedure Node008 begin
   Reply(125);
   NOption(126,Node999,004);
end

procedure Node009 begin
   Reply(127);
   NOption(124,Node999,004);
end

procedure Node010 begin
   Reply(128);
   NOption(114,Node004,004);
   NOption(115,Node999,004);
end

procedure Node011 begin
   Reply(129);
   NOption(114,Node004,004);
   NOption(115,Node999,004);
end

procedure Node012 begin
   Reply(130);
   NOption(114,Node004,004);
   NOption(115,Node999,004);
end

procedure Node013 begin
   Reply(131);
   NOption(114,Node004,004);
   NOption(115,Node999,004);
end

procedure Node014 begin
   Reply(132);
   NOption(133,Node015,004);
   NOption(134,Node016,004);
   NOption(135,Node015,004);
   NOption(136,Node999,004);
end

procedure Node015 begin
   Reply(137);
   NOption(138,Node999,004);
end

procedure Node016 begin
   Reply(139);
   NOption(114,Node014,004);
   NOption(115,Node999,004);
end

procedure Node017 begin
   set_global_var(GVAR_BH_CARAVAN, CARAVAN_GOING_HOME);
   dude_caps_adjust(500);
   Reply(140);
   NOption(141,Node999,004);
end

procedure Node018 begin
   Reply(142);
   NOption(114,Node920,004); //begin caravan route home. when reached, set caravan=home
   NOption(115,Node999,004);
end

procedure Node019 begin
   set_global_var(GVAR_BH_CARAVAN,0);
   Reply(143);
   NOption(141,Node999,004);
end

procedure Node020 begin
   floater(144);
end
//xxxxxxxxxxxxxxxxxxxx
