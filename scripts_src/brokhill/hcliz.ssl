/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Liz
        Location: Broken Hills
        Description:

        Log:
            MISSING SOME CODE IN NODE001.

           Created: June 4, 1998

           Updated:
*/

/* Include Files */

/* Note, the Following Lines need to be in this order so that
   the script will be compilable. The define Name is referenced
   in a module from define.h and used in command.h. Please do
   not change the ordering.
        -rwh2   11/13/97
*/
#define SCRIPT_REALNAME "hcliz"
#include "../headers/define.h"
#include "../headers/broken1.h"
#include "../headers/rpu.h"

#define NAME                    SCRIPT_HCLIZ
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BROKEN_HILLS)

#include "../headers/command.h"
#include "../headers/modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat;

/* Script Specific Procedure Calls */
procedure Node995;
procedure Node996;
procedure Node997;
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending


// The next lines are added in by the Designer Tool.
// Do NOT add in any lines here.
//~~~~~~~~~~~~~~~~ DESIGNER TOOL STARTS HERE

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node006a;
procedure Node007;
procedure Node007a;
procedure Node007b;
procedure Node008;
procedure Node008a;
procedure Node009;
procedure Node010;
procedure Node010a;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node016a;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
//added by killap - expansion (K9 armor)
procedure Node030;
procedure Node031;
procedure Node032;
//end added


//~~~~~~~~~~~~~~~~ DESIGN TOOL ENDS HERE
// The Following lines are for anything that is not needed to be
// seen by the design Tool


/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)
#define LVAR_Down_React_1               (7)
#define LVAR_Down_React_2               (8)
#define LVAR_Steal_Warning              (9)
#define LVAR_Basement_Warning           (10)
#define LVAR_Sold_K9_Armor              (11) //added by killap - expansion (k9 armor)

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */


/* Local variables which do not need to be saved between map changes. */
variable Only_Once:=0;
variable From_7:=0;
variable From_WTG:=0;
variable do_replace := 0;

import variable broken_hills_liz_box;
import variable broken_hills_temp_box;

#define move_inven_to_box              move_obj_inven_to_obj(self_obj, broken_hills_liz_box);
#define move_inven_from_box            move_obj_inven_to_obj(broken_hills_liz_box, self_obj);
#define move_inven_to_temp_box         move_obj_inven_to_obj(self_obj, broken_hills_temp_box);
#define move_inven_from_temp_box       move_obj_inven_to_obj(broken_hills_temp_box, self_obj);

procedure start begin
end

/* This procedure will get called each time that the map is first entered. It will
   set up the Team number and AI packet for this critter. This will override the
   default from the prototype, and needs to be set in scripts. */
procedure map_enter_p_proc begin
   variable time;
   Only_Once:=0;
   set_self_team(TEAM_RACIST);
   set_self_ai(AI_TOUGH_CITIZEN);

   // Place Liz based on time of day.
   time := game_time_hour;
   if( (time >= 800) and (time < 2000) ) then begin
      // In the day, place her behind the counter.
      move_to( self_obj, 12718, 0 );
      self_rotate(1);
   end
   else begin
      // In the day, place her by the bed.
      move_to( self_obj, 11316, 0 );
      self_rotate(3);
   end
end


/* Every heartbeat that the critter gets, this procedure will be called. Anything from
   Movement to attacking the player on sight can be placed in here.*/
procedure critter_p_proc begin
   variable time;
/* If the critter is mad at the player for any reason, it will attack and remember to attack
   the player should the game be saved and loaded repeatedly. Additionally, if any special
   actions need to be taken by the critter based on previous combat, the critter will remember
   this as well. */

   if ( ( ( global_var( GVAR_ENEMY_CONSPIRATORS ) == 1 ) or (local_var(LVAR_Hostile) == 2) ) and (self_can_see_dude)) then begin
       set_local_var(LVAR_Hostile,1);
       attack(dude_obj);
   end





   // Move Liz at the appropriate times.
   time := game_time_hour;
   if( (time >= 800) and (time < 2000)) then begin
      // Go to work.
      //added by killap
      reg_anim_begin();
         self_walk_to_tile(12718);
      reg_anim_end();
      //end added by killap
      //reg_anim_obj_move_to_tile( self_obj, 12718, -1 );
      //animate_rotation( 1 );
   end
   else begin
      // Go to bed.
      //added by killap
      reg_anim_begin();
         self_walk_to_tile(11316);
      reg_anim_end();
      //end added by killap
      //reg_anim_obj_move_to_tile( self_obj, 11316, -1 );
      //animate_rotation( 3 );
   end

   if( map_var( MVAR_Stealing_From_Liz ) == 1 ) then begin
      if( local_var( LVAR_Steal_Warning ) == 0 ) then begin
         set_map_var( MVAR_Stealing_From_Liz, 0 );
         set_local_var( LVAR_Steal_Warning, 1 );
         if( (time >= 800) and (time < 2000) ) then
            floater( 174 );
         else
            floater( 185 );
      end
      else begin
         set_map_var( MVAR_Stealing_From_Liz, 0 );
         if( (time >= 800) and (time < 2000) ) then
            floater( 175 );
         else
            floater( 186 );
         call Node998;
      end
   end

   if( map_var(MVAR_Player_Tried_Basement) == 1 ) then begin
      set_map_var( MVAR_Player_Tried_Basement, 0 );
      if( ( map_var( MVAR_Basement_Permission ) == 0 ) or (map_var( MVAR_Basement_Permission ) == 2) )then begin //edit by killap - added or (map_var( MVAR_Basement_Permission ) == 2)
         if( local_var(LVAR_Basement_Warning) == 0 ) then begin
            set_local_var(LVAR_Basement_Warning, 1);
            floater(179);
         end
         else if( local_var(LVAR_Basement_Warning) == 1 ) then begin
            set_local_var(LVAR_Basement_Warning, 2);
            floater(180);
         end
         else begin
            floater(181);
            call Node998;
         end
      end
   end
end

/* Whenever the critter takes damage of any type, this procedure will be called. Things
   like setting ENEMY_ and LVAR_Personal_Enemy can be set here. */
procedure damage_p_proc begin

/* If the player causes damage to this critter, then he will instantly consider the player
   his personal enemy. In Critter_Proc or through dialog, actions will be taken against
   the player for his evil acts. */
   if (source_obj == dude_obj) then begin
       set_local_var(LVAR_Personal_Enemy,1);
       set_global_var( GVAR_ENEMY_CONSPIRATORS, 1 );
       set_global_var(GVAR_ENEMY_BROKEN_HILLS,1);
   end

end

/* Any time that the player is caught stealing from this critter, Pickup_proc will be called.
   In here, various things can happen. The most common response is instant hostility which
   will be remembered. */
procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
       set_local_var(LVAR_Hostile,2);
   end
end

/* The dialog system is setup and prepares the player to talk to this NPC. Where To Go
   written by designers are placed in here. Additionally, Reactions are generated and
   stored which affects player interactions. */
procedure talk_p_proc begin
   variable time;

   time := game_time_hour;
   From_WTG := 1;

   GetReaction;
   ReactToLevel; //added by killap

   //if ( not(bad_critter_reaction) ) then begin -- comment out by killap
      do_replace := 1;
      move_inven_to_temp_box
      move_inven_from_box
   //end

   if (local_var(LVAR_Personal_Enemy) == 1) then begin
       call Node998;
   end
   else if( (time >= 2000) or (time < 800) ) then
      call Node023;
   else if (bad_critter_reaction) then begin
       start_gdialog(NAME,self_obj,4,-1,-1);
       gSay_Start;
           call Node022;
       gSay_End;
       end_dialogue;
   end
   else begin
       start_gdialog(NAME,self_obj,4,-1,-1);
       gSay_Start;
             if (local_var(LVAR_Herebefore) == 0) then begin
                call Node001;
             end
             else begin
                if ( (dude_iq == 2) or (dude_iq == 3) ) then begin
                   call Node003;
                end
                else if (dude_iq == 1) then begin
                   call Node002;
                end
                else begin
                   call Node001;
                end
             end
       gSay_End;
       end_dialogue;
      set_local_var( LVAR_Herebefore, 1 );
   end

   if( do_replace == 1 ) then begin
      do_replace := 0;
      move_inven_to_box
      move_inven_from_temp_box
   end

end

/* This procedure gets called only on the death of this NPC. Special things like
   incrementing the death count for reputation purposes and Enemy Counters are placed
   in here. */
procedure destroy_p_proc begin

/* Increment the aligned critter counter*/
   //move_obj_inven_to_obj(broken_hills_liz_box,self_obj); --comment out by killap
   set_map_var( MVAR_Liz_Dead, 1 );

   inc_good_critter

/* Set global_variable for Enemy status*/
end

/* Look_at_p_proc gets called any time that the player passes the cursor over any object.
   This should only hold the most cursory of glances for the player. */
procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

/* The player will see more indepth descriptions from this procedure. They are actively
   looking at the critter and want more information. Things like names can be added here
   if the critter is known to the player. */
procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(101));
end

/* Any time a skill is used on a critter this call is made. This can be to give examinations
   for things like Doctor skill or messages for various other skills. */
procedure use_skill_on_p_proc begin
end

procedure combat begin
end

/*
procedure Node910 begin
//if player money < 5 goto 13 and set nogive
//else goto 5 subtract 5 coins and set give
   if (dude_caps > 4) then begin
      dude_caps_adjust(-5); //subtract 5 coins
      set_local_var(LVAR_Give, 1);
      call Node005;
   end
   else begin
      //set_local_var(LVAR_Nogive,1);
      call Node013;
   end
end
*/
procedure Node995 begin
   if (dude_charisma >= 7) then begin
       TopReact;
   end
   else begin
       BottomReact;
   end
end

procedure Node996 begin
   BottomReact;
end

procedure Node997 begin
   if (dude_charisma >= 8) then
       call Node004;
   else
       call Node005;
end

/* Should the Player ever cause the NPC too much discomfort that he desires to attack the player,
   this call will be made. Essentially, it stores the Hostile vaule so that the critter remembers
   he was once hostile towards the player.*/
procedure Node998 begin
   set_local_var(LVAR_Hostile,2);
   // attack( dude_obj ); // Commented out by Seraph
end

/* Anytime that there is a need for an ending to dialog, this node is to be called. It will just
   exit from the dialog system without any reprisals from the NPC. */
procedure Node999 begin
end

procedure Node001 begin
   variable dogmeat_armor_enabled := rpu_msetting(set_dogmeat_armor);
   if( local_var(LVAR_Herebefore) == 1 ) then begin
      // Only display this Reply if we have already met Liz.
      Reply(104);
   end
   else begin
      set_local_var( LVAR_Herebefore, 1 );
      Reply(103);
   end

   if (dude_iq_talk == 1) then
      NOption(105, Node002, 001);
   if (dude_iq_talk == 2) or (dude_iq_talk == 3) then
      NOption(106,Node003,002);
   NOption(107,Node007,004);
   NOption(108,Node008,004);
   if ( check_general_rep <= KARMA_BETRAYER) then
      NOption(109,Node009,004);
   if ( ( map_var(MVAR_Know_Liz_Guns) == 1 ) and ( map_var( MVAR_Basement_Permission ) == 0 ) ) then
      NOption(110,Node010,004);

   //added by killap - expansion (k9 armor)
   if ((local_var(LVAR_Sold_K9_Armor) == 0) and dogmeat_armor_enabled) then
      NOption(200,Node030,004);
   //end

   NOption(112,Node999,004);
end

procedure Node002 begin
   move_obj_inven_to_obj(self_obj, broken_hills_liz_box); //added by killap
   Reply(113);
   NLowOption(114,Node999);
end

procedure Node003 begin
   Reply(115);
   NOption(116,Node004,002);
   NOption(117,Node999,002);
end

procedure Node004 begin
   Reply(118);
   NOption(119,Node005,002);
   NOption(120,Node999,002);
end

procedure Node005 begin
   Reply(121);
   NOption(122,Node006,002);
end

procedure Node006 begin
   variable money;
   variable ten_percent;

   gdialog_mod_barter(0);

 //remove $10 or 10% whichever greater
   money:=dude_caps;
   ten_percent := money/10;

   // Liz takes a service charge of 10% of your total caps or $10
   // whichever is greater.

   // If the service charge is less than $10, take the rest of the player's caps
   if( ten_percent < 10 ) then
      dude_caps_adjust( -dude_caps);
   else
      dude_caps_adjust( -ten_percent);

   Reply(183);
   NLowOption(184, Node006a);
end

procedure Node006a begin
   Reply(123);
   NLowOption(124,Node999);
end

procedure Node007 begin
   From_7:=1;
   NMessage(125); //open barter screen

   call Node007a;
end

procedure Node007a begin
   gdialog_mod_barter(0);

   Reply(183);
   NOption(184, Node007b, 004);
end

procedure Node007b begin
   Reply(182);

   NOption(126, Node001, 004);
   NOption(127, Node999, 004);
end

procedure Node008 begin
   Reply(128);
   NOption(129,Node008a,004); //react down small
   NOption(130,Node999,004);
end

procedure Node008a begin
   if( local_var(LVAR_Down_React_1) == 0 ) then begin
      set_local_var( LVAR_Down_React_1, 1 );
      DownReactMinor;
   end
   call Node001;
end

procedure Node009 begin
   Reply(131);
   NOption(132,Node011,004);
   NOption(133,Node012,004);
   BOption(134,Node998,004);
   NOption(135,Node013,004);
   NOption(136,Node999,004);
end

procedure Node010 begin
   Reply(137);

   if( map_var( MVAR_Jacob_Told_About_Guns ) == 1 ) then
      NOption(138,Node014,004);
   NOption(139,Node015,004);
   if( map_var( MVAR_Phil_Told_About_Guns ) == 1 ) then
      NOption(140,Node010a,004);
end

procedure Node010a begin
   if( is_success(roll_vs_skill( dude_obj, SKILL_SPEECH, 0 )) ) then
      call Node014;
   else
      call Node024;
end

procedure Node011 begin
   Reply(141);
   NOption(142,Node999,004);
end

procedure Node012 begin
   Reply(143);
   BOption(144,Node016,004);
   BOption(145,Node017,004);
   GOption(146,Node018,004);
   NOption(147,Node019,004);
end

procedure Node013 begin
   Reply(148);
   NOption(149,Node012,004);
   NOption(150,Node018,004);
   NOption(151,Node018,004);
end

procedure Node014 begin
   Reply(152);
   NOption(153,Node020,004);
   NOption(154,Node021,004);
end

procedure Node015 begin
   /* Commented out by Seraph
   NMessage(155);
   call Node998; */
   move_obj_inven_to_obj(self_obj, broken_hills_liz_box); //added by killap
   Reply(155);               // Seraph's Code
   BOption(156,Node998,004); // Seraph's Code
end

procedure Node016 begin
   Reply(157);
   NOption(158,Node016a,004); //react down small
end

procedure Node016a begin
   move_obj_inven_to_obj(self_obj, broken_hills_liz_box); //added by killap
   if( local_var(LVAR_Down_React_2) == 0 ) then begin
      set_local_var( LVAR_Down_React_2, 1 );
      DownReactMinor;
   end
   call Node999;
end

procedure Node017 begin
   Reply(159);
   NOption(160,Node001,004);
   NOption(161,Node999,004);
end

procedure Node018 begin
   Reply(162);
   NOption(163,Node999,004);
end

procedure Node019 begin
   Reply(164);
   NOption(165,Node999,004);
end

procedure Node020 begin
   set_map_var(MVAR_Basement_Permission, 1);
   Reply(166);
   NOption(167,Node999,004);
end

procedure Node021 begin
   set_map_var(MVAR_Basement_Permission, 2);
   Reply(168);
   NOption(169,Node001,004);
   NOption(170,Node999,004);
end

procedure Node022 begin
   move_obj_inven_to_obj(self_obj, broken_hills_liz_box); //added by killap
   From_WTG := 0;

   BMessage(171);
   call Node999;
end

procedure Node023 begin
   floater(173);
end

procedure Node024 begin
   move_obj_inven_to_obj(self_obj, broken_hills_liz_box); //added by killap
   set_map_var(MVAR_Basement_Permission, 2);
   BMessage(178);
   call Node998;
end

//added by killap - expansion (k9 armor)
procedure Node030 begin
  if (Dogmeat_In_Party) then begin
    Reply(201);
    //op_gsay_reply(597, 201);
    NOption(202,Node031,004);
    NOption(203,Node007,004);
    //op_giq_option(4, 597, 202, @Node031, 50);
    //op_giq_option(4, 597, 203, @Node007, 50);
  end else begin
    //op_gsay_reply(597, 204);
    Reply(204);
    NOption(205,Node007,004);
    //op_giq_option(4, 597, 205, @Node007, 50);
  end
end

procedure Node031 begin
   variable armor;
   if (dude_caps > 1999) then begin
    set_local_var(LVAR_Sold_K9_Armor,1);
    dude_caps_adjust(-2000);
    //op_item_caps_adjust(op_dude_obj(), -2000);
    //op_item_caps_adjust(op_self_obj(), 2000);
    armor:=create_object(PID_K9_KEVLAR,0,0);
    add_obj_to_inven(dude_obj,armor);
    //op_add_obj_to_inven(op_dude_obj(), op_create_object(571, op_tile_num(op_dude_obj()), 0, -1));
    call Node999;
   end else begin
    call Node032;
   end
end

procedure Node032 begin
  Reply(206);
  //op_gsay_reply(597, 206);
  NOption(207,Node006,004);
  NOption(208,Node999,004);
  //op_giq_option(4, 597, 207, @Node006, 50);
  //op_giq_option(4, 597, 208, @Node999, 50);
end
//end
//xxxxxxxxxxxxxxxxxxxx
