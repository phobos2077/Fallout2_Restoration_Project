/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Marcus
        Location: Broken Hills
        Description:

        Log:
           Please note any changes that have been made to the file in Updated. Then comment
           the code which you have changed/altered/commented out. Please, do not delete any
           code which was written.

           Created: June 4, 1998

           Updated:
*/

/* Include Files */

/* Note, the Following Lines need to be in this order so that
   the script will be compilable. The define Name is referenced
   in a module from define.h and used in command.h. Please do
   not change the ordering.
        -rwh2   11/13/97
*/
#define SCRIPT_REALNAME "hcmarcus"
#include "../headers/define.h"
#include "../headers/broken.h"
#include "../headers/broken1.h"
#include "../headers/newr1.h" //added by killap

#define NAME                    SCRIPT_HCMARCUS
#define TOWN_REP_VAR            (GVAR_TOWN_REP_BROKEN_HILLS)

#define PARTY_NODE_X                   Node1000

#include "../headers/command.h"
#include "../headers/modreact.h"
#include "../headers/partybkg.h"
#include "../headers/newreno.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_update_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure combat;
procedure push_p_proc;

/* Script Specific Procedure Calls */

procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending


// The next lines are added in by the Designer Tool.
// Do NOT add in any lines here.
//~~~~~~~~~~~~~~~~ DESIGNER TOOL STARTS HERE

procedure Node001;
procedure Node001a;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node007a;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node015a;
procedure Node015Branch;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node021a;
procedure Node021b;
procedure Node021c;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node025a;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node029a;
procedure Node029b;
procedure Node030;
procedure Node030a;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node038a;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node042a;
procedure Node043;
procedure Node043a;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node046a;
procedure Node047;
procedure Node048;
procedure Node049;
procedure Node050;

procedure Node113;
procedure Node113a;
procedure Node114;
procedure Node114a;
procedure Node114b;
procedure Node115;
procedure Node116;
procedure Node116a;
procedure Node117;

// party member default nodes
procedure Node1000;
procedure Node1001;
procedure Node1002;
procedure Node1003;
procedure Node1004;
procedure Node1005;
procedure Node1006;
procedure Node1007;
procedure Node1008;
procedure Node1009;
procedure Node1010;
procedure Node1100;

procedure Node1101;
procedure Node1102;
procedure Node1103;

procedure Node2000;
procedure Node2001;
procedure Node2002;
procedure Node2003;
procedure Node2004;
procedure Node2005;
procedure Node2006;
procedure Node2007;
procedure Node2008;
procedure Node2009;
procedure Node2010;
procedure Node2011;
procedure Node2012;
procedure Node2013;
procedure Node2014;
procedure Node2015;
procedure Node2016;
procedure Node2017;
procedure Node2018;
procedure Node2019;

procedure Node2020; //added by killap - expansion pack
procedure Node2021; //added by killap - expansion pack
procedure Put_Chad_In_Jail; //added by killap - expansion pack


procedure Put_Conspiracy_In_Jail;

#define check_bad_area(map, elev)         ((cur_map_index == map) and ((self_elevation == elev) or (elev == -1)))
#define marcus_doesnt_like_area            ((check_bad_area(MAP_RAIDERS_CAMP1, -1)) or           \
                                           (check_bad_area(MAP_KLAMATH_TOXICCAVES, -1)) or              \
                                           (check_bad_area(MAP_KLAMATH_RATCAVES, -1)) or            \
                                           (check_bad_area(MAP_SAN_FRAN_TANKER, 1)) or    \
                                           (check_bad_area(MAP_GHOST_FARM, -1)) or         \
                                           (check_bad_area(MAP_REDDING_MINE_TUNNEL, -1)) or         \
                                           (check_bad_area(MAP_SIERRA_BATTLE, -1)))      // *** finish

#define marcus_is_poisoned                    (get_poison(self_obj))
#define marcus_is_irradiated                  (self_rads)
#define marcus_is_crippled                    ((critter_state(self_obj) bwand DAM_CRIP_LEG_LEFT)  or \
                                                (critter_state(self_obj) bwand DAM_CRIP_LEG_RIGHT) or \
                                                (critter_state(self_obj) bwand DAM_CRIP_ARM_LEFT)  or \
                                                (critter_state(self_obj) bwand DAM_CRIP_ARM_RIGHT))

#define marcus_joins_party                party_add_self;                                                   \
                                          add_timer_event(self_obj,game_ticks(1),1);                             \
                                          set_self_team(TEAM_PLAYER)
#define dude_has_free_slot_for_marcus        ((dude_at_max_party_size == false) and (Marcus_In_Party == false))
#define marcus_party_member_options          party_member_default_options


//~~~~~~~~~~~~~~~~ DESIGN TOOL ENDS HERE
// The Following lines are for anything that is not needed to be
// seen by the design Tool


/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)
#define LVAR_done_this                  (7) //make sure do doublecross one time only
#define LVAR_WAITING                    (8)
#define LVAR_FOLLOW_DISTANCE            (9)
#define LVAR_TEAM                       (10)
#define LVAR_Down_React_1               (11)
#define LVAR_Down_React_2               (12)
#define LVAR_Down_React_3               (13)
#define LVAR_Down_React_4               (14)
#define LVAR_Down_React_5               (15)
#define LVAR_Down_React_6               (16)
#define LVAR_Up_React_1                 (17)
#define LVAR_Joined_Party_Before        (18)
#define LVAR_Turned_In_Conspiracy       (19)

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */
import variable Jacob_Ptr;
import variable Aileen_Ptr;
import variable Manson_Ptr;
import variable Frank_Ptr;
import variable Jail_Door_1;
import variable Jail_Door_2;

import variable Chad_Ptr;

/* Local variables which do not need to be saved between map changes. */
variable Only_Once:=0;
variable from3or4:=0;
variable Perform_Party_Add := 0;
variable Perform_Party_Remove := 0;
variable Perform_Jailing := 0;
variable Perform_Critter_Float := 0;
variable series := 0;

procedure start begin
end

/* This procedure will get called each time that the map is first entered. It will
   set up the Team number and AI packet for this critter. This will override the
   default from the prototype, and needs to be set in scripts. */
procedure map_enter_p_proc begin
   party_member_map_enter;

   Only_Once:=0;
   Perform_Party_Add:=0;
   Perform_Party_Remove:=0;
   Perform_Jailing := 0;

   if (Marcus_In_Party) then begin
      Perform_Critter_Float := 1;
      add_timer_event( self_obj, game_ticks( random(40, 50) ), 1);
   end
   else begin
      Perform_Critter_Float := 0;
      set_self_team(TEAM_BROKEN_HILLS);

      if global_var(GVAR_BH_CONSPIRACY) == CONSPIRACY_SUCCESSFUL then
         set_obj_visibility( self_obj, true );
      else begin
         set_obj_visibility( self_obj, false );
      end
   end
end

procedure map_update_p_proc begin
end

procedure push_p_proc begin
   call Node2001;
end

procedure timed_event_p_proc begin
   variable count;
   // 1 - Standard Floats
   if( fixed_param == 1 ) then begin
      if( ( not( combat_is_initialized ) ) and
          ( self_visible ) ) then begin
         if( Marcus_Ptr != 0 ) then begin
            if( ( marcus_is_irradiated ) or
                ( marcus_is_poisoned ) ) then
               call Node2000;
            else if( marcus_is_crippled ) then
               call Node2009;
            else if( self_cur_hits <= ( (self_max_hits * 3)/4) ) then
               call Node2010;
            //added and (random(1,2) == 1) to the below checks - this way having one npc doesn't prohibit responses to other npcs - killap
            else if( (Cyberdog_Ptr != 0 ) and (random(1,2) == 1) ) then
               call Node2011;
            else if( (Lenny_Ptr != 0 ) and (random(1,2) == 1) ) then
               call Node2012;
            else if( (Myron_Ptr != 0 ) and (random(1,2) == 1) ) then
               call Node2013;
            else
               call Node2014;
         end
         else begin
            if( party_is_waiting ) then
               call Node2015;
         end
      end
      add_timer_event( self_obj, game_ticks( random(100, 125) ), 1); //edit by killap - was (40,50)
   end else if ( fixed_param == 2 ) then begin
      if (series == 1) then begin
            series := 2;
            floater(40001);
            add_timer_event(self_obj,game_ticks(5),2);
      end else if (series == 2) then begin
            series := 3;
            float_msg(Chad_Ptr, mstr(40002), FLOAT_MSG_NORMAL);
            add_timer_event(self_obj,game_ticks(3),2);
      end else if (series == 3) then begin
            series := 0;
            gfade_out(600);
            game_ui_enable;
            move_to(self_obj, 18284, 0 );
            move_to(dude_obj, 18287, 0 );
            reg_anim_clear( self_obj );
            self_rotate(3);
            //anim(self_obj, ANIMATE_ROTATION, 0 );
            call Put_Chad_In_Jail;
            gfade_in(600);
            floater(40000);
            display_msg(mstr(40003));
            give_xp(1500);
            inc_general_rep(5);
            inc_global_var_amt(GVAR_TOWN_REP_BROKEN_HILLS,5);
      end
  end
  //end added
end

/* Every heartbeat that the critter gets, this procedure will be called. Anything from
   Movement to attacking the player on sight can be placed in here.*/
procedure critter_p_proc begin
   if( Perform_Critter_Float == 1 ) then begin
      Perform_Critter_Float := 0;
      // Float an appropriate message based on where we are.
      if( marcus_doesnt_like_area ) then
         call Node2002;
      else if( ( cur_map_index == MAP_DEN_ENTRANCE ) or
               ( cur_map_index == MAP_NEW_RENO_1 ) or
               ( cur_map_index == MAP_REDDING_DOWNTOWN ) ) then
         call Node2003;
      else if( cur_map_index == MAP_SAN_FRAN_CHINATOWN ) then
         call Node2004;
      else if( cur_map_index == MAP_ENCLAVE_DOCK ) then
         call Node2005;
      else if( cur_map_index == MAP_BROKEN_HILLS1 ) then
         call Node2006;
      else if( cur_map_index == MAP_VAULTCITY_DOWNTOWN ) then
         call Node2007;
      else if( cur_map_index == MAP_VAULT_13 ) then
         call Node2008;
   end

   if ((Marcus_In_Party) and (party_is_waiting == false)) then begin
      party_member_follow_dude
   end
   //else if ( ( ( global_var( GVAR_ENEMY_BROKEN_HILLS ) == 1 ) or (local_var(LVAR_Hostile) == 2) ) and (obj_can_see_obj(self_obj,dude_obj))) then begin
   else if ( (cur_town == AREA_BROKEN_HILLS) and ( ((global_var(GVAR_ENEMY_BROKEN_HILLS) == 1) or (local_var(LVAR_Hostile) == 2)) and (self_can_see_dude) ) ) then begin //edit by killap (now only become hostile on BH maps)
       set_local_var(LVAR_Hostile,1);
       attack(dude_obj);
   end
end

/* Whenever the critter takes damage of any type, this procedure will be called. Things
   like setting ENEMY_ and LVAR_Personal_Enemy can be set here. */
procedure damage_p_proc begin

/* If the player causes damage to this critter, then he will instantly consider the player
   his personal enemy. In Critter_Proc or through dialog, actions will be taken against
   the player for his evil acts. */
   if ( (cur_town == AREA_BROKEN_HILLS) and ((source_obj == dude_obj) and (not (Marcus_In_Party))) ) then begin //added check so BH does not get hostile if Marcus attacked outside of the city
       set_local_var(LVAR_Personal_Enemy,1);
       set_global_var(GVAR_ENEMY_BROKEN_HILLS,1);
   end
end

/* Any time that the player is caught stealing from this critter, Pickup_proc will be called.
   In here, various things can happen. The most common response is instant hostility which
   will be remembered. */
procedure pickup_p_proc begin
   if ((source_obj == dude_obj) and (not (Marcus_In_Party))) then begin
       set_local_var(LVAR_Hostile,2);
   end
end

/* The dialog system is setup and prepares the player to talk to this NPC. Where To Go
   written by designers are placed in here. Additionally, Reactions are generated and
   stored which affects player interactions. */
procedure talk_p_proc begin

   Evil_Critter:=0;
   Slavery_Tolerant:=SLAVE_INTOLERANT;
   Karma_Perception:=KARMA_PERCEPTION3;

   CheckKarma; //added by killap

   GetReaction;

   ReactToLevel; //added by killap

   find_party_background;

   if (local_var(LVAR_Personal_Enemy) == 1) then begin
       call Node998;
   end
   else if ((Marcus_In_Party) or (party_is_waiting)) then begin
      start_gdialog(NAME,self_obj,4,HEAD_MARCUS,PartyMemberBackground);
      gSay_Start;
         call Node1000;
      gSay_End;
      end_dialogue;
   end
   else if (self_rep < -10) then begin
       start_gdialog(NAME,self_obj,4,HEAD_MARCUS,PartyMemberBackground);
       gSay_Start;
           call Node045;
       gSay_End;
       end_dialogue;
   end
   else if (global_var(GVAR_ENEMY_BROKEN_HILLS) == 1) then begin
      call Node050;
   end
   else if (bad_critter_reaction) then begin
       start_gdialog(NAME,self_obj,4,HEAD_MARCUS,PartyMemberBackground);
       gSay_Start;
           call Node045;
       gSay_End;
       end_dialogue;
   end
   else if ( (local_var(LVAR_done_this) == 0) and (global_var(GVAR_BH_CONSPIRACY) == CONSPIRACY_BROKEN_DOUBLECROSS) ) then begin
       set_local_var(LVAR_done_this,1);
       start_gdialog(NAME,self_obj,4,HEAD_MARCUS,PartyMemberBackground);
       gSay_Start;
           call Node049;
       gSay_End;
       end_dialogue;
   end
   else dude_wearing_vault_suit begin
       start_gdialog(NAME,self_obj,4,HEAD_MARCUS,PartyMemberBackground);
       gSay_Start;
           call Node001;
       gSay_End;
       end_dialogue;
   end
   else begin
       start_gdialog(NAME,self_obj,4,HEAD_MARCUS,PartyMemberBackground);
       gSay_Start;
             if (local_var(LVAR_Herebefore) == 0) then begin
                call Node001;
             end
             else begin
                if (dude_is_stupid) then begin
                   call Node006;
                end
                else begin
                   call Node001;
                end
             end
       gSay_End;
       end_dialogue;
   end

   //comment out by killap
   /*if( Perform_Party_Add == 1 ) then begin
      Perform_Party_Add := 0;
      party_add_self;
   end
   if( Perform_Party_Remove == 1 ) then begin
      Perform_Party_Remove := 0;
      set_party_waiting;
      set_self_team(TEAM_BROKEN_HILLS);
   end*/
   //end comment out by killap
   if( Perform_Jailing == 1 ) then begin
      Perform_Jailing := 0;
      call Put_Conspiracy_In_Jail;
   end
end

/* This procedure gets called only on the death of this NPC. Special things like
   incrementing the death count for reputation purposes and Enemy Counters are placed
   in here. */
procedure destroy_p_proc begin
   variable armor;
   set_global_var( GVAR_MARCUS_DEAD, 1 );
/* Increment the aligned critter counter*/
   inc_good_critter

   set_global_var(GVAR_ENDGAME_MOVIE_MARCUS,0);

   //added by killap - RP
   if (self_item_count(PID_MUTANT_ARMOR_WEARABLE)) then begin
      rm_obj_from_inven(self_obj, self_armor);
      destroy_object(self_item(PID_MUTANT_ARMOR_WEARABLE));
      armor := create_object(PID_MUTANT_ARMOR,0,0);
      add_obj_to_inven(self_obj,armor);
   end

/* Set global_variable for Enemy status*/
end

/* Look_at_p_proc gets called any time that the player passes the cursor over any object.
   This should only hold the most cursory of glances for the player. */
procedure look_at_p_proc begin
   script_overrides;
   if( local_var(LVAR_Herebefore) == 0 ) then
      display_msg(mstr(100));
   else
      display_msg(mstr(101));
end

/* The player will see more indepth descriptions from this procedure. They are actively
   looking at the critter and want more information. Things like names can be added here
   if the critter is known to the player. */
procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(102));
end

/* Any time a skill is used on a critter this call is made. This can be to give examinations
   for things like Doctor skill or messages for various other skills. */
procedure use_skill_on_p_proc begin
end

procedure use_obj_on_p_proc begin
   variable item;

   //added by killap
   if ( (obj_pid(obj_being_used_with) == PID_MICRO_FUSION_CELL) or (obj_pid(obj_being_used_with) == PID_SMALL_ENERGY_CELL) ) then begin
      script_overrides;
      display_msg(g_mstr(20000));
   end
   //end added


   item := obj_pid(obj_being_used_with);

   if( ( item == PID_STIMPAK ) or ( item == PID_SUPER_STIMPAK ) ) then
      call Node2016;
   else if( ( item == PID_JET ) or
            ( item == PID_MENTATS ) or
            ( item == PID_PSYCHO ) or
            ( item == PID_BUFFOUT ) ) then
      call Node2017;
   else if( ( item == PID_BEER ) or
            ( item == PID_BOOZE ) or
            ( item == PID_ROT_GUT ) or
            ( item == PID_GAMMA_GULP_BEER ) or
            ( item == PID_ROENTGEN_RUM ) ) then
      call Node2018;
   else if( item == PID_HEALING_POWDER ) then
      call Node2019;
end

procedure combat begin
end

/* Should the Player ever cause the NPC too much discomfort that he desires to attack the player,
   this call will be made. Essentially, it stores the Hostile vaule so that the critter remembers
   he was once hostile towards the player.*/
procedure Node998 begin
   set_local_var(LVAR_Hostile,2);
end

/* Anytime that there is a need for an ending to dialog, this node is to be called. It will just
   exit from the dialog system without any reprisals from the NPC. */
procedure Node999 begin
end

// Not lines are allowed to be added below here
// The Following lines are from the Design Tool
//~~~~~~~~~~~~~~~~ DESIGN TOOL STARTS HERE

procedure Node001 begin
   if (local_var(LVAR_Herebefore) == 0) then begin
      set_local_var(LVAR_Herebefore,1);
      dude_wearing_vault_suit
         Reply(103);
      else
         Reply(104);
   end
   else begin
      Reply(105);
   end

   NLowOption(106,Node003);
   NOption(107,Node007,004);
   NOption(108,Node008,004);
   NOption(109,Node014,004);

   // This entry is conditional because after a certain number of quests are
   // completed, there is no Marcus dialog saying "Nothin' else to do". Therefore,
   // we have to cut the question off at the source when the last quest is finished.
   if( global_var(GVAR_BH_MISSING) < MISSING_ACCEPT_CASH ) then begin
      if (global_var(GVAR_BH_CHAD) < CHAD_SUSPICIOUS) then
         NOption(110,Node015,004);
      else
         NOption(110,Node018,004);
   end

   NOption(111,Node023,004);
   NOption(112,Node001a,004);
   NOption(113,Node999,004);
end

procedure Node001a begin
   if ( ( (global_var(GVAR_BH_MINE) == MINE_FIXED_CASH) or (global_var(GVAR_BH_MINE) == MINE_FIXED_FREE) or (global_var(GVAR_BH_MINE) == MINE_REWARDED) ) and
        ( (global_var(GVAR_BH_CONSPIRACY) == CONSPIRACY_BROKEN_DOUBLECROSS) or (global_var(GVAR_BH_CONSPIRACY) == CONSPIRACY_BROKEN_HERO) or
          (global_var(GVAR_BH_JAIL) == JAIL_DOUBLECROSS) or (global_var(GVAR_BH_FTM) == FTM_EXPOSED) ) and
         self_rep_positive and
        ( dude_has_free_slot_for_marcus ) ) then
      call Node030;
   else
      call Node031;
end

procedure Node003 begin
   from3or4:=1;
   Reply(114);
   BLowOption(115,Node004);
   GLowOption(116,Node006);
end

procedure Node004 begin
   from3or4:=1;
   Reply(117);
   BLowOption(118,Node005);
   GLowOption(119,Node006);
end

procedure Node005 begin
   NMessage(120);
   set_local_var(LVAR_Hostile,2);
end

procedure Node006 begin
/*
   if (from3or4) then begin
      from3or4 := 0;
      Reply( mstr(121) + " " + mstr(122) );
   end
   else
      Reply(122);
*/
   Reply(122);

   NLowOption(123,Node999);
end

procedure Node007 begin
   Reply(124);
   NOption(125,Node008,004);
   BOption(126,Node007a,004); //reaction down small. goto 8
   NOption(127,Node999,004);
end

procedure Node007a begin
   if( local_var(LVAR_Down_React_1) == 0 ) then begin
      set_local_var( LVAR_Down_React_1, 1 );
      DownReactMinor;
   end
   call Node008;
end

procedure Node008 begin
   Reply(128);
   NOption(129,Node009,004);
   NOption(130,Node010,004);
   NOption(131,Node001,004);
   NOption(132,Node999,004);
end

procedure Node009 begin
   Reply(133);
   NOption(134,Node001,004);
   NOption(135,Node999,004);
end

procedure Node010 begin
   Reply(136);
   NOption(137,Node011,004);
end

procedure Node011 begin
   Reply(138);
   NOption(139,Node012,004);
end

procedure Node012 begin
   Reply(140);
   NOption(141,Node013,004);
end

procedure Node013 begin
   Reply(142);
   NOption(143,Node032,004);
   NOption(144,Node014,004);
   NOption(145,Node999,004);
end

procedure Node014 begin
   Reply(146);
   NOption(147,Node042,004);
   NOption(148,Node048,004);
   NOption(149,Node999,004);
end

procedure Node015 begin
   Reply(150);
   //NMessage(150);
   NOption(g_mstr(352), Node015Branch, 004);
   //call Node015Branch;
end

procedure Node015Branch begin
   if ( (global_var(GVAR_BH_CHAD) == 0) and (local_var(LVAR_reaction_level) >= REACTION_NEUTRAL) ) then begin
      set_global_var( GVAR_BH_CHAD, CHAD_SUSPICIOUS );
      Reply( mstr(151) ); //removed 150
      NOption(152,Node016,004);
      GOption(153,Node022,004); //was 016
      BOption(154,Node015a,004); //reaction down small
      NOption(155,Node018,004);
   end
   else
      call Node018;
end

procedure Node015a begin
   if( local_var(LVAR_Down_React_2) == 0 ) then begin
      set_local_var( LVAR_Down_React_2, 1 );
      DownReactMinor;
   end
   call Node017;
end

procedure Node016 begin
   Reply(156);
   GOption(157,Node022,004); //was 999
   BOption(158,Node017,004);
   NOption(159,Node001,004);
   NOption(160,Node999,004);
end

procedure Node017 begin
   Reply(161);
   NOption(162,Node999,004);
end

procedure Node018 begin
   if (global_var(GVAR_BH_MINE) == 0) then begin
      set_global_var( GVAR_BH_MINE, MINE_KNOWN );
      Reply(163);
      NOption(164,Node019,004);
      NOption(165,Node020,004);
      NOption(166,Node001,004);
      NOption(167,Node999,004);
   end
   else begin
      call Node020;
   end
end

procedure Node019 begin
   Reply(168);
   NOption(169,Node020,004);
   NOption(170,Node001,004);
   NOption(171,Node999,004);
end

procedure Node020 begin
   if ( (global_var(GVAR_BH_JAIL) == JAIL_STEALTH) or (global_var(GVAR_BH_JAIL) == JAIL_FORCE) or (global_var(GVAR_BH_JAIL) == JAIL_COINCIDENTAL) ) then begin
      Reply(172);
      NOption(173,Node021,004);
      NOption(174,Node001,004);
      NOption(175,Node999,004);
   end
   else begin
      call Node021;
   end
end

procedure Node021 begin
   Reply(176);
   GOption(177,Node021a,004); //reaction up small, missing=accept_free
   NOption(178,Node021b,004); //missing=accept_cash
   BOption(179,Node021c,004); //reaction down small
   NOption(180,Node001,004);
   NOption(181,Node999,004);
end

procedure Node021a begin
   set_global_var( GVAR_BH_MISSING, MISSING_ACCEPT_FREE );
   if( local_var(LVAR_Up_React_1) == 0 ) then begin
      set_local_var( LVAR_Up_React_1, 1 );
      UpReactMinor;
   end
   call Node022;
end

procedure Node021b begin
   set_global_var( GVAR_BH_MISSING, MISSING_ACCEPT_CASH );
   call Node022;
end

procedure Node021c begin
   if( local_var(LVAR_Down_React_3) == 0 ) then begin
      set_local_var( LVAR_Down_React_3, 1 );
      DownReactMinor;
   end
   call Node017;
end

procedure Node022 begin
   Reply(182);
   NOption(183,Node001,004);
   NOption(184,Node999,004);
end

procedure Node023 begin
   Reply(185);

   // Missing People
   //unlocked "found tunnels but no bodies yet" dialgoue by killap - RP
   if( ( global_var(GVAR_BH_MISSING) == MISSING_TUNNELS_CASH ) or ( global_var(GVAR_BH_MISSING) == MISSING_TUNNELS_FREE ) or
       ( global_var(GVAR_BH_MISSING) == MISSING_DISCOVERED_CASH ) or ( global_var(GVAR_BH_MISSING) == MISSING_DISCOVERED_FREE ) ) then
   //if( ( global_var(GVAR_BH_MISSING) == MISSING_DISCOVERED_CASH ) or ( global_var(GVAR_BH_MISSING) == MISSING_DISCOVERED_FREE ) ) then
      NOption(400,Node113,004);

   // Jacob and Aileen --edited below by killap
   /*if( ( local_var( LVAR_Turned_In_Conspiracy ) == 0 ) and
       ( ( global_var(GVAR_BH_JAIL) == JAIL_ENLISTED ) or
         ( global_var(GVAR_BH_JAIL) == JAIL_REJECTED ) or
         ( global_var(GVAR_BH_CONSPIRACY) == CONSPIRACY_ACCEPTED ) or
         ( global_var(GVAR_BH_CONSPIRACY) == CONSPIRACY_REJECTED ) ) ) then*/

   if( ( local_var( LVAR_Turned_In_Conspiracy ) == 0 ) and
     ( ( ( global_var(GVAR_BH_JAIL) >= JAIL_REJECTED ) and
       ( global_var(GVAR_BH_JAIL) < JAIL_DOUBLECROSS ) ) or
       ( global_var(GVAR_BH_CONSPIRACY) == CONSPIRACY_ACCEPTED ) or
       ( global_var(GVAR_BH_CONSPIRACY) == CONSPIRACY_REJECTED ) ) ) then
      NOption(410,Node114,004);

   // Chad
   if( ( global_var(GVAR_BH_CHAD) == CHAD_CONFIRMED_GECKO ) or ( global_var(GVAR_BH_CHAD) == CHAD_CONFIRMED_BROKENHILLS ) ) then
      NOption(420,Node115,004);

   // Escaped Prisoners
   //if( ( ( global_var(GVAR_BH_MISSING) >= MISSING_TUNNELS_CASH ) and ( global_var(GVAR_BH_MISSING) != MISSING_REWARDED ) ) and
     if( ( local_var( LVAR_Turned_In_Conspiracy ) == 0 ) and
         ( global_var(GVAR_BH_JAIL) != JAIL_CHARISMA ) and
         ( ( global_var(GVAR_BH_JAIL) == JAIL_STEALTH ) or
           ( global_var(GVAR_BH_JAIL) == JAIL_FORCE ) or
           ( global_var(GVAR_BH_JAIL) == JAIL_COINCIDENTAL ) ) ) then
      NOption(430,Node116,004);

   // Scientist at NCR
   if global_var(GVAR_BH_FTM) == FTM_ENLISTED then
      NOption(440,Node117,004);

   NOption(194,Node999,004);
end

procedure Node024 begin
   Reply(195);
   NOption(196,Node999,004);
end

procedure Node025 begin
   NMessage(197);

   call Node025a;
end

procedure Node025a begin
   variable rifle;

   Perform_Jailing := 1;
   if (global_var(GVAR_BH_MISSING) == MISSING_DISCOVERED_CASH) then begin
      set_global_var( GVAR_BH_MISSING, MISSING_REWARDED );
      dude_caps_adjust( 500);
      Reply( 198 ); //multiple replies ...check with Colin, need priority
   end
   else if (global_var(GVAR_BH_MISSING) == MISSING_DISCOVERED_FREE) then begin
      set_global_var( GVAR_BH_MISSING, MISSING_REWARDED );
      // Give the player a scoped hunting rifle.
      rifle := create_object( PID_SCOPED_HUNTING_RIFLE, 0, 0 );
      add_obj_to_inven( dude_obj, rifle );
      display_msg( mstr(644) );
      Reply( 199 );
   end

   NOption(200,Node999,004);
end

procedure Node026 begin
   Perform_Jailing := 1;
   display_msg( mstr(360) );
   give_xp( EXP_CONSPIRACY_EXPOSED );
   set_global_var( GVAR_TOWN_REP_BROKEN_HILLS, (global_var(GVAR_TOWN_REP_BROKEN_HILLS) + REP_TOWN_CONSPIRACY_EXPOSED ) );
   inc_general_rep( REP_BONUS_CONSPIRACY_EXPOSED );
   Reply(201);
   NOption(202,Node999,004);
end

procedure Node027 begin
   inc_general_rep(REP_BONUS_FTM_EXPOSED);
   give_xp(EXP_FTM_EXPOSED);
   set_global_var( GVAR_BH_FTM, FTM_EXPOSED );
   set_global_var( GVAR_TOWN_REP_BROKEN_HILLS, (global_var(GVAR_TOWN_REP_BROKEN_HILLS) + 5 ) );
   Reply(203);
   NOption(204,Node999,004);
end

procedure Node028 begin
   Reply(205);
   NOption(206,Node999,004);
end

procedure Node029 begin
   //inc_general_rep( REP_BONUS_CHAD_EXPOSED );
   set_global_var( GVAR_BH_CHAD, CHAD_CONFIRMED );
   Reply(207);
   NOption(208,Node029a,004);
   NOption(209,Node029b,004);
end

procedure Node029a begin
   // Go with Marcus to Chad for arrest
   set_global_var( GVAR_BH_CHAD, CHAD_ARRESTED );
   game_ui_disable;
   gfade_out(600);
   move_to(self_obj, 21318, 0 );
   move_to(dude_obj, 20920, 0 );
   Face_Critter( dude_obj, Chad_Ptr );
   Face_Critter( self_obj, Chad_Ptr );
   Face_Critter( Chad_Ptr, self_obj );
   gfade_in(600);
   series := 1;
   add_timer_event(self_obj,game_ticks(2),2);

end

procedure Node029b begin
   // Player didn't go to Chad with Marcus.  Simply arrest Chad
   // Send him to Jail
   set_global_var( GVAR_BH_CHAD, CHAD_ARRESTED );
   display_msg(mstr(40003));
   give_xp(1500);
   inc_general_rep(5);
   inc_global_var_amt(GVAR_TOWN_REP_BROKEN_HILLS,5);

   gfade_out(600);
   call Put_Chad_In_Jail;
   gfade_in(600);
   floater(40000);

end

procedure Node030 begin
   Reply(210);
   NOption(211,Node030a,004);
   NOption(212,Node001,004);
end

procedure Node030a begin
   if( local_var( LVAR_Joined_Party_Before ) == 0 ) then begin
      set_local_var( LVAR_Joined_Party_Before, 1 );
      display_msg( mstr(361) );
      give_xp( EXP_MARCUS_IN_PARTY );
      set_global_var( GVAR_TOWN_REP_BROKEN_HILLS, (global_var(GVAR_TOWN_REP_BROKEN_HILLS) + REP_TOWN_MARCUS_IN_PARTY ) );
   end

   // Add Marcus to party
   //Perform_Party_Add := 1;
   party_add_self; //added by killap
   set_global_var(GVAR_ENDGAME_MOVIE_MARCUS,1);
   call Node1000; // added by killap
end

procedure Node031 begin
   if( not( dude_has_free_slot_for_marcus ) ) then begin
      if( dude_charisma == 1 ) then
         Reply(278);
      else
         Reply(276);
   end
   else if self_rep_negative then
      Reply(277);
   else
      Reply(213);

   NOption(214,Node001,004);
   NOption(215,Node999,004);
end

procedure Node032 begin
   Reply(216);
   NOption(217,Node033,004);
   NOption(218,Node999,004);
end

procedure Node033 begin
   Reply(219);
   NOption(220,Node034,004);
   NOption(221,Node999,004);
end

procedure Node034 begin
   Reply(222);
   NOption(223,Node035,004);
   NOption(224,Node046,004);
   NOption(225,Node999,004);
end

procedure Node035 begin
   Reply(226);
   NOption(227,Node036,004);
   NOption(228,Node001,004);
   NOption(229,Node999,004);
end

procedure Node036 begin
   Reply(230);
   NOption(231,Node037,004);
end

procedure Node037 begin
   Reply(232);
   NOption(233,Node038,004);
end

procedure Node038 begin
   Reply(234);
   NOption(235,Node038a,004);
end

procedure Node038a begin
   Reply(236);
   NOption(237,Node039,004);
end

procedure Node039 begin
   Reply(238);
   NOption(239,Node040,004);
   NOption(240,Node046,004);
   NOption(241,Node047,004);
   NOption(242,Node042,004);
end

procedure Node040 begin
   Reply(243);
   NOption(244,Node041,004);
   NOption(245,Node999,004);
end

procedure Node041 begin
   Reply(246);
   NOption(247,Node001,004);
   NOption(248,Node043,004);
end

procedure Node042 begin
   Reply(249);
   NOption(250,Node043,004);
   NOption(251,Node042a,004);
   NOption(252,Node043,004);
end

procedure Node042a begin
   if( local_var(LVAR_Down_React_4) == 0 ) then begin
      set_local_var( LVAR_Down_React_4, 1 );
      DownReactMinor;
   end
   call Node045;
end

procedure Node043 begin
   Reply(253);
   NOption(254,Node043a,004);
   NOption(255,Node035,004);
end

procedure Node043a begin
   if( is_success( roll_vs_skill( dude_obj, SKILL_SPEECH, -10 ) ) ) then
      call Node044;
   else begin
      if( local_var(LVAR_Down_React_5) == 0 ) then begin
         set_local_var( LVAR_Down_React_5, 1 );
         DownReactMinor;
      end
      call Node045;
   end
end

procedure Node044 begin
   Reply(256);
   NOption(257,Node001,004);
   NOption(258,Node999,004);
end

procedure Node045 begin
   Reply(259);
   NOption(260,Node001,004);
   NOption(261,Node999,004);
end

procedure Node046 begin
   Reply(262);
   NOption(263,Node047,004);
   NOption(264,Node046a,004);
   NOption(265,Node999,004);
end

procedure Node046a begin
   if( local_var(LVAR_Down_React_6) == 0 ) then begin
      set_local_var( LVAR_Down_React_6, 1 );
      DownReactMinor;
   end
   call Node999;
end

procedure Node047 begin
   Reply(266);
   NOption(267,Node033,004);
   NOption(268,Node999,004);
end

procedure Node048 begin
   Reply(269);
   NOption(270,Node001,004);
   NOption(271,Node999,004);
end

procedure Node049 begin
   Reply(272);
   NOption(273,Node001,004);
end

procedure Node050 begin
   floater(500);
   call Node998;
end

//added by killap - RP
procedure Node051 begin

end
//end added

procedure Node113 begin
   //about missing people
   Reply(185);

   //unlocked by killap - RP
   if( ( global_var(GVAR_BH_MISSING) == MISSING_TUNNELS_CASH ) or ( global_var(GVAR_BH_MISSING) == MISSING_TUNNELS_FREE ) ) then
      NOption(186,Node024,004);
   else if( ( global_var(GVAR_BH_MISSING) == MISSING_DISCOVERED_CASH ) or ( global_var(GVAR_BH_MISSING) == MISSING_DISCOVERED_FREE ) ) then
      NOption(187,Node113a,004);
   NOption(501,Node001,004);
   NOption(502,Node999,004);
end

procedure Node113a begin
   // We have just told Marcus where the bodies of the missing people are. If we already
   // accepted the Conspiracy quest, we have doublecrossed it. Otherwise, we are a hero.
   if( (global_var( GVAR_BH_CONSPIRACY ) == CONSPIRACY_ACCEPTED) or (global_var( GVAR_BH_CONSPIRACY ) == CONSPIRACY_REJECTED) ) then
      set_global_var( GVAR_BH_CONSPIRACY, CONSPIRACY_BROKEN_DOUBLECROSS );
   else
      set_global_var( GVAR_BH_CONSPIRACY, CONSPIRACY_BROKEN_HERO );

   // Send Marcus, Franc, Jacob, and Aileen to prison.
   call Node025;
end

procedure Node114 begin
   //about Jacob and Aileen
   Reply(185);


   //if( ( global_var(GVAR_BH_JAIL) == JAIL_ENLISTED ) or ( global_var(GVAR_BH_JAIL) == JAIL_REJECTED ) ) then --edited below by killap
   if( ( global_var(GVAR_BH_JAIL) >= JAIL_REJECTED ) and ( global_var(GVAR_BH_JAIL) < JAIL_DOUBLECROSS ) ) then
      NOption(189,Node114a,004);
   if( ( global_var(GVAR_BH_CONSPIRACY) == CONSPIRACY_ACCEPTED ) or ( global_var(GVAR_BH_CONSPIRACY) == CONSPIRACY_REJECTED ) ) then
      NOption(190,Node114b,004);
   NOption(501,Node001,004);
   NOption(502,Node999,004);
end

procedure Node114a begin
   set_global_var( GVAR_BH_JAIL, JAIL_DOUBLECROSS );
   call Node026;
end

procedure Node114b begin
   if( (global_var( GVAR_BH_CONSPIRACY ) == CONSPIRACY_ACCEPTED) or (global_var( GVAR_BH_CONSPIRACY ) == CONSPIRACY_REJECTED) ) then
      set_global_var( GVAR_BH_CONSPIRACY, CONSPIRACY_BROKEN_DOUBLECROSS );
   else
      set_global_var( GVAR_BH_CONSPIRACY, CONSPIRACY_BROKEN_HERO );

   call Node026;
end

procedure Node115 begin
   //about Chad
   Reply(185);

   if( global_var(GVAR_BH_CHAD) == CHAD_CONFIRMED_GECKO ) then
      NOption(192,Node028,004);
   else if( (global_var(GVAR_BH_CHAD) == CHAD_CONFIRMED_BROKENHILLS) and (dude_item_count(PID_BRIEFCASE)) and (global_var(GVAR_CHAD_DEAD) == 1) ) then
      NOption(193002,Node2020,004);
   else if( (global_var(GVAR_BH_CHAD) == CHAD_CONFIRMED_BROKENHILLS) and (map_var(MVAR_Chad_Draw) == 1) ) then
      NOption(193003,Node2021,004);
   else if( (global_var(GVAR_BH_CHAD) == CHAD_CONFIRMED_BROKENHILLS) and (dude_item_count(PID_BRIEFCASE)) ) then
      NOption(193001,Node029,004);
   //else if( global_var(GVAR_BH_CHAD) == CHAD_CONFIRMED_BROKENHILLS ) then
   //   NOption(193,Node029,004);


   NOption(501,Node001,004);
   NOption(502,Node999,004);
end

procedure Node116 begin
   //about convicts
   Reply(185);

   NOption(188,Node116a,004);
   NOption(501,Node001,004);
   NOption(502,Node999,004);
end

procedure Node116a begin
   // We have just told Marcus where the escaped convicts are.
   if( ( global_var(GVAR_BH_JAIL) == JAIL_STEALTH ) or
       ( global_var(GVAR_BH_JAIL) == JAIL_FORCE ) or
       ( global_var(GVAR_BH_JAIL) == JAIL_COINCIDENTAL ) ) then
      set_global_var( GVAR_BH_CONSPIRACY, CONSPIRACY_BROKEN_DOUBLECROSS );
   else
      set_global_var( GVAR_BH_CONSPIRACY, CONSPIRACY_BROKEN_HERO );

   set_global_var( GVAR_BH_JAIL, JAIL_DOUBLECROSS ); //added by killap

   // Send Marcus, Franc, Jacob, and Aileen to prison.

   call Node026;
end

procedure Node117 begin
   //about scientist
   Reply(185);
   // Node conditionals are necessary here because there is only one response
   // here, and its conditional were handled in Node023.
   NOption(191,Node027,004);
   NOption(501,Node001,004);
   NOption(502,Node999,004);
end

///////////////////////////////

// party stuff
procedure Node1000 begin
   Reply(292);

   if( marcus_laid ) then
      NOption(349, Node1101, 004); // edit by killap - was 001
   if (cur_town == AREA_BROKEN_HILLS) then //added by killap
      NOption(111,Node023,004);
   marcus_party_member_options;
end

// party member default nodes
procedure Node1001 begin
   // heal yourself
   obj_heal(self_obj)
   global_temp := 0;
   if (party_healed_max) then begin
      Reply(297);
   end else if (party_healed_good) then begin
      Reply(298);
   end else if (party_healed_hurt) then begin
      Reply(299);
   end else begin
      Reply(300);
   end
   marcus_party_member_options;
end

procedure Node1002 begin
   // wait here
   //Perform_Party_Remove:=1;
   set_party_waiting; //added by killap
   Reply(304);
   marcus_party_member_options;
end

procedure Node1003 begin
   // put your weapon away
   inven_unwield( self_obj );
   Reply(1100);
   marcus_party_member_options;
end

procedure Node1004 begin
   // follow close
   set_follow_close;
   Reply(20000);
   marcus_party_member_options;
end

procedure Node1005 begin
   // follow medium
   set_follow_medium;
   Reply(20000);
   marcus_party_member_options;
end

procedure Node1006 begin
   // follow far
   set_follow_far;
   Reply(20000);
   marcus_party_member_options;
end

procedure Node1007 begin
   // distance
   Reply(20000);
   party_member_def_follow_options;
end
procedure Node1008 begin
   // gear
   Reply(185);
   if (self_item_count(PID_MUTANT_ARMOR)) then begin
      NOption(10008, Node1009, 004);
   end
   party_member_def_gear_options;
end
procedure Node1009 begin
   // remove armor
   variable armor;
   if (self_item_count(PID_MUTANT_ARMOR)) then begin
      armor := create_object(PID_MUTANT_ARMOR_WEARABLE,0,0);
      add_obj_to_inven(self_obj,armor);
      wield_obj_critter(self_obj, armor);
      metarule3(107, self_obj, FID_MALIEU, 0);
      destroy_object(self_item(PID_MUTANT_ARMOR));
      Reply(297);
   end else if (self_item_count(PID_MUTANT_ARMOR_WEARABLE)) then begin
      rm_obj_from_inven(self_obj, self_armor);
      destroy_object(self_item(PID_MUTANT_ARMOR_WEARABLE));
      armor := create_object(PID_MUTANT_ARMOR,0,0);
      add_obj_to_inven(self_obj,armor);
      metarule3(107, self_obj, FID_MAMTN2, 0);
      Reply(20000);
   end else begin
      Reply(20000);
   end

   marcus_party_member_options;
end
procedure Node1010 begin
   // weapons that can be used
   Reply(20001);
   marcus_party_member_options;
end

procedure Node1100 begin
   // join me
   if( dude_charisma == 1 ) then begin
      set_self_abandon_party;
      Reply(278);
   end else if(has_rep_slaver) then begin
      set_self_abandon_party;
      Reply(277);
      BOption(3100, Node999, 001); //added by killap
      BOption(3200, Node999, 001); //added by killap
   end else if has_rep_childkiller or (self_rep < -100) then begin
      set_self_abandon_party;
      Reply(277);
      BOption(3100, Node999, 001); //added by killap
      BOption(3200, Node999, 001); //added by killap
   end else if( dude_at_max_party_size ) then begin
      set_self_abandon_party;
      Reply(276);
      NOption(3300, Node999, 001); //added by killap
   end else begin
      end_party_waiting; //added by killap
      Reply(289);
      NOption(3000, Node999, 001); //added by killap
   end
end

procedure Node1101 begin
   Reply(350);

   NOption(351, Node1102, 001);
   NOption(352, Node999, 001);
end

procedure Node1102 begin
   Reply(353);

   NOption(354, Node1103, 001);
   NOption(355, Node999, 001);
end

procedure Node1103 begin
   Reply(356);

   NOption(357, Node999, 001);
end

procedure Put_Conspiracy_In_Jail begin
   if( local_var( LVAR_Turned_In_Conspiracy ) == 0 ) then begin
      set_local_var( LVAR_Turned_In_Conspiracy, 1 );
      gfade_out(600);
      if( map_var( MVAR_Manson_Dead ) == 0 ) then begin
         critter_attempt_placement( Manson_Ptr, 10289, 0 );
      end
      if( map_var( MVAR_Frank_Dead ) == 0 ) then begin
         critter_attempt_placement( Frank_Ptr, 10085, 0 );
      end
      if( map_var( MVAR_Jacob_Dead ) == 0 ) then begin
         critter_attempt_placement( Jacob_Ptr, 10689, 0 );
      end
      if( map_var( MVAR_Aileen_Dead ) == 0 ) then begin
         critter_attempt_placement( Aileen_Ptr, 10685, 0 );
      end
      reg_anim_clear(Jail_Door_1); //added by killap
      reg_anim_clear(Jail_Door_2); //added by killap
      obj_close( Jail_Door_1 );
      obj_close( Jail_Door_2 );
      obj_lock( Jail_Door_1 );
      obj_lock( Jail_Door_2 );
      gfade_in(600);
      floater(643);
   end
end

procedure Node2000 begin
   floater(600);
end

procedure Node2001 begin
   floater(601);
end

procedure Node2002 begin
   floater( random( 602, 604 ) );
end

procedure Node2003 begin
   floater( random( 606, 608 ) );
end

procedure Node2004 begin
   floater( random( 609, 611 ) );
end

procedure Node2005 begin
   floater( random( 612, 613 ) );
end

procedure Node2006 begin
   floater( random( 614, 616 ) );
end

procedure Node2007 begin
   floater( random( 617, 620 ) );
end

procedure Node2008 begin
   floater(621);
end

procedure Node2009 begin
   floater(605);
end

procedure Node2010 begin
   floater(622);
end

procedure Node2011 begin
   floater( random( 623, 625 ) );
end

procedure Node2012 begin
   floater( random( 626, 628 ) );
end

procedure Node2013 begin
   floater( random( 629, 631 ));
end

procedure Node2014 begin
   floater( random( 632, 634 ) );
end

procedure Node2015 begin
   floater( random( 632, 634 ) );
end

procedure Node2016 begin
   if( Marcus_Ptr != 0 ) then
      floater(638);
   else
      floater(639);
end

procedure Node2017 begin
   floater(640);
end

procedure Node2018 begin
   floater(641);
end

procedure Node2019 begin
   floater(642);
end

//added by killap - expansion pack
procedure Node2020 begin
   set_global_var( GVAR_BH_CHAD, CHAD_CONFIRMED );
   display_msg(mstr(40004));
   give_xp(1500);
   inc_general_rep(5);
   inc_global_var_amt(GVAR_TOWN_REP_BROKEN_HILLS,5);
   floater(40000);

   Reply(201);
   NOption(202,Node999,004);
end

procedure Node2021 begin
   gfade_out(600);
   call Put_Chad_In_Jail;
   set_global_var( GVAR_BH_CHAD, CHAD_CONFIRMED );
   display_msg(mstr(40004));
   give_xp(1500);
   inc_general_rep(5);
   inc_global_var_amt(GVAR_TOWN_REP_BROKEN_HILLS,5);
   gfade_in(600);
   floater(40000);

   Reply(201);
   NOption(202,Node999,004);
end

procedure Put_Chad_In_Jail begin
   variable door;
   if( global_var( GVAR_CHAD_DEAD ) == 0 ) then begin

      if (dude_item_count(PID_BRIEFCASE)) then
         remove_pid_qty(dude_obj, PID_BRIEFCASE, 1)

      //critter_attempt_placement( Chad_Ptr, 10093, 0 );
      critter_attempt_placement( Chad_Ptr, 12897, 0 );
      set_obj_visibility( Chad_Ptr, false );
      reg_anim_clear( Chad_Ptr );
      reg_anim_begin();
      reg_anim_animate(Chad_Ptr, ANIMATE_ROTATION, 1);
      reg_anim_end();
      door := tile_contains_pid_obj(13096,0,PID_JAIL_DOOR_N_S);
      reg_anim_clear(door);
      obj_close(door);
      obj_lock(door);
   end
end
//end added
//xxxxxxxxxxxxxxxxxxxx
