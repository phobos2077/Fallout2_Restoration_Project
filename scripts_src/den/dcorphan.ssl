/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: DCOrphan.ssl
        Location: The Den
        Description: Orphan kids who steal money or items from the player as (s)he is walking
                     by.

        Log:

           Created:

           Updated:
*/

/* Include Files */

#define SCRIPT_REALNAME "dcorphan"
#include "../headers/define.h"
//#include "../headers/<TownName.h>"

#define NAME                        SCRIPT_DCORPHAN
#define TOWN_REP_VAR                GVAR_TOWN_REP_THE_DEN

#include "../headers/command.h"
#include "../headers/modreact.h"
#include "../headers/den.h"
#include "../headers/denbus1.h"

#define MIN_MONEY               (20)
#define MAX_MONEY               (100)
#define STEAL_BONUS             (0)
#define STEAL_DISTANCE          (1)
#define PERCEPTION_BONUS        (-3)

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure push_p_proc;
procedure poziv;

/* Script Specific Procedure Calls */
procedure Attempted_Theft;

procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending


// The next lines are added in by the Designer Tool.
// Do NOT add in any lines here.
//~~~~~~~~~~~~~~~~ DESIGNER TOOL STARTS HERE


//~~~~~~~~~~~~~~~~ DESIGN TOOL ENDS HERE
// The Following lines are for anything that is not needed to be
// seen by the design Tool


/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Home_Tile                    (4)
#define LVAR_Time_Last_Steal              (5)
#define LVAR_Caps                         (6)
#define LVAR_Home_Rotation                (7)
#define LVAR_Loyal_To_Store               (8)
#define LVAR_Flags                        (9)

#define dude_is_next                      (self_distance_from_dude <= 1)
#define dude_is_close                     (self_distance_from_dude <= 6)
#define dude_is_far                       (dude_is_close == false)

#define tubby_orphan                      ((local_var(LVAR_Loyal_To_Store) == store_def_tubby) and (tubby_dead == false))
#define flick_orphan                      ((local_var(LVAR_Loyal_To_Store) == store_def_flick) and (flick_dead == false))
#define frankie_orphan                    ((local_var(LVAR_Loyal_To_Store) == store_def_hole) and (frankie_dead == false))
#define becky_orphan                      ((local_var(LVAR_Loyal_To_Store) == store_def_becky) and (becky_dead == false))

#define ORPHAN_MAX_STEAL_WEIGHT           (5)
#define steal_again_time                  (random(1, 5) * ONE_GAME_MINUTE)

#define sell_inventory(merchant_tile, merchant_box)                                          \
         begin                                                                               \
            inven_value := 0;                                                                \
            inven_num := 0;                                                                  \
            while (inven_num < inven_count(self_obj)) do begin                               \
               inven_value += (obj_cost(inven_ptr(self_obj, inven_num)) * self_item_count(obj_pid(inven_ptr(self_obj, inven_num)))); \
               inven_num += 1;                                                               \
            end                                                                              \
            inven_value := (25 * inven_value)/100;                                           \
            move_obj_inven_to_obj(self_obj, merchant_box);                                   \
            set_local_var(LVAR_Caps, local_var(LVAR_Caps) + inven_value);                    \
            ndebug("the kid just sold his inventory for $" + inven_value);                \
         end

#define check_sell_owner(owner_obj, owner_box)                                \
         if ((owner_obj != 0) and (anim_busy(self_obj) == false)) then begin  \
            if (tile_distance_objs(self_obj, owner_obj) <= 4) then begin      \
               sell_inventory(owner_tile, owner_box)                          \
            end else begin                                                    \
               Run_Next_To_Obj_And_Face_Rate(owner_obj, random(1, 3))         \
            end                                                               \
         end


#define check_business_sell(owner, box)                                                                        \
         if (owner != 0) then begin                                                                            \
            if (temp_owner != 0) then begin                                                                    \
               if (tile_distance_objs(self_obj, owner) < tile_distance_objs(self_obj, temp_owner)) then begin  \
                  temp_owner := owner;                                                                         \
                  temp_box := box;                                                                             \
               end                                                                                             \
            end else begin                                                                                     \
               temp_owner := owner;                                                                            \
               temp_box := box;                                                                                \
            end                                                                                                \
         end

#define set_closest_business                                   \
         temp_owner := 0;                                      \
         temp_box := 0;                                        \
         if (cur_map_index == MAP_DEN_ENTRANCE) then begin     \
            check_business_sell(tubby_obj, den_tubby_box_obj)  \
            check_business_sell(flick_obj, den_flick_box_obj)  \
         end

#define attempt_sell_items                      \
         set_closest_business                   \
         check_sell_owner(temp_owner, temp_box)

/* Local variables which do not need to be saved between map changes. */
variable Trying_To_Steal:=0;
variable inven_value;
variable inven_num;
variable temp_owner;
variable temp_box;
import variable flick_obj;
import variable tubby_obj;
import variable den_flick_box_obj;
import variable den_tubby_box_obj;

procedure start begin
end
procedure timed_event_p_proc begin
   if (fixed_param == timed_event_float) then begin
      if (combat_is_initialized == false) then begin
         if (self_can_see_dude) then begin
            if (critter_is_fleeing(self_obj)) then begin
               floater_rand(310, 319);
            end else if (tubby_orphan) then begin
               floater_rand(271 - (dude_is_next), 272 + (dude_is_far));
            end else if (becky_orphan) then begin
               if (dude_is_close) then begin
                  floater_rand(303 - (dude_is_female * (dude_charisma >= 8)), 304 + (dude_is_male * (dude_charisma >= 8)));
               end else if (dude_is_next) then begin
                  floater_rand(300, 301);
               end else begin
                  floater(306);
               end
            end else if (flick_orphan) then begin
               floater_rand(281 - (dude_is_next), 282 + (dude_is_far));
            end else if (frankie_orphan) then begin
               floater_rand(291 - (dude_is_next), 292 + (dude_is_far));
            end else begin
               floater(250 + dude_is_male);
            end
         end
      end
      flush_add_timer_event_sec(self_obj, random(15, 60), timed_event_float);
   end
end

#define is_closest_business(the_heart, the_def)                                                                                        \
         if (tile_distance(self_tile,the_heart) <= 15) then begin                                                                      \
            if (local_var(LVAR_Loyal_To_Store) == 0) then begin                                                                        \
               set_local_var(LVAR_Loyal_To_Store, the_def);                                                                            \
            end else if (tile_distance(self_tile, the_heart) < tile_distance(self_tile, local_var(LVAR_Loyal_To_Store))) then begin    \
               set_local_var(LVAR_Loyal_To_Store, the_def);                                                                            \
            end                                                                                                                        \
         end

procedure map_enter_p_proc begin
   //added by killap - expansion pack
   if (global_var(GVAR_DEN_ORPHANAGE) == 7) then begin
      destroy_object(self_obj);
   end
   //end added
   if (is_loading_game == false) then begin
      if (map_first_run) then begin
         set_local_var(LVAR_Home_Tile, self_tile);
         set_local_var(LVAR_Home_Rotation, self_cur_rot);
         if (cur_map_index == MAP_DEN_ENTRANCE) then begin
            is_closest_business(tubby_heart, store_def_tubby)
            is_closest_business(becky_heart, store_def_becky)
            is_closest_business(flick_heart, store_def_flick)
         end else if (cur_map_index == MAP_DEN_BUSINESS) then begin
            is_closest_business(hole_heart, store_def_hole)
         end
         set_self_team(TEAM_DEN_ORPHAN);
         set_self_ai(AI_CHILD);
      end
      set_local_var(LVAR_Caps, random(25, 75));
      if (((local_var(LVAR_Loyal_To_Store) == store_def_tubby) and (tubby_dead)) or
          ((local_var(LVAR_Loyal_To_Store) == store_def_becky) and (becky_dead)) or
          ((local_var(LVAR_Loyal_To_Store) == store_def_flick) and (flick_dead)) or
          ((local_var(LVAR_Loyal_To_Store) == store_def_hole) and (frankie_dead))) then begin
         destroy_object(self_obj);
      end else begin
         check_set_obj_visiblility(self_obj,false);
      end
      flush_add_timer_event_sec(self_obj, random(15, 60), timed_event_float);
   end
end

procedure map_exit_p_proc begin
   if (inven_count(self_obj) > 0) then begin
      set_closest_business
      if (temp_owner != 0) then begin
         move_obj_inven_to_obj(self_obj, temp_box);
      end else begin
         temp_box := create_object(PID_FOOTLOCKER_CLEAN_RIGHT, 0, 0);
         move_obj_inven_to_obj(self_obj, temp_box);
         destroy_object(temp_box);
      end
   end
end

procedure critter_p_proc begin
   if (self_can_see_dude) then begin
      if (hostile) then begin
         Flee_From_Dude
      end else if (local_var(LVAR_Time_Last_Steal) < game_time) then begin
         if (self_distance_from_dude <= STEAL_DISTANCE) then begin
            if (Trying_To_Steal == 0) then begin
               Trying_To_Steal:=1;
               call poziv;
 //              call Attempted_Theft;
            end
         end
      end
   end else if (inven_count(self_obj) > 0) then begin
      if ((tile_distance_objs(self_obj, dude_obj) > 8) or (self_tile != local_var(LVAR_Home_Tile))) then begin
         attempt_sell_items
      end
   end else if (self_tile != local_var(LVAR_Home_Tile)) then begin
      anim_move_to_point_rate(local_var(LVAR_Home_Tile), 2)
   end else if (self_cur_rot != local_var(LVAR_Home_Rotation)) then begin
      self_rotate(local_var(LVAR_Home_Rotation));
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      critter_set_flee_state(self_obj, true);
      set_personal_enemy;
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      critter_set_flee_state(self_obj, true);
   end
end

procedure talk_p_proc begin
   GetReaction;
   if (tubby_orphan) then begin
      floater_rand(210, 213);
   end else if (flick_orphan) then begin
      floater_rand(220, 223);
   end else if (frankie_orphan) then begin
      floater_rand(230, 233);
   end else if (becky_orphan) then begin
      floater_rand(240, 245);
   end else begin
      floater_rand(200, 202);
   end
end

procedure destroy_p_proc begin
   //inc_childkiller
   inc_good_critter //edit by killap
   self_caps_adjust(local_var(LVAR_Caps));
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(100);
end

procedure description_p_proc begin
   script_overrides;
   display_mstr(150);
end

procedure use_skill_on_p_proc begin
end

procedure push_p_proc begin
   if (local_var(LVAR_Home_Tile) == self_tile) then begin
      script_overrides;
   end
end

procedure Attempted_Theft begin
   variable Inven_Roll;
   variable Skill_Roll;
   variable item;
   variable count;

   Skill_Roll := roll_vs_skill(self_obj, SKILL_STEAL,STEAL_BONUS);
   if (is_success(Skill_Roll)) then begin
      if (random(1,10) <= 3 + (2 * is_critical(Skill_Roll))) then begin
         Inven_Roll := random(0, (inven_count(dude_obj)-1));
         item := inven_ptr(dude_obj, Inven_Roll);
         if ((dude_right_hand != item) and (dude_left_hand != item) and (dude_armor != item)) then begin
            ndebug("\nOrphan Stole Inventory Item #"+Inven_Roll+".");
            count := rm_mult_objs_from_inven(dude_obj, item, 1);
            add_mult_objs_to_inven(self_obj, item, 1);
         end
      end else if (dude_caps > 0) then begin
         item := random(MIN_MONEY + (MIN_MONEY * is_critical(Skill_Roll)),MAX_MONEY + (MAX_MONEY * is_critical(Skill_Roll)));
         item := item - (item % dude_caps);
         dude_caps_adjust(-item);
         self_caps_adjust(item);
         ndebug("Orphan Stole "+item+" NCR Brahma Bucks.");
      end
   end

   //new code by killap - 2 lines below are commented out by killap as well
   reg_anim_clear(self_obj);
   reg_anim_begin();
      reg_anim_animate(self_obj, ANIM_magic_hands_middle, self_rotation_to_dude);
   reg_anim_end();
   //end added

   //anim(self_obj, ANIM_magic_hands_middle, rotation_to_tile(self_tile,dude_tile));
   //animate_stand;
   set_local_var(LVAR_Time_Last_Steal,game_time + steal_again_time);
   Trying_To_Steal:=0;
end

/* Should the Player ever cause the NPC too much discomfort that he desires to attack the player,
   this call will be made. Essentially, it stores the Hostile vaule so that the critter remembers
   he was once hostile towards the player.*/
procedure Node998 begin
   set_hostile;
   critter_set_flee_state(self_obj, true);
end

/* Anytime that there is a need for an ending to dialog, this node is to be called. It will just
   exit from the dialog system without any reprisals from the NPC. */
procedure Node999 begin
end

procedure poziv
begin
  if ((local_var(8) == 1) and (((global_var(GVAR_DEN_FLAG_1) bwand 4) != 0) == 0) or ((local_var(8) == 3) and (((global_var(GVAR_DEN_FLAG_1) bwand 8) != 0) == 0)) or ((local_var(8) == 2) and (((global_var(GVAR_DEN_FLAG_1) bwand 4) != 0) == 0)) or ((local_var(8) == 4) and (((global_var(GVAR_DEN_FLAG_1) bwand 2) != 0) == 0))) then
    call Attempted_Theft;
end
