/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name:
        Location: Den
        Description:

        Log:

           Created: August 22, 1998

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "dcgamble"
#include "../headers/define.h"
#define NAME                    SCRIPT_DCGAMBLE
#define TOWN_REPUTATION         GVAR_TOWN_REP_THE_DEN
#include "../headers/command.h"
#include "../headers/modreact.h"
#include "../headers/den.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;

/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Flags                        (4)
#define LVAR_Type                         (5)

#define gambler_vhl                       (0)
#define gambler_hl                        (1)
#define gambler_av                        (2)
#define gambler_ll                        (3)
#define gambler_vll                       (4)

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */

/* Local variables which do not need to be saved between map changes. */
import variable becky_guard_obj;

procedure start begin
end

procedure timed_event_p_proc begin
   if (fixed_param == timed_event_float) then begin
      if (combat_is_initialized == false) then begin
         if (random(1,3) == 1) then begin
            if (becky_dead) then begin
               call Node003;
            end else begin
               call Node004;
            end
         end
      end
      flush_add_timer_event_sec(self_obj, random(15, 60), timed_event_float);
   end
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
      if (becky_dead) then begin
         destroy_object(self_obj);
      end
      set_local_var(LVAR_Type, random(gambler_vhl, gambler_vll));
      if (map_first_run) then begin
         set_self_team(TEAM_THE_DEN);
         if ((self_is_male) and (random(1,5) == 1)) then begin
            set_self_ai(AI_TOUGH_CITIZEN);
         end else begin
            set_self_ai(AI_WIMPY_PEASANT);
         end
      end
      flush_add_timer_event_sec(self_obj, random(15, 60), timed_event_float);
   end
end

procedure map_exit_p_proc begin
end

procedure critter_p_proc begin
   if (self_can_see_dude) then begin
      if (hostile) then begin
         self_attack_dude;
      end
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
   end
end

procedure pickup_p_proc begin
   if ((source_obj == dude_obj) or (obj_in_party(source_obj))) then begin
      check_catch_thief
      if (caught_thief == false) then begin
         call Node998;
      end
   end
end

procedure talk_p_proc begin
   if (becky_dead) then begin
      call Node001;
   end else if (hostile) then begin
      call Node005;
   end else begin
      call Node002;
   end
   set_herebefore;
end

procedure destroy_p_proc begin
   inc_good_critter
   if (local_var(LVAR_Type) == gambler_vhl) then begin
      self_caps_adjust(random(40, 50));
   end else if (local_var(LVAR_Type) == gambler_hl) then begin
      self_caps_adjust(random(25, 35));
   end else if (local_var(LVAR_Type) == gambler_av) then begin
      self_caps_adjust(random(15, 25));
   end else if (local_var(LVAR_Type) == gambler_ll) then begin
      self_caps_adjust(random(10, 15));
   end else begin
      self_caps_adjust(random(0, 2));
   end
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(100);
end

procedure description_p_proc begin
   script_overrides;
   if (local_var(LVAR_Type) == gambler_vhl) then begin
      display_mstr(101);
   end else if (local_var(LVAR_Type) == gambler_hl) then begin
      display_mstr(102 + self_is_female);
   end else if (local_var(LVAR_Type) == gambler_av) then begin
      display_mstr(104);
   end else if (local_var(LVAR_Type) == gambler_ll) then begin
      display_mstr(105);
   end else begin
      display_mstr(106 + self_is_male);
   end
   set_examined;
end

procedure use_skill_on_p_proc begin
end

procedure Node998 begin
   set_hostile;
end
procedure Node999 begin
end

procedure Node001 begin
   floater_rand(200,206);
end
procedure Node002 begin
   if (local_var(LVAR_Type) == gambler_vhl) then begin
      floater_rand(301,306);
   end else if (local_var(LVAR_Type) == gambler_hl) then begin
      floater_rand(308,312);
   end else if (local_var(LVAR_Type) == gambler_av) then begin
      floater_rand(315,317);
   end else if (local_var(LVAR_Type) == gambler_ll) then begin
      floater_rand(321,324);
   end else begin
      floater_rand(326,331);
   end
end
procedure Node003 begin
   floater_rand(400,403);
end
procedure Node004 begin
   if (local_var(LVAR_Type) == gambler_vhl) then begin
      floater_rand(503, 506);
   end else if (local_var(LVAR_Type) == gambler_hl) then begin
      floater_rand(508, 512);
   end else if (local_var(LVAR_Type) == gambler_av) then begin
      floater_rand(513, 517);
   end else if (local_var(LVAR_Type) == gambler_ll) then begin
      floater_rand(519, 522);
   end else begin
      floater_rand(527, 530);
   end
end
procedure Node005 begin
   floater_rand(600,604);
end
