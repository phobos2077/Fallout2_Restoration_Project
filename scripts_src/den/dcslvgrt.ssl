/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name:
        Location: Den
        Description:

        Log:

           Created: August 22, 1998

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "dcslvgrt"
#include "../headers/define.h"
#define NAME                    SCRIPT_DCSLVGRT
#define TOWN_REPUTATION         GVAR_TOWN_REP_THE_DEN
#include "../headers/command.h"
#include "../headers/modreact.h"
#include "../headers/den.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;

/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Flags                        (4)
#define LVAR_Home_Tile                    (5)
#define LVAR_Home_Rotation                (6)

#define said_greeting_bit                 bit_10
#define node_2_bit                        bit_11
#define node_4a_bit                       bit_12
#define node_4b_bit                       bit_13
#define node_6_bit                        bit_14
#define node_9_bit                        bit_15
#define node_10_bit                       bit_16
#define node_11_bit                       bit_17
#define node_12_bit                       bit_18
#define node_16_bit                       bit_19
#define node_17_bit                       bit_20
#define node_18_bit                       bit_21

#define said_greeting                     lvar_bit(LVAR_Flags, said_greeting_bit)
#define set_said_greeting                 set_lvar_bit_on(LVAR_Flags, said_greeting_bit)
#define off_said_greeting                 set_lvar_bit_off(LVAR_Flags, said_greeting_bit)

#define node_2                            lvar_bit(LVAR_Flags, node_2_bit)
#define set_node_2                        set_lvar_bit_on(LVAR_Flags, node_2_bit)

#define node_4a                           lvar_bit(LVAR_Flags, node_4a_bit)
#define set_node_4a                       set_lvar_bit_on(LVAR_Flags, node_4a_bit)

#define node_4b                           lvar_bit(LVAR_Flags, node_4b_bit)
#define set_node_4b                       set_lvar_bit_on(LVAR_Flags, node_4b_bit)

#define node_6                            lvar_bit(LVAR_Flags, node_6_bit)
#define set_node_6                        set_lvar_bit_on(LVAR_Flags, node_6_bit)

#define node_9                            lvar_bit(LVAR_Flags, node_9_bit)
#define set_node_9                        set_lvar_bit_on(LVAR_Flags, node_9_bit)

#define node_10                           lvar_bit(LVAR_Flags, node_10_bit)
#define set_node_10                       set_lvar_bit_on(LVAR_Flags, node_10_bit)

#define node_11                           lvar_bit(LVAR_Flags, node_11_bit)
#define set_node_11                       set_lvar_bit_on(LVAR_Flags, node_11_bit)

#define node_12                           lvar_bit(LVAR_Flags, node_12_bit)
#define set_node_12                       set_lvar_bit_on(LVAR_Flags, node_12_bit)

#define node_16                           lvar_bit(LVAR_Flags, node_16_bit)
#define set_node_16                       set_lvar_bit_on(LVAR_Flags, node_16_bit)

#define node_17                           lvar_bit(LVAR_Flags, node_17_bit)
#define set_node_17                       set_lvar_bit_on(LVAR_Flags, node_17_bit)

#define node_18                           lvar_bit(LVAR_Flags, node_18_bit)
#define set_node_18                       set_lvar_bit_on(LVAR_Flags, node_18_bit)
/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */

/* Local variables which do not need to be saved between map changes. */
variable from_where_to_go;

procedure start begin
end

procedure timed_event_p_proc begin
   if (fixed_param == timed_event_float) then begin
      if (combat_is_initialized == false) then begin
      end
      // flush_add_timer_event_sec(self_obj, random(, ), timed_event_float);
   end
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
      if (map_first_run) then begin
         set_self_team(TEAM_DEN_SLAVER);
         set_self_ai(AI_SLAVER);
         set_local_var(LVAR_Home_Tile, self_tile);
         set_local_var(LVAR_Home_Rotation, self_cur_rot);
      end
      if (self_tile != local_var(LVAR_Home_Tile)) then begin
         critter_attempt_placement(self_obj, local_var(LVAR_Home_Tile), self_elevation);
      end
      if (self_cur_rot != local_var(LVAR_Home_Rotation)) then begin
         self_rotate(local_var(LVAR_Home_Rotation));
      end
   end
end

procedure map_exit_p_proc begin
   off_said_greeting;
end

procedure critter_p_proc begin
   if (self_can_see_dude) then begin
      if ((hostile) or (hostile_slavers)) then begin
         self_attack_dude;
      end else if ((said_greeting == false) and (tile_distance_objs(self_obj, dude_obj) <= 4)) then begin
         if (herebefore) then begin
            call Node019;
         end else begin
            dialogue_system_enter;
         end
         set_said_greeting;
      end
   end else if (self_tile != local_var(LVAR_Home_Tile)) then begin
      self_walk_to_tile(local_var(LVAR_Home_Tile));
   end else if (self_cur_rot != local_var(LVAR_Home_Rotation)) then begin
      self_rotate(local_var(LVAR_Home_Rotation));
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
      set_hostile_slavers;
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

procedure talk_p_proc begin
   from_where_to_go := false;
   if ((hostile) or (hostile_slavers)) then begin
      call Node001;
      self_attack_dude;
   end else if (herebefore) then begin
      from_where_to_go := true;
      start_dialog_at_node(Node004);
   end else begin
      start_dialog_at_node(Node001);
   end
   set_herebefore;
end

procedure destroy_p_proc begin
   inc_evil_critter
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(100);
end

procedure description_p_proc begin
   script_overrides;
   display_mstr(150);
   set_examined;
end

procedure use_skill_on_p_proc begin
end

procedure Node998 begin
   set_hostile;
   set_hostile_slavers;
end
procedure Node999 begin
end

procedure Node990 begin
   if (dude_is_male) then begin
      call Node002;
   end else begin
      call Node016;
   end
end

procedure Node001 begin
   Reply(200);
   NOption(201, Node004, 004);
   NOption(202, Node004, 004);
   NOption(203, Node004, -003);
   NOption(204, Node007, -003);
end
procedure Node002 begin
   set_metzger_known;
   if (node_2) then begin
      BMessage(217);
   end else begin
      set_node_2;
      Reply(215 + self_rep_negative);
      if (has_rep_slaver == false) then begin
         NOption(218, Node010, 004);
         NOption(221, Node010, -003); //added by killap
      end
      NOption(219, Node004, 004);
      NOption(220, Node999, 004);
      //NOption(221, Node010, -003); //edit by killap - was 999
      NOption(222, Node999, -003);
   end
end
procedure Node003 begin
   floater(230);
end
procedure Node004 begin
   if (node_4a == false) then begin
      set_node_4a;
      Reply(240 + dude_is_female);
   end else if ((has_rep_slaver) and (node_4b == false)) then begin
      Reply(242 + dude_is_female);
      set_node_4b;
   end else if (from_where_to_go) then begin
      Reply(244 + dude_is_female);
   end else begin
      Reply(246);
   end
   from_where_to_go := false;

   if (has_rep_slaver == false) then begin //edit by killap - was true
      GOption(247, Node990, 004);
      NOption(248, Node011, 004);
      GOption(254, Node990, -003);
      GOption(256, Node005, -003);
   end
   if (node_6 == false) then begin
      NOption(249, Node006, 004);
   end
   if ((vic_dead == false) and (vic_talk == false) and (vic_free == false)) then begin
      if (vic_known(state_vic_known_name)) then begin
         NOption(250, Node018, 004);
      end else if (vic_known(state_vic_known_merchant)) then begin
         NOption(251, Node018, 004);
      end
   end
   if (node_17 == false) then begin
      NOption(252, Node017, 004);
   end
   NOption(253, Node999, 004);

   if (mom_dead == false) then begin
      NOption(255, Node015, -003);
   end
   NOption(257, Node007, -003);
end
procedure Node005 begin
   set_metzger_known;
   Reply(270 + dude_is_female);
   NOption(272, Node999, 001);
   NOption(273, Node999, 001);
   NOption(274, Node999, 001);
end
procedure Node006 begin
   set_metzger_known;
   set_node_6;
   Reply(280);
   if (has_rep_slaver == false) then begin
      NOption(281, Node010, 004);
   end
   NOption(282, Node004, 004);
   if ((vic_dead == false) and (vic_talk == false) and (vic_free == false)) then begin
      if (vic_known(state_vic_known_name)) then begin
         NOption(284, Node008, 004);
      end
   end
   NOption(283, Node999, 004);
end
procedure Node007 begin
   Reply(290 + dude_is_female);
   NOption(292, Node999, 001);
   NOption(293, Node999, 001);
end
procedure Node008 begin
   set_metzger_known;
   Reply(300 + radio_fixed);
   if (has_rep_slaver == false) then begin
      NOption(302, Node010, 004);
      NOption(303, Node009, 004);
   end
   NOption(304, Node999, 004);
end
procedure Node009 begin
   Reply(310 + node_9);
   set_node_9;
   NOption(312, Node999, 004);
   GOption(313, Node999, 004);
end
procedure Node010 begin
   Reply(320 + node_10);
   set_node_10;
   NOption(322, Node004, 004);
   NOption(323, Node999, 004);
   NOption(387, Node999, -003); //added by killap
end
procedure Node011 begin
   Reply(330 + node_11);
   set_node_11;
   BOption(332, Node012, 004);
   NOption(333, Node004, 004);
   NOption(334, Node999, 004);
end
procedure Node012 begin
   //maybe add ability to get the location of the slave camp... - killap

   if (node_12) then begin
      Reply(342);
      BOption(343, Node998, 004);
      BOption(344, Node998, 004);
   end else begin
      Reply(340 + dude_is_female);
      set_node_12;
      BOption(343, Node012, 004);
      NOption(344, Node014, 004);
      BOption(345, Node013, 004);
   end
end
procedure Node013 begin
   Reply(350);
   BOption(351, Node012, 004);
   BOption(352, Node012, 004);
   NOption(353, Node014, 004);
   NOption(354, Node014, 004);
end
procedure Node014 begin
   Reply(360);
   NOption(361, Node999, 004);
end
procedure Node015 begin
   Reply(370);
   NOption(371, Node999, 001);
end
procedure Node016 begin
   set_metzger_known; //added by killap
   if (node_16) then begin
      NMessage(382);
   end else begin
      set_node_16;
      Reply(380 + dude_is_female);
      if (has_rep_slaver == false) then begin
         NOption(383, Node010, 004);
         NOption(386, Node010, -003); //added by killap
      end
      NOption(384, Node004, 004);
      NOption(385, Node999, 004);
      //NOption(386, Node010, -003); //edit by killap - was 999
      NOption(387, Node999, -003);
   end
end
procedure Node017 begin
   set_node_17;
   Reply(400);
   NOption(401, Node004, 004);
   NOption(402, Node999, 004);
end
procedure Node018 begin
   if (node_18) then begin
      Reply(412);
   end else begin
      set_node_18;
      Reply(410 + (vic_known(state_vic_known_name)));
   end
   if (has_rep_slaver == false) then begin
      NOption(413, Node010, 004);
   end
   NOption(414, Node004, 004);
   NOption(415, Node008, 004);
   NOption(416, Node999, 004);
end
procedure Node019 begin
   if (has_rep_slaver) then begin
      floater_rand(430,434);
   end else begin
      floater_rand(435,439);
   end
end
