/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name:
        Location: Den
        Description:

        Log:

           Created: August 22, 1998

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "dctemp"
#include "../headers/define.h"
#define NAME                    SCRIPT_DC
#define TOWN_REPUTATION         GVAR_TOWN_REP_THE_DEN
#include "../headers/command.h"
#include "../headers/modreact.h"
#include "../headers/den.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

procedure Node001;

/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Flags                        (4)

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */

/* Local variables which do not need to be saved between map changes. */

procedure start begin
end

procedure timed_event_p_proc begin
   if (fixed_param == timed_event_float) then begin
      if (combat_is_initialized == false) then begin
      end
      // ### flush_add_timer_event_sec(self_obj, random(, ), timed_event_float);
   end
end

procedure map_enter_p_proc begin
   destroy_object(self_obj); // ###
   if (is_loading_game == false) then begin
      if (map_first_run) then begin
         // ### critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM,TEAM_THE_DEN);
         // ### critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET,AI_);
      end
      // ### flush_add_timer_event_sec(self_obj, random(, ), timed_event_float);
   end
end

procedure map_exit_p_proc begin
end

procedure critter_p_proc begin
   if (self_can_see_dude) then begin
      if (hostile) then begin
         self_attack_dude;
      end
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

procedure talk_p_proc begin
   call Node001;
   set_herebefore;
end

procedure destroy_p_proc begin
   // ### inc__critter
end

procedure look_at_p_proc begin
   script_overrides;
   // ### display_mstr();
end

procedure description_p_proc begin
   script_overrides;
   // ### display_mstr_rand(,);
   set_examined;
end

procedure use_skill_on_p_proc begin
end

procedure Node998 begin
   set_hostile;
end
procedure Node999 begin
end

procedure Node001 begin
   // ### floater_rand(,);
end