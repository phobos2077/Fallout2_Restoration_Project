/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Petey the Alley Druggie
        Location: Den
        Description: He hangs around the alley near Smitty. He buys drugs from Flick and Tully

        Log:

           Created: August 22, 1998

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "dcpetey"
#include "../headers/define.h"
#define NAME                    SCRIPT_DCPETEY
#define TOWN_REPUTATION         GVAR_TOWN_REP_THE_DEN
#include "../headers/command.h"
#include "../headers/modreact.h"
#include "../headers/den.h"


/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node990;

/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Flags                        (4)
#define LVAR_Asked                        (5)
#define LVAR_Home_Tile                    (6)
#define LVAR_Gave_Money                   (7)
#define LVAR_Should_Animate               (8)

#define timed_event_high                           (4)
#define timed_event_buy_drugs                      (5)
#define ensure_animation                           (7)

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */

/* Local variables which do not need to be saved between map changes. */

variable place;
variable stage;

import variable flick_obj;
import variable tubby_obj;

procedure start begin
end

procedure timed_event_p_proc begin
   if (combat_is_initialized == false) then begin
      if (fixed_param == timed_event_float) then begin
         if (stage < 2) then
            floater_rand(202 - (dude_is_male*2), 204 + (dude_is_female*2));
         flush_add_timer_event_sec(self_obj, random(75,100), timed_event_float);
      end else if (fixed_param == timed_event_high) then begin
         if (local_var(LVAR_Should_Animate) == 0) then begin
            ndebug("fixed param 2");
            floater_rand(230,235);
         end
         add_timer_event(self_obj,random(200,300),timed_event_high);
      end else if (fixed_param == timed_event_buy_drugs) then begin
            ndebug("Going to buy drugs!");
            reg_anim_clear(self_obj);
            if (stage == 1) then begin
               if (tubby_dead) then begin
                  place := 2;
                  floater(random(300,302));
               end else if (flick_dead) then begin
                  place := 1;
                  floater(random(305,307));
               end else if ((tubby_dead) and (flick_dead)) then begin
                  if (flick_dead) then
                     floater(random(305,307));
                  else if (tubby_dead) then
                     floater(random(300,302));
               end else
                  place := random(1,2);
               if (place == 1) then begin
                  ndebug("place: " + place);
                  set_local_var(LVAR_Should_Animate,17508);
                  self_walk_to_tile(17508); //tubby
                  add_timer_event(self_obj,game_ticks(1),ensure_animation);
               end else if (place == 2) then begin
                  ndebug("place: " + place);
                  set_local_var(LVAR_Should_Animate,26684);
                  self_walk_to_tile(26684); //flick
                  add_timer_event(self_obj,game_ticks(1),ensure_animation);
               end
            end else if (stage == 2) then begin
               if (place == 1) then begin
                  stage := 3;
                  floater(random(320,321));
                  add_timer_event(self_obj,game_ticks(5),timed_event_buy_drugs);
               end else if (place == 2) then begin
                  stage := 3;
                  floater(random(324,325));
                  add_timer_event(self_obj,game_ticks(5),timed_event_buy_drugs);
               end
            end else if (stage == 3) then begin
               stage := 4;
               if (place == 1) then
                  float_msg(tubby_obj, mstr(random(340,341)), FLOAT_MSG_YELLOW); //tubby
               else
                  float_msg(flick_obj, mstr(random(340,341)), FLOAT_MSG_YELLOW); //flick
               add_timer_event(self_obj,game_ticks(3),timed_event_buy_drugs);
            end else if (stage == 4) then begin
               if (place == 1) then begin
                  stage := 5;
                  floater(random(330,331));
                  add_timer_event(self_obj,game_ticks(3),timed_event_buy_drugs);
               end else if (place == 2) then begin
                  stage := 5;
                  floater(random(334,335));
                  add_timer_event(self_obj,game_ticks(3),timed_event_buy_drugs);
               end
            end else if (stage == 5) then begin
               stage := 0;
               ndebug("I should head home now.");
               ndebug("Home_Tile: " + local_var(LVAR_Home_Tile));
               set_local_var(LVAR_Should_Animate,local_var(LVAR_Home_Tile));
               ndebug("Should_Animate:" + local_var(LVAR_Should_Animate));
               self_walk_to_tile(local_var(LVAR_Home_Tile));
               add_timer_event(self_obj,game_ticks(1),ensure_animation);
            end
      end else if (fixed_param == timed_event_wander) then begin
         if (local_var(LVAR_Should_Animate) == 0) then begin
            if (anim_busy(self_obj) == false) then begin
               ndebug("wander...");
               if (self_tile != local_var(LVAR_Home_Tile)) then begin
                  self_walk_to_tile(local_var(LVAR_Home_Tile));
               end else begin
                  ndebug("should wander to a different location other than home");
                  if (random(1,5) == 1) then begin
                     self_walk_to_tile(tile_num_in_direction(self_tile, random(1,5), random(4, 7)));
                  end else begin
                     self_walk_to_tile(tile_num_in_direction(self_tile, self_inv_rot, random(4, 7)));
                  end
               end
            end
         end
         add_timer_event(self_obj,random(150,250),timed_event_wander);
      end else if (fixed_param == ensure_animation) then begin
          if not anim_busy(self_obj) then begin
            ndebug("ensure_animation");
            if (local_var(LVAR_Should_Animate) != 0) then begin //edit by killap
               if (self_tile != (local_var(LVAR_Should_Animate))) then begin
                  self_walk_to_tile(local_var(LVAR_Should_Animate)); //edit by killap
                  add_timer_event(self_obj, game_ticks(1), ensure_animation); //was 2 ticks
               end else begin
                  if (stage == 1) then begin
                     stage := 2;
                     set_local_var(LVAR_Should_Animate,0);
                     add_timer_event(self_obj,game_ticks(1),timed_event_buy_drugs);
                  end else begin
                     set_local_var(LVAR_Should_Animate,0);
                     add_timer_event(self_obj,random(1100,1300),timed_event_buy_drugs);
                  end
               end
            end
          end else begin
            add_timer_event(self_obj, game_ticks(1), ensure_animation); //was 2 ticks
          end
      end
   end
end

procedure map_enter_p_proc begin

   if (local_var(LVAR_Home_Tile) == 0) then begin
      set_local_var(LVAR_Home_Tile, self_tile);
   end
   set_local_var(LVAR_Should_Animate, 0);

   ndebug("Home_Tile" + local_var(LVAR_Home_Tile));

   if (map_first_run) then begin
      set_self_team(TEAM_THE_DEN);
      set_self_ai(AI_PEASANT);
   end

   stage := 1;
   add_timer_event(self_obj,random(800,1000),timed_event_buy_drugs);
   add_timer_event(self_obj,random(200,300),timed_event_high);
   add_timer_event(self_obj,random(150,250),timed_event_wander);
   add_timer_event(self_obj,random(100,175),timed_event_float);

end

procedure map_exit_p_proc begin
end

procedure critter_p_proc begin
   if (self_can_see_dude) then begin
      if (hostile) then begin
         self_attack_dude;
      end

      if (not(combat_is_initialized)) then begin
         if ( (tile_distance_objs(self_obj, dude_obj) < 5) and (local_var(LVAR_Asked) != 1) and (stage < 2) ) then begin
            start_dialog_at_node(Node004);
            set_local_var(LVAR_Asked,1);
            set_herebefore;
         end
      end
   end

   if ((not(combat_is_initialized)) and (not(anim_busy(self_obj)))) then begin
      if (local_var(LVAR_Should_Animate) != 0) then begin
         add_timer_event(self_obj,game_ticks(2),ensure_animation);
      end
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
   end
end

procedure push_p_proc begin
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

procedure talk_p_proc begin
   start_dialog_at_node(Node001);
   set_herebefore;
end

procedure destroy_p_proc begin
   inc_neutral_critter
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(100 + herebefore);
end

procedure description_p_proc begin
   script_overrides;
   display_mstr(150 + herebefore);
end

procedure use_skill_on_p_proc begin
end

procedure Node998 begin
   set_hostile;
end

procedure Node999 begin
end

procedure Node001 begin
   Reply(155);
   if (dude_caps < 5) then
      NOption(175, Node003, 004);
   else
      NOption(156, Node990, 004);
   NOption(157, Node003, 004);
   NOption(158, Node005, -003);
end

procedure Node002 begin
   Reply(164);
   NOption(165, Node999, 004);

   if (stage == 0) then
      add_timer_event(self_obj,game_ticks(2),timed_event_buy_drugs); //goes to buy drugs with the money you just gave him.
end

procedure Node003 begin
   Reply(162);
   NOption(166, Node999, 004);
end

procedure Node004 begin
   Reply(167 + (dude_is_female*4));
   NOption(158, Node005, -003);
   if (dude_caps < 5) then
      NOption(175, Node003, 004);
   else
      NOption((168+(dude_is_female*4)), Node990, 004);
   NOption((169+(dude_is_female*4)), Node003, 004);
   NOption((170+(dude_is_female*4)), Node003, 004);
end

procedure Node990 begin
   dude_caps_adjust(-5);
   if (local_var(LVAR_Gave_Money) == 0) then
      inc_general_rep(1); //gain 1 karma for giving to the poor.
   set_local_var(LVAR_Gave_Money,1);
   call Node002;
end

procedure Node005 begin
   Reply(159);
   NOption(163, Node999, -003);
end
