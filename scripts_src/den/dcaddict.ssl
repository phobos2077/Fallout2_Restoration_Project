/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name:
        Location: Den
        Description:

        Log:

           Created: August 22, 1998

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "dcaddict"
#include "../headers/define.h"
#define NAME                    SCRIPT_DCADDICT
#define TOWN_REPUTATION         GVAR_TOWN_REP_THE_DEN
#include "../headers/command.h"
#include "../headers/modreact.h"
#include "../headers/den.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;
procedure push_p_proc;

procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;

#define LVAR_Flags                        (4)
#define LVAR_HIGH_STATUS                  (5)
#define LVAR_Home_Tile                    (6)

#define said_crazy_rant_bit               bit_11
#define crazy_bit                         bit_12
#define replaced_bit                      bit_13

#define said_crazy_rant                   lvar_bit(LVAR_Flags, said_crazy_rant_bit)
#define set_said_crazy_rant               flush_add_timer_event_sec(self_obj, random(5, 15), timed_event_off_crazy_rant);  \
                                          set_lvar_bit_on(LVAR_Flags, said_crazy_rant_bit)
#define off_said_crazy_rant               set_lvar_bit_off(LVAR_Flags, said_crazy_rant_bit)

#define crazy                             lvar_bit(LVAR_Flags, crazy_bit)
#define set_crazy                         set_lvar_bit_on(LVAR_Flags, crazy_bit);                                             \
                                          off_said_crazy_rant;                                                                \
                                          set_self_team(TEAM_DEN_CRAZY_ADDICT);    \
                                          set_crazy_addict
#define off_crazy                         if (crazy) then begin                                                               \
                                             off_crazy_addict;                                                                \
                                          end                                                                                 \
                                          set_self_team(TEAM_DEN_ADDICT);           \
                                          set_lvar_bit_off(LVAR_Flags, crazy_bit)

#define STATUS_LOW                        (0)
#define STATUS_HEAVY                      (1)
#define check_status(x)                   (local_var(LVAR_HIGH_STATUS) == x)
#define heavy_high                        ((check_status(STATUS_HEAVY)) and (self_is_high))
#define light_high                        ((check_status(STATUS_LOW)) and (self_is_high))
#define light_withdrawal                  ((check_status(STATUS_LOW)) and (self_is_high == false))
#define heavy_withdrawal                  ((check_status(STATUS_HEAVY)) and (self_is_high == false))
#define get_addict_high                   if (self_is_high == false) then begin                                      \
                                             if (random(0,1)) then begin                                             \
                                                use_obj_on_obj(create_object(PID_JET,0,0),self_obj);                 \
                                                if (crazy_addict == false) then begin                                \
                                                   if (heavy_high) then begin                                        \
                                                      if (random(1,100) == 1) then begin                             \
                                                         ndebug("setting a crazy addict");                        \
                                                         set_crazy;                                                  \
                                                      end                                                            \
                                                   end                                                               \
                                                end                                                                  \
                                             end else if (crazy) then begin                                          \
                                                off_crazy;                                                           \
                                             end                                                                     \
                                          end                                                                        \
                                          if (crazy) then begin                                                      \
                                             set_self_ai(AI_CRAZY_ADDICT);    \
                                          end else begin                                                                   \
                                             set_self_ai(AI_ADDICT_WIMPY);    \
                                          end                                                                              \
                                          flush_add_timer_event_sec(self_obj, random(900, 3600), timed_event_get_high)
#define set_random_status                 set_local_var(LVAR_HIGH_STATUS, random(STATUS_LOW, STATUS_HEAVY));               \
                                          get_addict_high
#define standard_addict_floater           if (heavy_high == false) then begin                                           \
                                             flush_add_timer_event_sec(self_obj, random(15, 60), timed_event_float);    \
                                          end else begin                                                                \
                                             flush_add_timer_event_sec(self_obj, random(5, 15), timed_event_float);     \
                                          end

#define standard_addict_wander            flush_add_timer_event_sec(self_obj, random(2, 10) * (5 * ((self_is_high == false) + (timed_event_wander))), timed_event_wander)

#define replaced                          lvar_bit(LVAR_Flags, replaced_bit)
#define set_replaced                      if (replaced == false) then begin                                                      \
                                             if (tile_is_blocked(local_var(LVAR_Home_Tile), self_elevation) == false) then begin \
                                                temp_junkie := create_object_sid(self_pid, 0, 0, NAME);                          \
                                                check_set_obj_visiblility(temp_junkie, true);                                           \
                                                move_to(temp_junkie, local_var(LVAR_Home_Tile), self_elevation);                 \
                                             end                                                                                 \
                                          end                                                                                    \
                                          set_lvar_bit_on(LVAR_Flags, replaced_bit)

variable temp_junkie;

procedure start begin
end

procedure push_p_proc begin
end

procedure timed_event_p_proc begin
variable the_temp;
   if (self_visible) then begin
      if (fixed_param == timed_event_float) then begin
         if (combat_is_initialized == false) then begin
            if (crazy) then begin
               call Node005;
            end else if (random(1, 5 - (heavy_high * 2)) == 1) then begin
               if (personal_enemy) then begin
                  call Node003;
               end else begin
                  call Node004;
               end
            end
         end
         standard_addict_floater
      end else if (fixed_param == timed_event_wander) then begin
         if (anim_busy(self_obj) == false) then begin
            if (self_is_high) then begin
               if (tile_distance(self_tile, local_var(LVAR_Home_Tile)) >= 10) then begin
                  the_temp := tile_num_in_direction(self_tile, rotation_to_tile(self_tile, local_var(LVAR_Home_Tile)), random(5, 10));
               end else begin
                  the_temp := tile_num_in_direction(self_tile, random(0, 5), random(5, 15));
               end
               if (check_status(STATUS_HEAVY)) then begin
                  self_run_to_tile(the_temp);
               end else begin
                  self_walk_to_tile(the_temp);
               end
            end else if (self_tile != local_var(LVAR_Home_Tile)) then begin
               self_walk_to_tile(local_var(LVAR_Home_Tile));
            end else begin
               if (random(1,5) == 1) then begin
                  self_walk_to_tile(tile_num_in_direction(self_tile, random(0,5), random(4, 7)));
               end else begin
                  self_walk_to_tile(tile_num_in_direction(self_tile, self_inv_rot, random(4, 7)));
               end
            end
         end
         standard_addict_wander;
      end else if (fixed_param == timed_event_get_high) then begin
         get_addict_high;
      end else if (fixed_param == timed_event_off_crazy_rant) then begin
         off_said_crazy_rant;
      end
   end
end

procedure map_enter_p_proc begin
   CHECK_LEVEL //added by killap - expansion pack
   if (local_var(LVAR_Home_Tile) == 0) then begin
      set_local_var(LVAR_Home_Tile, self_tile);
   end
   if (is_loading_game == false) then begin
      if (map_first_run) then begin
         set_self_team(TEAM_DEN_ADDICT);
      end
      set_random_status;
      if ((random(1,3) == 1) and (crazy == false)) then begin
         check_set_obj_visiblility(self_obj, true);
      end else begin
         check_set_obj_visiblility(self_obj, false);
         standard_addict_floater
         standard_addict_wander;
      end
   end
end

procedure map_exit_p_proc begin
   off_crazy;
end

procedure critter_p_proc begin
   if (self_visible) then begin
      if ((self_can_see_dude) and (self_distance_from_dude <= 6)) then begin
         if (crazy) then begin
            call Node005;
            self_attack_dude;
         end else if ((hostile) and (self_is_high == false)) then begin
            self_attack_dude;
         end
      end
   end
end

procedure damage_p_proc begin
   if ((source_obj == dude_obj) and (self_is_high == false)) then begin
      set_personal_enemy;
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

procedure talk_p_proc begin
   if (personal_enemy) then begin
      call Node001;
   end else begin
      call Node002;
   end
   set_herebefore;
   standard_addict_floater
end

procedure destroy_p_proc begin
   off_crazy;
   inc_neutral_critter
   set_replaced;
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(100);
end

procedure description_p_proc begin
   script_overrides;
   if (heavy_high) then begin
      display_mstr(101);
   end else if (light_high) then begin
      display_mstr(102 + self_is_female);
   end else if (light_withdrawal) then begin
      display_mstr(104 + self_is_female);
   end else begin
      display_mstr_rand(106,107);
   end
   set_examined;
end

procedure use_skill_on_p_proc begin
end

procedure Node998 begin
   set_hostile;
end
procedure Node999 begin
end

procedure Node001 begin
   if (self_is_high) then begin
      floater_rand(150, 154);
   end else begin
      floater_rand(156 - dude_is_male, 160);
   end
end
procedure Node002 begin
   if (heavy_high) then begin
      floater_rand(201 - self_rep_negative, 212 + self_rep_positive );
   end else if (light_high) then begin
      floater_rand(215 - dude_is_male, 221);
   end else if (light_withdrawal) then begin
      floater_rand(222, 229);
   end else begin
      floater_rand(231 - dude_is_male, 237 + dude_is_female);
   end
end
procedure Node003 begin
   if (heavy_high) then begin
      floater_rand(300, 302);
   end else if (light_high) then begin
      floater_rand(303, 305);
   end else begin
      floater_rand(306, 308);
   end
end
procedure Node004 begin
   if (heavy_high) then begin
      floater_rand(350, 361);
   end else if (light_high) then begin
      floater_rand(362, 368);
   end else if (light_withdrawal) then begin
      floater_rand(369, 372);
   end else begin
      floater_rand(373, 378);
   end
end
procedure Node005 begin
   if (said_crazy_rant == false) then begin
      set_said_crazy_rant;
      floater_rand(400, 409);
   end
end
