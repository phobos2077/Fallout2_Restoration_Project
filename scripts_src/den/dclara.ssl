/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name:
        Location: Den
        Description:

        Log:

           Created: August 22, 1998

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "dclara"
#include "../headers/define.h"
#define NAME                    SCRIPT_DCLARA
#define TOWN_REPUTATION         GVAR_TOWN_REP_THE_DEN
#include "../headers/command.h"
#include "../headers/modreact.h"
#include "../headers/den.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;
procedure map_update_p_proc;
procedure combat_p_proc;
procedure push_p_proc;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;

//added by killap - expansion
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
//end added

/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Flags                        (4)
#define LVAR_Home_Tile                    (5)
#define LVAR_Home_Rotation                (6)
#define LVAR_Attack_Tyler_Wait            (7) //added by killap - expansion

#define node_1_bit                        bit_10
#define node_2_bit                        bit_11
#define node_4_bit                        bit_12
#define node_5_bit                        bit_13
#define node_6_bit                        bit_14
#define node_17_bit                       bit_15
#define node_28_bit                       bit_16
#define node_30_bit                       bit_17
#define node_36_bit                       bit_18
#define gave_money_bit                    bit_19

#define gave_money                        lvar_bit(LVAR_Flags, gave_money_bit)
#define set_gave_money(the_obj)           if (gave_money == false) then begin          \
                                             item_caps_adjust(the_obj, 400);          \
                                          end                                          \
                                          set_lvar_bit_on(LVAR_Flags, gave_money_bit)

#define node_1                            lvar_bit(LVAR_Flags, node_1_bit)
#define set_node_1                        set_lvar_bit_on(LVAR_Flags, node_1_bit)

#define node_2                            lvar_bit(LVAR_Flags, node_2_bit)
#define set_node_2                        set_lvar_bit_on(LVAR_Flags, node_2_bit)

#define node_4                            lvar_bit(LVAR_Flags, node_4_bit)
#define set_node_4                        set_lvar_bit_on(LVAR_Flags, node_4_bit)

#define node_5                            lvar_bit(LVAR_Flags, node_5_bit)
#define set_node_5                        set_lvar_bit_on(LVAR_Flags, node_5_bit)

#define node_6                            lvar_bit(LVAR_Flags, node_6_bit)
#define set_node_6                        set_lvar_bit_on(LVAR_Flags, node_6_bit)

#define node_17                           lvar_bit(LVAR_Flags, node_17_bit)
#define set_node_17                       set_lvar_bit_on(LVAR_Flags, node_17_bit)

#define node_28                           lvar_bit(LVAR_Flags, node_28_bit)
#define set_node_28                       set_lvar_bit_on(LVAR_Flags, node_28_bit)

#define node_30                           lvar_bit(LVAR_Flags, node_30_bit)
#define set_node_30                       set_lvar_bit_on(LVAR_Flags, node_30_bit)

#define node_36                           lvar_bit(LVAR_Flags, node_36_bit)
#define set_node_36                       set_lvar_bit_on(LVAR_Flags, node_36_bit)

#define self_gang                         gang_2

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */

/* Local variables which do not need to be saved between map changes. */
import variable gang_1_member_1;
import variable gang_1_member_2;
import variable gang_1_member_3;
import variable gang_1_member_4;
import variable gang_1_member_5;
import variable gang_2_member_1;
import variable gang_2_member_2;
import variable gang_2_member_3;
import variable gang_2_member_4;
import variable gang_2_member_5;
import variable church_door_obj;

procedure start begin
end

procedure push_p_proc begin
   gang_member_push_proc
end

procedure timed_event_p_proc begin
   if (fixed_param == timed_event_float) then begin
      if (gave_money == false) then begin
         if (combat_is_initialized == false) then begin
            if (self_can_see_dude) then begin
               if ((gangwar(state_gangwar_2won)) and (gang_trap(state_gang_trap_no)) and (gang_hostile == false)) then begin
                  dialogue_system_enter;
               end
            end
         end
         flush_add_timer_event_sec(self_obj, 1, timed_event_float);
      end
   end
end

procedure map_update_p_proc begin
   gang_map_update_p_proc
end

procedure map_enter_p_proc begin
   gang_member_map_enter
   flush_add_timer_event_sec(self_obj, 1, timed_event_float);

   if (cur_map_index == MAP_DEN_BUSINESS and gangwar(state_gangwar_in_fight)) then begin
      call Node039;
   end

   //added by killap - expansion
   if (cur_map_index == MAP_DEN_ENTRANCE) then begin
      if (gangwar(state_gangwar_in_fight)) then begin
         set_self_invisible;
      end else begin
         set_self_visible;
      end
   end else if (cur_map_index == MAP_DEN_BUSINESS and at_party_fight) then begin
      set_self_invisible;
   end else begin
      if ((gangwar(state_gangwar_2won)) or (gangwar(state_gangwar_in_fight))) then begin
         set_self_visible;
      end else begin
         set_self_invisible;
      end
   end

   if ( (cur_map_index == MAP_DEN_RESIDENTIAL) and (gangwar(state_gangwar_2won)) ) then
      destroy_object(self_obj);

   //added by killap --expansion
   if (lara_dead) then
      destroy_object(self_obj);
   //end added

   ndebug("tyler count" + global_var(GVAR_DEN_GANG_1_COUNT));
   ndebug("lara count" + global_var(GVAR_DEN_GANG_2_COUNT));

end

procedure map_exit_p_proc begin
end

procedure combat_p_proc begin
   gang_combat_p_proc
end

procedure critter_p_proc begin
   if not self_obj then return;
   gang_critter_p_proc

   //added by killap
   if (cur_map_index == MAP_DEN_BUSINESS) then begin
      if (gangwar(state_gangwar_in_fight)) then begin
         // Player double crosses Lara and then double crosses Tyler - killap
         if (tyler_dead) then begin
            off_hostile;
            set_den_flag_off(gang_2_hostile_bit, 3);
            set_global_var(GVAR_DEN_GANG_TRAP, 0);
            set_gangwar(state_gangwar_2won);
         end
         // end added
         else if (church_cleared_speech == false) then begin
            if (global_var(gang_1) <= 4) then begin
               if (not combat_is_initialized) then begin
                  terminate_combat;
               end
               start_dialog_at_node(Node040);
            end
         end else if ( (self_distance_from_dude > 8) and (returned_to_church == false) and (gang_war_dude_stray_message == false) ) then begin
            start_dialog_at_node(Node044);
         end
      end
   end

   if (gangwar(state_gangwar_2won)) then begin
      if (self_team == TEAM_PLAYER) then begin
         set_self_team(TEAM_DEN_GANG_2);
      end
   end

   if ( (gangwar(state_gangwar_2won)) and (cur_map_index == MAP_DEN_RESIDENTIAL) ) then begin
      if (returned_to_church) then begin
         destroy_object(self_obj);
      end
   end
   //end added

end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
      gang_member_damage
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

procedure talk_p_proc begin
   ndebug("global_var(GVAR_DEN_GANGWAR) == "+global_var(GVAR_DEN_GANGWAR));
   if ((hostile) or (gang_hostile)) then begin
      call Node034;
   end else if (metzger_dead) then begin
      call Node033;
   end else if (gangwar(state_gangwar_in_fight)) then begin
      //added by killap - expansion
      if (local_var(LVAR_Attack_Tyler_Wait)) then begin
         start_dialog_at_node(Node043);  //end added by killap - expansion
      end else if ((global_var(gang_1) < 7) and (church_cleared_speech == false)) then begin
         start_dialog_at_node(Node040);
      //end added
      end else begin
         call Node039;
      end
   end else if (gangwar(state_gangwar_2won)) then begin
      if (gang_trap(state_gang_trap_no) == false) then begin
         call Node034;
      //added by killap - expansion
      end else if (cur_map_index == MAP_DEN_RESIDENTIAL) then begin
         if returned_to_church then floater(730);
         else start_dialog_at_node(Node045);
      //end added
      end else if (gave_money) then begin
         call Node032;
      end else begin
         start_dialog_at_node(Node035);
      end
   end else if (gangwar(state_gangwar_no_show)) then begin
      call Node031;
   end else if (gangwar(state_gangwar_coward)) then begin
      start_dialog_at_node(Node030);
   end else if (gang_1_dead or tyler_dead) then begin //edit by killap - added tyler_dead
      if (node_36) then begin
         call Node038;
      end else begin
         start_dialog_at_node(Node036);
      end
   end else if (gangwar(state_gangwar_fight)) then begin
      start_dialog_at_node(Node028);
   end else if ((gangwar(state_gangwar_find)) or (gangwar(state_gangwar_weakness))) then begin
      start_dialog_at_node(Node026);
   end else if ((gangwar(state_gangwar_ask)) or (gangwar(state_gangwar_permission))) then begin
      start_dialog_at_node(Node019);
   end else if (gangwar(state_gangwar_crates)) then begin
      start_dialog_at_node(Node018);
   end else begin
      start_dialog_at_node(Node001);
   end
   call Node001;
   set_herebefore;
end

procedure destroy_p_proc begin
   dest_gang_member;
   set_lara_dead;
   if (gangwar(state_gangwar_in_fight)) then begin
      set_gave_money(self_obj);
   end
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(100);
end

procedure description_p_proc begin
   script_overrides;
   display_mstr(150);
   set_examined;
end

procedure use_skill_on_p_proc begin
end

procedure Node998 begin
   set_hostile;
end
procedure Node999 begin
end
procedure Node990 begin
   setup_gang_fight;
end
procedure Node989 begin
   set_gangwar(state_gangwar_coward);
end

procedure Node001 begin
   Reply(200 + node_1);
   set_node_1;
   NOption(202, Node006, 004);
   NOption(203, Node004, 004);
   if (vic_free == false) then begin
      NOption(204, Node003, 004);
   end
   NOption(205, Node002, -003);
   NOption(206, Node002, -003);
end
procedure Node002 begin
   Reply(220 + node_2);
   set_node_2;
   NOption(222, Node999, -003);
end
procedure Node003 begin
   set_becky_known;
   Reply(230);
   NOption(231, Node006, 004);
   NOption(232, Node999, 004);
end
procedure Node004 begin
   Reply(240 + node_4);
   set_node_4;
   NOption(242, Node006, 004);
   NOption(243, Node005, 004);
   NOption(244, Node999, 004);
end
procedure Node005 begin
   Reply(250 + node_5);
   set_node_5;
   NOption(252, Node006, 004);
   NOption(253, Node999, 004);
end
procedure Node006 begin
   Reply(260 + node_6);
   set_node_6;
   NOption(262, Node008, 004);
   NOption(263, Node007, 004);
end
procedure Node007 begin
   Reply(270);
   NOption(271, Node999, 004);
end
procedure Node008 begin
   set_metzger_known;
   set_gangwar(state_gangwar_crates);
   Reply(280);
   if (crates_ID) then begin
      NOption(281, Node010, 004);
   end
   NOption(282, Node009, 004);
   NOption(283, Node009, 004);
end
procedure Node009 begin
   Reply(290);
   NOption(291, Node999, 004);
   NOption(292, Node999, 004);
end
procedure Node010 begin
   Reply(300);
   NOption(301 + (dude_iq < 8), Node011, 004);
   NOption(303, Node999, 004);
end
procedure Node011 begin
   dude_caps_adjust(200);
   Reply(310);
   NOption(311, Node012, 006);
   NOption(312, Node015, 004);
end
procedure Node012 begin
   Reply(320);
   NOption(321, Node013, 004);
   NOption(322, Node015, 004);
end
procedure Node013 begin
   Reply(340);
   NOption(341, Node014, 006);
   NOption(342, Node015, 004);
end
procedure Node014 begin
   Reply(350);
   NOption(351, Node015, 004);
end
procedure Node015 begin
   Reply(360);
   NOption(361, Node016, 004);
   NOption(362, Node016, 004);
end
procedure Node016 begin
   set_gangwar(state_gangwar_ask);
   Reply(370);
   NOption(371, Node017, 004);
   NOption(372, Node999, 004);
   NOption(373, Node999, 004);
end
procedure Node017 begin
   Reply(380 + node_17);
   set_node_17;
   NOption(382, Node999, 004);
   NOption(383, Node999, 004);
end
procedure Node018 begin
   Reply(390);
   if (crates_ID) then begin
      NOption(391 + (dude_iq < 8), Node011, 004);
   end
   NOption(393, Node999, 004);
end
procedure Node019 begin
   Reply(400);
   if (gangwar(state_gangwar_permission)) then begin
      NOption(401, Node020, 004);
   end
   NOption(402, Node999, 004);
end
procedure Node020 begin
   dude_caps_adjust(50);
   Reply(410);
   NOption(411, Node023, 004);
   NOption(412, Node021, 004);
end
procedure Node021 begin
   Reply(420);
   NOption(421, Node022, 004);
   NOption(422, Node023, 004);
end
procedure Node022 begin
   Reply(430);
   NOption(431, Node023, 004);
end
procedure Node023 begin
   set_gangwar(state_gangwar_find);
   Reply(440);
   NOption(441, Node025, 006);
   NOption(442, Node024, 004);
   NOption(443, Node999, 004);
end
procedure Node024 begin
   Reply(450);
   NOption(451, Node999, 004);
   NOption(452, Node999, 004);
end
procedure Node025 begin
   Reply(460);
   GOption(461, Node999, 004);
   NOption(462, Node999, 004);
end
procedure Node026 begin
   Reply(470);
   if (gangwar(state_gangwar_weakness)) then begin
      NOption(471, Node027, 004);
   end
   NOption(472, Node999, 004);
   NOption(473, Node002, -003);
   NOption(474, Node999, -003);
end
procedure Node027 begin
   set_gangwar(state_gangwar_fight);
   Reply(480);
   NOption(481, Node028, 004);
end
procedure Node028 begin
   Reply(490 + node_28);
   set_node_28;
   NOption(492, Node990, 004);
   NOption(493, Node029, 004);
   NOption(494, Node030, 004);
end
procedure Node029 begin
   Reply(500);
   NOption(501, Node999, 004);
end
procedure Node030 begin
   Reply(510 + node_30);
   set_node_30;
   NOption(512, Node990, 004);
   NOption(513, Node029, 004);
   NOption(514, Node989, 004);
   NOption(515, Node002, -003);
end
procedure Node031 begin
   floater_rand(520, 525);
end
procedure Node032 begin
   floater_rand(530, 534);
end
procedure Node033 begin
   floater_rand(540, 544);
end
procedure Node034 begin
   floater(550 + dude_is_female);
   set_hostile; // replaced self_attack_dude with this since the script crashes if we attack from dialogue. -killap
end
procedure Node035 begin
   set_gave_money(dude_obj);
   GMessage(560);
end
procedure Node036 begin
   if (gangwar(state_gangwar_none)) then begin
      Reply(571);
      BOption(575, Node999, 004);
      BOption(577, Node999, -003);
   end else begin
      Reply(570);
      BOption(572, Node037, 004);
      BOption(573, Node037, 004);
      BOption(576, Node037, -003);
   end
   BOption(574, Node998, 004);
   set_node_36; //added by killap
end
procedure Node037 begin
   if (gangwar(state_gangwar_fight)) then begin
      Reply(590);
   end else if ((gangwar(state_gangwar_find)) or (gangwar(state_gangwar_weakness))) then begin
      Reply(591);
   end else if ((gangwar(state_gangwar_ask)) or (gangwar(state_gangwar_permission))) then begin
      Reply(592);
   end else begin
      Reply(593);
   end
   NOption(594, Node999, 004);
   NOption(595, Node999, 004);
   BOption(596, Node998, 004);
   NOption(597, Node999, -003);
   BOption(598, Node998, -003);
end
procedure Node038 begin
   if (gangwar(state_gangwar_none)) then begin
      floater_rand(614, 619);
   end else begin
      floater_rand(610, 613);
   end
end
procedure Node039 begin
   floater(650);
end

//added by killap - expansion
procedure Node040 begin
   set_church_cleared_speech;
   Reply(700);
   NOption(701, Node044, 004);
   NOption(702, Node042, 004);
end

procedure Node041 begin
   set_local_var(LVAR_Attack_Tyler_Wait,1);
end

procedure Node042 begin
   set_local_var(LVAR_Attack_Tyler_Wait,0);
   set_at_party_fight;
   load_map(MAP_DEN_RESIDENTIAL, 555);
end

procedure Node043 begin
   Reply(710);
   NOption(701, Node041, 004);
   NOption(702, Node042, 004);
end

procedure Node044 begin
   set_gang_war_dude_stray_message;
   Reply(720);
   NOption(721, Node041, 004);
   NOption(722, Node042, 004);
end

procedure Node045 begin
   GMessage(730);
   clear_at_party_fight;
   set_returned_to_church;
end
//end added
