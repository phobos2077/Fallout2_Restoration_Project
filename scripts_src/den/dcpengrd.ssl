/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name:
        Location: Den
        Description:

        Log:

           Created: August 22, 1998

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "dcpengrd"
#include "../headers/define.h"
#define NAME                    SCRIPT_DCPENGRD
#define TOWN_REPUTATION         GVAR_TOWN_REP_THE_DEN
#include "../headers/command.h"
#include "../headers/modreact.h"
#include "../headers/den.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

procedure Node001;
procedure Node002;
procedure Node003;

/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Flags                        (4)
#define LVAR_Home_Tile                    (5)
#define LVAR_Home_Rotation                (6)

#define door_warned_bit                   bit_10

#define door_warned                       lvar_bit(LVAR_Flags, door_warned_bit)
#define set_door_warned                   set_lvar_bit_on(LVAR_Flags, door_warned_bit)

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */

/* Local variables which do not need to be saved between map changes. */
import variable pen_door_guard_obj;

procedure start begin
   pen_door_guard_obj := self_obj;
end

procedure timed_event_p_proc begin
   if (fixed_param == timed_event_float) then begin
      // ### flush_add_timer_event_sec(self_obj, random(, ), timed_event_float);
   end else if (fixed_param == timed_event_door_tamper) then begin
      call Node001;
   end
end

procedure map_enter_p_proc begin
   pen_door_guard_obj := self_obj;
   if (is_loading_game == false) then begin
      if (map_first_run) then begin
         set_self_team(TEAM_DEN_SLAVER);
         set_self_ai(AI_SLAVER);
         set_local_var(LVAR_Home_Tile, self_tile);
         set_local_var(LVAR_Home_Rotation, self_cur_rot);
      end
      if (self_tile != local_var(LVAR_Home_Tile)) then begin
         critter_attempt_placement(self_obj, local_var(LVAR_Home_Tile), self_elevation);
      end
      if (self_cur_rot != local_var(LVAR_Home_Rotation)) then begin
         self_rotate(local_var(LVAR_Home_Rotation));
      end
   end
end

procedure map_exit_p_proc begin
end

procedure critter_p_proc begin
   if (self_can_see_dude) then begin
      if ((hostile) or (hostile_slavers)) then begin
         self_attack_dude;
      end
   end else if (self_tile != local_var(LVAR_Home_Tile)) then begin
      self_walk_to_tile(local_var(LVAR_Home_Tile));
   end else if (self_cur_rot != local_var(LVAR_Home_Rotation)) then begin
      self_rotate(local_var(LVAR_Home_Rotation));
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
      set_hostile_slavers;
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

procedure talk_p_proc begin
   if ((hostile) or (hostile_slavers)) then begin
      call Node998;
   end else if (has_rep_slaver) then begin
      call Node003;
   end else begin
      call Node002;
   end
   set_herebefore;
end

procedure destroy_p_proc begin
   inc_evil_critter
   pen_door_guard_obj := 0;
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(100);
end

procedure description_p_proc begin
   script_overrides;
   display_mstr(150);
   set_examined;
end

procedure use_skill_on_p_proc begin
end

procedure Node998 begin
   set_hostile;
   set_hostile_slavers;
end
procedure Node999 begin
end

procedure Node001 begin
   if (door_warned) then begin
      floater(201);
      call Node998;
   end else begin
      floater(200);
      set_door_warned;
   end
end

procedure Node002 begin
   floater_rand(210, 214 + (2 * dude_is_female));
end

procedure Node003 begin
   floater_rand(231 - dude_is_male, 235 + (4 * dude_is_female));
end
