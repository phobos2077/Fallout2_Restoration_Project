/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name:
        Location: Den
        Description:

        Log:

           Created: August 22, 1998

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "dcmetzge"
#include "../headers/define.h"
#define NAME                    SCRIPT_DCMETZGE
#define TOWN_REPUTATION         GVAR_TOWN_REP_THE_DEN
#include "../headers/command.h"
#include "../headers/modreact.h"
#include "../headers/den.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;

//added by killap - expansion pack
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node900;
//end added

/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Flags                        (4)
#define LVAR_Total_Slaving_Score          (5)
#define LVAR_METZGER_BAN                  (6)
#define LVAR_Home_Tile                    (7)
#define LVAR_Home_Rotation                (8)
#define LVAR_Asked_About_Other_Facilities (9) // added by killap - expansion

#define node_6_bit                        bit_10
#define node_10_bit                       bit_11
#define node_20_bit                       bit_12
#define node_21a_bit                      bit_13
#define node_21b_bit                      bit_14
#define node_23_bit                       bit_15
#define node_24_bit                       bit_16
#define node_26_bit                       bit_17
#define slaver_cherry_bit                 bit_18

#define node_6                            lvar_bit(LVAR_Flags, node_6_bit)
#define set_node_6                        set_lvar_bit_on(LVAR_Flags, node_6_bit)

#define node_10                           lvar_bit(LVAR_Flags, node_10_bit)
#define set_node_10                       set_lvar_bit_on(LVAR_Flags, node_10_bit)

#define node_20                           lvar_bit(LVAR_Flags, node_20_bit)
#define set_node_20                       set_lvar_bit_on(LVAR_Flags, node_20_bit)

#define node_21a                          lvar_bit(LVAR_Flags, node_21a_bit)
#define set_node_21a                      set_lvar_bit_on(LVAR_Flags, node_21a_bit)

#define node_21b                          lvar_bit(LVAR_Flags, node_21b_bit)
#define set_node_21b                      set_lvar_bit_on(LVAR_Flags, node_21b_bit)

#define node_23                           lvar_bit(LVAR_Flags, node_23_bit)
#define set_node_23                       set_lvar_bit_on(LVAR_Flags, node_23_bit)

#define node_24                           lvar_bit(LVAR_Flags, node_24_bit)
#define set_node_24                       set_lvar_bit_on(LVAR_Flags, node_24_bit)

#define node_26                           lvar_bit(LVAR_Flags, node_26_bit)
#define set_node_26                       set_lvar_bit_on(LVAR_Flags, node_26_bit)

#define slaver_cherry                     lvar_bit(LVAR_Flags, slaver_cherry_bit)
#define set_slaver_cherry                 if (slaver_cherry == false) then begin                \
                                             den_display_mstr(700);                             \
                                             give_xp(EXP_BREAK_SLAVE_RUN_CHERRY);               \
                                             inc_general_rep(REP_BONUS_BREAK_SLAVE_RUN_CHERRY); \
                                          end else begin                                        \
                                             inc_general_rep(REP_BONUS_SLAVE_RUN_OVER);         \
                                          end                                                   \
                                          set_lvar_bit_on(LVAR_Flags, slaver_cherry_bit)

#define total_slaving_score               (local_var(LVAR_Total_Slaving_Score))
#define inc_total_slaving_score(x)        inc_local_var_amt(LVAR_Total_Slaving_Score, x)
#define score_too_high                    (total_slaving_score >= 30)
#define score_too_low                     (total_slaving_score < 0)

#define vic_price_formula                 (1000 / (metzger_sex + 1))

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */

/* Local variables which do not need to be saved between map changes. */
variable prev_node;
variable party_being_sold;
variable party_price;
import variable generic_temp_box;
import variable den_metzger_box_obj;

procedure start begin
end

procedure timed_event_p_proc begin
   if (fixed_param == timed_event_post_sex) then begin
      if (combat_is_initialized == false) then begin
         call Node029;
      end
   end
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
      if (map_first_run) then begin
         set_local_var(LVAR_Home_Tile, self_tile);
         set_local_var(LVAR_Home_Rotation, self_cur_rot);
         set_self_team(TEAM_DEN_SLAVER);
         set_self_ai(AI_SLAVER);
      end
   end
end

procedure map_exit_p_proc begin
end

procedure critter_p_proc begin
   if (self_can_see_dude) then begin
      if ( (global_var(GVAR_WIPED_OUT_SLAVER_CAMP) == 1) or (hostile) or (hostile_slavers)) then begin
         //added check since his script crashes if he cannot see you when he is mad - killap
         if (self_can_see_dude) then begin
           self_attack_dude;
         end
      end else if (herebefore == false) then begin
         dialogue_system_enter;
      end
   end else if (self_tile != local_var(LVAR_Home_Tile)) then begin
      self_walk_to_tile(local_var(LVAR_Home_Tile));
   end else if (self_cur_rot != local_var(LVAR_Home_Rotation)) then begin
      self_rotate(local_var(LVAR_Home_Rotation));
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      if (combat_is_initialized == false) then begin
         call Node001;
      end
      set_hostile_slavers;
      set_personal_enemy;
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

procedure talk_p_proc begin
   //if (global_var(GVAR_KNOW_METZGER) == 0) then
   //   set_global_var(GVAR_KNOW_METZGER,1);
   ndebug("global_var(GVAR_DEN_GANGWAR) == "+global_var(GVAR_DEN_GANGWAR));
   prev_node := 0;
   if ((global_var(GVAR_WIPED_OUT_SLAVER_CAMP) == 1) or (hostile) or (hostile_slavers)) then begin
      //added check since his script crashes if he cannot see you when he is mad - killap
      if (self_can_see_dude) then begin
        self_attack_dude;
      end
   end else begin
      move_obj_inven_to_obj(self_obj,generic_temp_box);
         if ( attacked_slaver_on_run ) then begin
            start_dialog_at_node(Node030);
         end else if( (tyler_dead) and (metzger_permission == false) ) then begin
            call Node001;
            call Node998;
         end else if (abandon_slave_run) then begin
            start_dialog_at_node(Node043);
         end else begin
            move_obj_inven_to_obj(den_metzger_box_obj,self_obj);
               if (on_slave_run) then begin
                  start_dialog_at_node(Node028);
                  off_on_slave_run;
               end else begin
                  start_dialog_at_node(Node002);
               end
            move_obj_inven_to_obj(self_obj,den_metzger_box_obj);
         end
      move_obj_inven_to_obj(generic_temp_box,self_obj);
      set_herebefore;
   end
end

procedure destroy_p_proc begin
   set_vic_free;
   set_metzger_dead;
   move_obj_inven_to_obj(den_metzger_box_obj, self_obj);
   inc_evil_critter
end

procedure look_at_p_proc begin
   ndebug("HEY D, CAN YOU SEE ME??? IF SO, PUT YOUR HANDS UP I THE AIR AND WAVE EM LIKE YOU JUST DON'T CARE. AND YELL ALOT TOO.");
   script_overrides;
   ndebug(" the line number is == "+(100 + herebefore));
   display_mstr(100 + herebefore);
end

procedure description_p_proc begin
   ndebug("HEY D, CAN YOU SEE ME??? IF SO, PUT YOUR HANDS UP I THE AIR AND WAVE EM LIKE YOU JUST DON'T CARE. AND YELL ALOT TOO.");
   script_overrides;
   display_mstr(150);
   set_examined;
end

procedure use_skill_on_p_proc begin
end

procedure Node998 begin
   set_hostile;
   set_hostile_slavers;
end
procedure Node999 begin
end

procedure set_sell_davin begin
   party_being_sold := Davin_Ptr;
   call Node013;
end

procedure set_sell_miria begin
   party_being_sold := Miria_Ptr;
   call Node013;
end

procedure set_sell_myron begin
   party_being_sold := Myron_Ptr;
   call Node013;
end

procedure set_sell_vic begin
   party_being_sold := Vic_Ptr;
   call Node013;
end

procedure set_sell_macrae begin
   party_being_sold := MacRae_Ptr;
   call Node013;
end

procedure set_sell_sulik begin
   party_being_sold := Sulik_Ptr;
   call Node013;
end

//added by killap - expansion
procedure set_sell_dex begin
   party_being_sold := Dex_Ptr;
   call Node013;
end

procedure set_sell_cat_jules begin
   party_being_sold := Cat_Jules_Ptr;
   call Node013;
end

procedure set_sell_kitsune begin
   party_being_sold := Kitsune_Ptr;
   call Node013;
end
//end added

procedure Node990 begin
   if (has_rep_slaver) then begin
      call Node010;
   end else begin
      call Node006;
   end
end

procedure Node989 begin
   set_on_slave_run;
   game_time_advance((2 * ONE_GAME_DAY) + (random(-6,6) * ONE_GAME_HOUR));
   load_map(MAPSTR_DNSLVRUN,0);
end

procedure Node988 begin
variable new_slave;
variable the_rand;
   gfade_out(ONE_GAME_SECOND);
      // pay player
      dude_caps_adjust(party_price);
      // change married states and reputation
      if ((party_being_sold == Miria_Ptr) or (party_being_sold == Davin_Ptr)) then begin
         set_dude_was_married;
         inc_general_rep(REP_BONUS_DEN_SELL_SPOUSE_FULL);
      end else begin
         inc_general_rep(REP_BONUS_DEN_SELL_PARTY_FULL);
      end
      // store party pid
      new_slave := obj_pid(party_being_sold);
      // gotta get rid of the old one first
      // take party member stuff
      set_gave_metzger_party_stuff;
      if (critter_is_armed(party_being_sold)) then begin
         inven_unwield(party_being_sold);
      end
      move_obj_inven_to_obj(party_being_sold, self_obj);
      // remove & destroy old party member
      party_remove(party_being_sold);
      destroy_object(party_being_sold);

      // create new slave object
      new_slave := create_object_sid(new_slave, 0, 0, SCRIPT_DCSLAVE);
      while (tile_in_slave_pen(tile_num(new_slave)) == false) do begin
         the_rand := random(1,3);
         if (the_rand == 1) then begin
            critter_attempt_placement(new_slave, slave_place_tile_1, self_elevation);
         end else if (the_rand == 2) then begin
            critter_attempt_placement(new_slave, slave_place_tile_2, self_elevation);
         end else begin
            critter_attempt_placement(new_slave, slave_place_tile_3, self_elevation);
         end
      end
      ndebug("exit metzger while loop");
   gfade_in(ONE_GAME_SECOND);
end


procedure Node987 begin
   gfade_out(ONE_GAME_SECOND);
      do_default_sex;
      set_metzger_sex;
      critter_attempt_placement(self_obj, metzger_sex_tile, self_elevation);
      critter_attempt_placement(dude_obj, metzger_player_sex_tile, self_elevation);
      Face_Critter(dude_obj,self_obj);
      Face_Critter(self_obj,dude_obj);
      flush_add_timer_event_sec(self_obj, 1, timed_event_post_sex);
   gfade_in(ONE_GAME_SECOND);
end

procedure Node001 begin
   floater(200);
end
procedure Node002 begin
   // OPTION FREE NODE
   if (herebefore == false) then begin
      set_metzger_known;
      Reply(210 + (dude_is_female * (1 + (dude_charisma > 5))));
   end else if (has_rep_slaver) then begin
      Reply_Rand(217, 223);
   end else begin
      Reply_Rand(213, 216);
   end
   prev_node := 2;
   call Node005;
end
procedure Node003 begin
   if ((Davin_In_Party) or (Miria_In_Party) or (Vic_In_Party) or (Myron_In_Party) or (MacRae_In_Party) or (Sulik_In_Party) or (Dex_In_Party) or (Cat_Jules_In_Party) or (Kitsune_In_Party) ) then begin
      Reply(230);
      if (Davin_In_Party) then begin
         NOption(234, set_sell_davin, 004);
      end
      if (Miria_In_Party) then begin
         NOption(233, set_sell_miria, 004);
      end
      if (Vic_In_Party) then begin
         NOption(235, set_sell_vic, 004);
      end
      if (Myron_In_Party) then begin
         NOption(236, set_sell_myron, 004);
      end
      if (MacRae_In_Party) then begin
         NOption(237, set_sell_macrae, 004);
      end
      if (Sulik_In_Party) then begin
         NOption(238, set_sell_sulik, 004);
      end

      //added by killap - expansion
      if (Dex_In_Party) then begin
         NOption(241, set_sell_dex, 004);
      end
      if (Cat_Jules_In_Party) then begin
         NOption(242, set_sell_cat_jules, 004);
      end
      if (Kitsune_In_Party) then begin
         NOption(243, set_sell_kitsune, 004);
      end
      //end added

   end else begin
      ndebug("true_party_size == " + true_party_size);
      Reply(231 + (true_party_size == 0));
   end
   NOption(239, Node004, 004);
   NOption(240, Node999, 004);
   prev_node := 3;
end
procedure Node004 begin
   // OPTION FREE NODE
   Reply_Rand(245, 250);
   prev_node := 4;
   call Node005;
end
procedure Node005 begin
   // OPTION ONLY NODE
   NOption(255, Node003, 004);
   if ((vic_free == false) and (vic_known(state_vic_known_no) == false)) then begin
      NOption(256 + (vic_known(state_vic_known_merchant)), Node020, 004);
   end
   if (gangwar(state_gangwar_ask)) then begin
      NOption(258, Node016, 004);
   end
   if (has_rep_slaver == false) then begin
      NOption(259, Node006, 004);
      NOption(260, Node007, 004);
   end else if (metzger_ban(state_metzger_ban_none)) then begin
      NOption(261, Node010, 004);
   end
   NOption(262, Node999, 004);
   NOption(dude_name + mstr(263), Node990, -003);
   NOption(264, Node999, -003);
   prev_node := 5;
end
procedure Node006 begin
   if (dude_is_stupid_talk == false) then begin
      Reply(270 + node_6);
      set_node_6;
      NOption(273, Node009, 004);
      NOption(274, Node999, 004);
      NOption(275, Node999, 004);
   end else begin
      Reply(272);
      NOption(276, Node009, -003);
      NOption(277, Node999, -003);
   end
   prev_node := 6;
end
procedure Node007 begin
   Reply(285);
   NOption(286, Node008, 004);
   //added by killap - expansion pack
   if ( (global_var(GVAR_SULIK_SISTER) == 1) and (local_var(LVAR_Asked_About_Other_Facilities) == 0) )then
      NOption(265, Node900, 004);
   NOption(287, Node006, 004);
   NOption(288, Node004, 004);
   NOption(289, Node999, 004);
   prev_node := 7;
end
procedure Node008 begin
   Reply(300);
   NOption(301, Node006, 004);
   NOption(302, Node004, 004);
   NOption(303, Node999, 004);
   prev_node := 8;
end
procedure Node009 begin
   gfade_out(ONE_GAME_SECOND);
      inc_den_rep(REP_TOWN_DEN_JOIN_SLAVERS);
      game_time_advance(ONE_GAME_MINUTE * 30);
      set_global_var(GVAR_REPUTATION_SLAVER, 1);
   gfade_in(ONE_GAME_SECOND);
   Reply(310);
   NOption(312, Node010, 004);
   NOption(311, Node999, 004);
   NOption(313, Node010, -003);
   NOption(314, Node999, -003);
   prev_node := 9;
end
procedure Node010 begin
   if (node_10 == false) then begin
      set_node_10;
      Reply(320);
      NOption(327, Node011, 004);
      NOption(328, Node011, -003);
   end else if (score_too_high) then begin
      set_metzger_ban(state_metzger_ban_2high);
      Reply(321);
      NOption(239, Node004, 004);
      NOption(327, Node999, 004);
      NOption(328, Node999, -003);
   end else if (score_too_low) then begin
      set_metzger_ban(state_metzger_ban_2low);
      Reply(322);
      NOption(239, Node004, 004);
      NOption(327, Node999, 004);
      NOption(328, Node999, -003);
   end else begin
      Reply_Rand(323, 326);
      NOption(327, Node989, 004);
      NOption(328, Node989, -003);
   end
   prev_node := 10;
end
procedure Node011 begin
   Reply(340);
   NOption(341, Node012, 004);
   NOption(342, Node012, -003);
   prev_node := 11;
end
procedure Node012 begin
   Reply(350);
   NOption(351, Node010, 004);
   NOption(352, Node010, -003);
   prev_node := 12;
end
procedure Node013 begin
   if (party_being_sold == Davin_Ptr) then begin
      party_price := amt_cost_barter(self_obj, dude_obj, 450); // Seraph Fix: Swapped self_obj and dude_obj
      Reply(mstr(361) + party_price + mstr(1361));
   end else if (party_being_sold == Miria_Ptr) then begin
      party_price := amt_cost_barter(self_obj, dude_obj, 550); // Seraph Fix: Swapped self_obj and dude_obj
      Reply(mstr(360) + party_price + mstr(1360));
   end else if (party_being_sold == Myron_Ptr) then begin
      party_price := amt_cost_barter(self_obj, dude_obj, 400); // Seraph Fix: Swapped self_obj and dude_obj
      Reply(mstr(363) + party_price + mstr(1363));
   end else if (party_being_sold == Vic_Ptr) then begin
      party_price := 0;
      Reply(362);
      NOption(368, Node999, 004);
      NOption(369, Node999, 004);
   end else if (party_being_sold == MacRae_Ptr) then begin
      party_price := amt_cost_barter(self_obj, dude_obj, 650); // Seraph Fix: Swapped self_obj and dude_obj
      Reply(mstr(364) + party_price + mstr(1364));
   end else if (party_being_sold == Sulik_Ptr) then begin
      party_price := amt_cost_barter(self_obj, dude_obj, 600); // Seraph Fix: Swapped self_obj and dude_obj
      Reply(mstr(365) + party_price + mstr(1365));
   end

   //added by killap - expansion
   else if (party_being_sold == Dex_Ptr) then begin
      party_price := amt_cost_barter(self_obj, dude_obj, 600); // Seraph Fix: Swapped self_obj and dude_obj
      Reply(mstr(361) + party_price + mstr(1361));
   end else if (party_being_sold == Cat_Jules_Ptr) then begin
      party_price := amt_cost_barter(self_obj, dude_obj, 650); // Seraph Fix: Swapped self_obj and dude_obj
      Reply(mstr(361) + party_price + mstr(1361));
   end else if (party_being_sold == Kitsune_Ptr) then begin
      party_price := amt_cost_barter(self_obj, dude_obj, 650); // Seraph Fix: Swapped self_obj and dude_obj
      Reply(mstr(360) + party_price + mstr(1360));
   end
   //end added

   if (true_party_size > 1) then begin
      NOption(366, Node003, 004);
   end
   NOption(367, Node004, 004);
   if (party_being_sold != Vic_Ptr) then begin
      NOption(370, Node988, 004);
      NOption(371, Node015, 004);
      NOption(372, Node015, 004);
   end
   prev_node := 13;
end
procedure Node015 begin
   Reply(390);
   NOption(391, Node004, 004);
   NOption(392, Node999, 004);
   prev_node := 15;
end
procedure Node016 begin
   Reply(400);
   NOption(401, Node017, 004);
   NOption(402, Node018, 004);
   prev_node := 16;
end
procedure Node017 begin
   Reply(410);
   NOption(411, Node018, 004);
   prev_node := 17;
end
procedure Node018 begin
   Reply(420);
   NOption(421, Node019, 004);
   NOption(422, Node019, 004);
   prev_node := 18;
end
procedure Node019 begin
   set_gangwar(state_gangwar_permission);
   Reply(430);
   NOption(431, Node004, 004);
   NOption(432, Node999, 004);
   prev_node := 19;
end
procedure Node020 begin
   if (vic_known(state_vic_known_name)) then begin
      Reply(441 + node_20);
      if ( (see_vic(state_see_vic_no)) and (radio_fixed == false) ) then begin //edit by killap - added (radio_fixed == false)
         NOption(444, Node022, 004);
      end
      NOption(445, Node021, 004);
      NOption(446, Node999, 004);
   end else begin
      Reply(440);
      set_vic_known(state_vic_known_name);
      NOption(443, Node020, 004);
   end
   set_node_20;
   prev_node := 20;
end
procedure Node021 begin
   if (radio_fixed == false) then begin
      Reply(455 + node_21a);
      if (see_vic(state_see_vic_no)) then begin
         NOption(459, Node022, 004);
      end
      NOption(460 + (3 * node_21a), Node023, 004);
      set_node_21a;
   end else begin
      Reply(457 + node_21b);
      set_node_21b;
      NOption(462, Node024, 004);
      if (node_21a) then begin
         NOption(463, Node023, 004);
      end
   end
   NOption(461, Node999, 004);
   prev_node := 21;
end
procedure Node022 begin
   set_see_vic(state_see_vic_okay);
   Reply(475);
   NOption(476, Node021, 004);
   NOption(477, Node999, 004);
   prev_node := 22;
end
procedure Node023 begin
   Reply(485 + node_23);
   set_node_23;
   if (radio_fixed) then begin
      NOption(462, Node024, 004);
   end
   NOption(487, Node999, 004);
   prev_node := 23;
end
procedure Node024 begin
   party_price := vic_price_formula;
   Reply(mstr(495 + node_24) + party_price + mstr(1496));
   set_node_24;
   if ((dude_charisma > 5) and (dude_is_female) and (metzger_sex == false)) then begin
      GOption(497, Node026, 004);
   end
   if (dude_caps >= party_price) then begin
      GOption(498, Node025, 004);
   end
   NOption(499, Node004, 004);
   NOption(500, Node999, 004);
   prev_node := 24;
end
procedure Node025 begin
   dude_caps_adjust(-party_price);
   self_caps_adjust(party_price);
   set_global_var(GVAR_DEN_SEE_VIC, state_see_vic_okay);
   set_vic_free;
   Reply(510);
   NOption(511, Node004, 004);
   NOption(512, Node999, 004);
   prev_node := 25;
end
procedure Node026 begin
   Reply(520 + node_26);
   set_node_26;
   NOption(522, Node027, 004);
   NOption(523, Node987, 004);
   BOption(524, Node999, 004);
   prev_node := 26;
end
procedure Node027 begin
   Reply(530);
   NOption(531, Node987, 004);
   prev_node := 27;
end
procedure Node028 begin
variable the_rand;
variable temp_score;
variable slaving_money;
   off_on_slave_run;
   set_slaver_cherry;
   slaving_money := 100 * (global_var(GVAR_SLAVES_COUNT));
   temp_score := calc_slaving_score;
   if (temp_score >= slave_score_good) then begin
      the_rand := random(0, 3);
      if (the_rand == 0) then begin
         Reply(mstr(540) + slaving_money + mstr(15401) + dude_name + mstr(2540));
      end else if (the_rand == 3) then begin
         Reply(mstr(543) + dude_name + mstr(1543) + slaving_money + mstr(2543));
      end else begin
         Reply(mstr(540 + the_rand) + slaving_money + mstr(1540));
      end
      dude_caps_adjust(slaving_money);
   end else if (temp_score >= slave_score_average) then begin
      the_rand := random(4, 7);
      Reply(mstr(540 + the_rand) + slaving_money + mstr(1540 + the_rand));
      dude_caps_adjust(slaving_money);
   end else if (temp_score >= slave_score_bad) then begin
      the_rand := random(8, 11);
      Reply(mstr(540 + the_rand) + slaving_money + mstr(1540 + the_rand));
      dude_caps_adjust(slaving_money);
   end else begin
      Reply(552);
      GOption(553, Node999, 004);
      BOption(554, Node999, 004);
   end
   inc_total_slaving_score(temp_score);
   if (temp_score >= slave_score_bad) then begin
      GOption(555, Node999, 004);
   end
   NOption(556, Node999, -003);
   prev_node := 28;
end
procedure Node029 begin
variable the_score;
   the_score := dude_sex_rating;
   if (the_score >= 10) then begin
      floater(575);
   end else if (the_score >= 9) then begin
      floater(574);
   end else if (the_score >= 7) then begin
      floater(573);
   end else if (the_score >= 5) then begin
      floater(572);
   end else if (the_score >= 3) then begin
      floater(571);
   end else begin
      floater(570);
   end
end
procedure Node030 begin
   Reply(620);
   BOption(621, Node034, 004);
   BOption(622, Node034, 004);
   BOption(623, Node031, -003);
end
procedure Node031 begin
   Reply(630);
   BOption(631, Node032, -003);
   BOption(632, Node032, -003);
end
procedure Node032 begin
   Reply(640);
   BOption(641, Node033, -003);
   BOption(642, Node033, -003);
end
procedure Node033 begin
   Reply(650 + dude_is_female);
   BOption(652, Node998, -003);
   BOption(653, Node998, -003);
   BOption(654, Node998, -003);
end
procedure Node034 begin
   Reply(670);
   BOption(671, Node035, 004);
   BOption(672, Node036, 008);
   BOption(673, Node037, 004);
end
procedure Node035 begin
   Reply(680);
   BOption(681, Node998, 004);
   BOption(682, Node998, 004);
end
procedure Node036 begin
   Reply(690);
   BOption(691, Node040, 004);
   BOption(692, Node041, 004);
end
procedure Node037 begin
   Reply(700);
   BOption(701, Node038, 004);
   BOption(702, Node998, 004);
   BOption(703, Node039, 004);
end
procedure Node038 begin
   Reply(710);
   BOption(711, Node998, 004);
   BOption(712, Node998, 004);
end
procedure Node039 begin
   Reply(720);
   BOption(721, Node998, 004);
end
procedure Node040 begin
   Reply(730);
   BOption(731, Node998, 004);
   BOption(732, Node998, 004);
end
procedure Node041 begin
   Reply(740);
   BOption(741, Node998, 004);
   BOption(742, Node042, 004);
end
procedure Node042 begin
   Reply(750);
   BOption(751, Node998, 004);
   BOption(752, Node998, 004);
end
procedure Node043 begin
   Reply(600);
   BOption(601, Node998, 004);
   BOption(602, Node998, 004);
   prev_node := 30;
end

//added by killap - expansion
procedure Node044 begin
   Reply(900);
   NOption(901, Node004, 004);
   NOption(902, Node999, 004);
   BOption(903, Node998, 004); //edit by killap: was NOption
end

procedure Node900 begin
   set_local_var(LVAR_Asked_About_Other_Facilities,1);

   if ( (dude_charisma > 5)  or (has_skill(dude_obj, SKILL_SPEECH) > 50) ) then
      call Node045;
   else
      call Node044;
end

procedure Node045 begin
   Reply(910);
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, -10))) then
      NOption(911, Node047, 004);
   else
      NOption(912, Node046, 004);
end

procedure Node046 begin
   Reply(913);
   NOption(901, Node004, 004);
   NOption(902, Node999, 004);
   BOption(903, Node998, 004); //edit by killap: was NOption
end

procedure Node047 begin
   mark_on_map(AREA_SLAVER_CAMP)
   Reply(914);
   NOption(915, Node004, 004);
   NOption(916, Node999, 004);
end
//end added
