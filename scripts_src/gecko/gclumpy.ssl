/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Lumpy
        Location: Gecko
        Description:

        Log:
           Please note any changes that have been made to the file in Updated. Then comment
           the code which you have changed/altered/commented out. Please, do not delete any
           code which was written.

           Created: January 14, 1998

           Updated:
*/

/* Include Files */

/* Note, the Following Lines need to be in this order so that
   the script will be compilable. The define Name is referenced
   in a module from define.h and used in command.h. Please do
   not change the ordering.
        -rwh2   11/13/97
*/
#define SCRIPT_REALNAME "gclumpy"
#include "../headers/define.h"
#include "../headers/gecko.h"

#define NAME                    SCRIPT_GCLUMPY
#define TOWN_REP_VAR            (GVAR_TOWN_REP_GECKO)
#define floater(x)		float_msg(self_obj, mstr(x),FLOAT_MSG_RED)
#define UNKNOWN     0
#define HOUSE       1
#define SHOP        2

//added by killap
#define HOME_TILE           (22285)
#define SHOP_TILE           (24885) //edit by killap - moved for RP map
#define BRAHMIN_TILE        (19912)
//end added

#include "../headers/command.h"
#include "../headers/modreact.h"

#define Vault_Known             (1)     // Temp Until get command from Jesse
#define Visited_City            (1)     // Temp Until get command from Jesse

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure checkarea;

/* Script Specific Procedure Calls */
procedure Node910;
procedure Node920;
procedure Node995;
procedure Node996;
procedure Node997;
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending


// The next lines are added in by the Designer Tool.
// Do NOT add in any lines here.
//~~~~~~~~~~~~~~~~ DESIGNER TOOL STARTS HERE

procedure Node001;
procedure Node01a;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;


//~~~~~~~~~~~~~~~~ DESIGN TOOL ENDS HERE
// The Following lines are for anything that is not needed to be
// seen by the design Tool

#define WORKSHOP   1
//#define HOUSE      2

/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)
#define LVAR_Give                       (7)
#define LVAR_18_before                  (8)
#define LVAR_20_before                  (9)

#define LVAR_Destination                (10)
#define LVAR_In_Transit                 (11)

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */


/* Local variables which do not need to be saved between map changes. */
variable Only_Once:=0;
variable area;
variable here;
variable k;
variable ss;
variable visit_04_before:=0;
variable visit_14_before:=0;

procedure start begin
end

/* This procedure will get called each time that the map is first entered. It will
   set up the Team number and AI packet for this critter. This will override the
   default from the prototype, and needs to be set in scripts. */
procedure map_enter_p_proc begin
   Only_Once:=0;
   set_self_team(TEAM_GECKO);
   set_self_ai(AI_TOUGH_CITIZEN);

   //added by killap
   if (not (is_loading_game)) then begin
      if (night) then
         move_to(self_obj, HOME_TILE, self_elevation);
      else begin
         if (random(1,2) == 1) then
            move_to(self_obj, SHOP_TILE, self_elevation);
         else
            move_to(self_obj, BRAHMIN_TILE, self_elevation);
      end
   end
   //end added

end


/* Every heartbeat that the critter gets, this procedure will be called. Anything from
   Movement to attacking the player on sight can be placed in here.*/
procedure critter_p_proc begin

/* If the critter is mad at the player for any reason, it will attack and remember to attack
   the player should the game be saved and loaded repeatedly. Additionally, if any special
   actions need to be taken by the critter based on previous combat, the critter will remember
   this as well. */

   //move lumpy to his house if it becomes night
   //if it becomes morning and Lumpy is in his house, move him to either the brahmin pasture or Skeeter's workshop
   //added by killap
   if (night) then begin
      if (self_tile != HOME_TILE) then begin
         if (anim_busy(self_obj) == false) then begin
            self_walk_to_tile(HOME_TILE);
         end
      end else begin
         if (obj_get_rot(self_obj) != 2) then begin
            reg_anim_clear( self_obj );
            self_rotate(2);
         end
      end
   end else begin
      if (self_tile == HOME_TILE) then begin
         if (self_tile == SHOP_TILE or self_tile == BRAHMIN_TILE) then begin
            //do nothing
            if (obj_get_rot(self_obj) != 2) then begin
               reg_anim_clear( self_obj );
               self_rotate(2);
            end
         end else begin
            if ( (anim_busy(self_obj) == false) and (self_tile != local_var(LVAR_Destination)) and (local_var(LVAR_In_Transit) == 1) ) then begin
               self_walk_to_tile(local_var(LVAR_Destination));
            end else begin
               if (random(1,2) == 1) then
                  set_local_var(LVAR_Destination,SHOP_TILE);
               else
                  set_local_var(LVAR_Destination,SHOP_TILE);
               set_local_var(LVAR_In_Transit,1);
               self_walk_to_tile(local_var(LVAR_Destination));
            end
         end
      end
   end
   //end added

   if ( ((global_var(GVAR_GECKO_MELTDOWN) == 1) or (global_var(GVAR_ENEMY_GECKO))) and (self_can_see_dude)) then begin //edit by killap - added (global_var(GVAR_ENEMY_GECKO))
      set_local_var(LVAR_Hostile,1);
      attack(dude_obj);
   end
   else if ((local_var(LVAR_Hostile) == 2) and (self_can_see_dude)) then begin
       set_local_var(LVAR_Hostile,1);
       attack(dude_obj);
   end

end

/* Whenever the critter takes damage of any type, this procedure will be called. Things
   like setting ENEMY_ and LVAR_Personal_Enemy can be set here. */
procedure damage_p_proc begin

/* If the player causes damage to this critter, then he will instantly consider the player
   his personal enemy. In Critter_Proc or through dialog, actions will be taken against
   the player for his evil acts. */
   if (source_obj == dude_obj) then begin
       set_local_var(LVAR_Personal_Enemy,1);
       set_global_var(GVAR_ENEMY_GECKO,1);
   end

end

/* Any time that the player is caught stealing from this critter, Pickup_proc will be called.
   In here, various things can happen. The most common response is instant hostility which
   will be remembered. */
procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
       set_local_var(LVAR_Hostile,2);
   end
end

/* The dialog system is setup and prepares the player to talk to this NPC. Where To Go
   written by designers are placed in here. Additionally, Reactions are generated and
   stored which affects player interactions. */
procedure talk_p_proc begin
visit_04_before:=0; //according to Matts doc these need to be
visit_14_before:=0; //reset aat the beginning of each conversation

   GetReaction;

   call checkarea;
   // CHANGE -nbk (Aldo doesn't care if your an enemy of the either side in Klamath)
   //             -he just wants a drink
   if (local_var(LVAR_Personal_Enemy) == 1) then begin
       call Node998;
   end

   else if ((dude_is_stupid)) then begin
      call Node001;
   end

   else if (area == HOUSE) then begin
       start_gdialog(NAME,self_obj,4,-1,-1);
       gSay_Start;
           call Node006;
       gSay_End;
       end_dialogue;
   end

   //else if (area == WORKSHOP) then begin
   else if (area == SHOP) then begin //edit by killap
       start_gdialog(NAME,self_obj,4,-1,-1);
       gSay_Start;
           call Node005;
       gSay_End;
       end_dialogue;
   end

   else begin //area must be Brahmin Pen or UNKNOWN
       start_gdialog(NAME,self_obj,4,-1,-1);
       gSay_Start;
           call Node004;
       gSay_End;
       end_dialogue;
   end

end

/* This procedure gets called only on the death of this NPC. Special things like
   incrementing the death count for reputation purposes and Enemy Counters are placed
   in here. */
procedure destroy_p_proc begin
   inc_good_critter
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure description_p_proc begin
   script_overrides;
   if (local_var(LVAR_Herebefore)) then
      display_msg(mstr(101));
   else
      display_msg(mstr(102));

end

procedure use_skill_on_p_proc begin
end

procedure checkarea begin
   here:=self_tile;
   area:=UNKNOWN;

   //modifed by killap
   if (tile_distance(here,HOME_TILE) < 5) then area:=HOUSE;//these distances should be small
   else if (tile_distance(here,SHOP_TILE) < 12) then area:=SHOP;//so the duntons wont block doorways
   //end modified

   //if (tile_distance(here,17926) < 5) then area:=HOUSE;//these distances should be small
   //else if (tile_distance(here,18100) < 4) then area:=SHOP;//so the duntons wont block doorways
end


procedure Node910 begin
   if (global_var(GVAR_VAULT_PLANT_STATUS) == PLANT_REPAIRED) then
      call Node008;
   else
      call Node007;
end

procedure Node920 begin
   if (is_success(roll_vs_skill(dude_obj,SKILL_SPEECH,0))) then
      call Node019;
   else
      call Node020;
end

procedure Node995 begin
   if (dude_charisma >= 7) then begin
       TopReact;
   end
   else begin
       BottomReact;
   end
end

procedure Node996 begin
   BottomReact;
end

procedure Node997 begin
   if (dude_charisma >= 8) then
       call Node004;
   else
       call Node005;
end

procedure Node998 begin
   set_local_var(LVAR_Hostile,2);
end

procedure Node999 begin
end

// Not lines are allowed to be added below here
// The Following lines are from the Design Tool
//~~~~~~~~~~~~~~~~ DESIGN TOOL STARTS HERE

procedure Node001 begin
   /*k := random(1,5);
   if (k == 1) then floater(110);
   else if (k == 2) then floater(111);
   else if (k == 3) then floater(112);
   else if (k == 4) then floater(113);
   else if (k == 5) then floater(114);*/

   float_msg(self_obj, mstr(random(110,114)),FLOAT_MSG_NORMAL); //edit by killap

end

procedure Node01a begin
   /*k := random(1,5);
   if (k == 1) then NMessage(110);
   else if (k == 2) then NMessage(111);
   else if (k == 3) then NMessage(112);
   else if (k == 4) then NMessage(113);
   else if (k == 5) then NMessage(114);*/

   NMessage(random(110,114)); //edit by killap

end

procedure Node002 begin
   //added by killap
   if (local_var(LVAR_Herebefore) == 0) then
      set_local_var(LVAR_Herebefore,1);
   //end added

   Reply(120);
   NOption(121,Node003,004);
   NOption(122,Node007,004);
   NOption(123,Node999,004);
end

procedure Node003 begin
   //added by killap
   if (local_var(LVAR_Herebefore) == 0) then
      set_local_var(LVAR_Herebefore,1);
   //end added

   Reply(130);
   NOption(131,Node008,004);
   NOption(132,Node999,004);
end

procedure Node004 begin
   if (visit_04_before) then
      Reply(141);
   else begin
      visit_04_before:=1;
      Reply(140);
   end
   NLowOption(142,Node01a);
   NOption(143,Node007,004);
   NOption(144,Node003,004);
   NOption(145,Node014,004);
   NOption(146,Node999,004);
end

procedure Node005 begin
   Reply(150);
   NLowOption(151,Node01a);
   NOption(152,Node003,004);
   NOption(153,Node007,004);
   NOption(154,Node014,004);
   NOption(155,Node999,004);
end

procedure Node006 begin
   Reply(160);
   NLowOption(161,Node01a);
   //NOption(162,Node017,004); // edit by killap - we do not know who skeeter is yet
   NOption(163,Node014,004);
   NOption(164,Node999,004);
end

procedure Node007 begin
   Reply(170);
   NOption(171,Node009,004);
   NOption(172,Node014,004);
   NOption(173,Node999,004);
end

procedure Node008 begin
   Reply(180);
   NOption(181,Node010,004);
   NOption(182,Node999,004);
end

procedure Node009 begin
   Reply(190);
   NOption(191,Node017,004);
   NOption(192,Node014,004);
   NOption(193,Node999,004);
end

procedure Node010 begin
   Reply(200);
   NOption(201,Node011,004);
end

procedure Node011 begin
   Reply(210);
   NOption(211,Node012,004);
end

procedure Node012 begin
   Reply(220);
   if (broken_hills_visible_on_map == false) then
      NOption(221,Node013,004);
   NOption(222,Node014,004);
   GOption(223,Node999,004);
   BOption(224,Node999,004);
end

procedure Node013 begin
//set broken hills = known
mark_broken_hills_on_map
   Reply(230);
   NOption(231,Node015,004);
end

procedure Node014 begin
if (visit_14_before == 0) then begin
   visit_14_before:=1;
   Reply(240);
end
else if (visit_14_before == 1) then begin
   visit_14_before:=2;
   Reply(241);
end
else begin
   Reply(242);
end
   NOption(243,Node016,004);
   NOption(244,Node007,004);
   //NOption(245,Node009,004);  // edit by killap - we do not know who skeeter is yet
   NOption(246,Node018,004);
end

procedure Node015 begin
   Reply(250);
   NOption(251,Node014,004);
   NOption(252,Node999,004);
end

procedure Node016 begin
   Reply(260);
   NOption(261,Node009,004);
   NOption(262,Node014,004);
   NOption(263,Node999,004);
end

procedure Node017 begin
//need a 1st time
   /*ss:=global_var(GVAR_GECKO_SKEETER_STATUS);
   if (ss == 0) then begin //skeeter in workshop CHANGE THESE TO DEFINES
      Reply(270);
   end
   else if (ss == 1) then begin //skeeter elsewhere
      Reply(271);
   end
   else if (ss == 2) then begin //skeeter dead
      Reply(273);
   end*/

   // changed by killap
   if (global_var(GVAR_GECKO_SKEETER_STATUS) == 1) then
      Reply(273);
   else if (area == SHOP) then
      Reply(270);
   else
      Reply(271);
   // end
   NOption(172,Node014,004); // added by killap
   NOption(272,Node999,004);
end

procedure Node018 begin
   Reply(280);

   if (local_var(LVAR_18_before) == 0) then begin
      set_local_var(LVAR_18_before,1);
      NOption(281,Node920,004); //speech roll
   end
   else if (local_var(LVAR_20_before) == 1) then begin
      NOption(282,Node920,004); //speech roll
   end
   NOption(283,Node021,004);
end

procedure Node019 begin
   Reply(290);
   NOption(291,Node024,004);
   NOption(292,Node014,004);
end

procedure Node020 begin
   if (local_var(LVAR_20_before) == 0) then begin
      set_local_var(LVAR_20_before,1);
      Reply(300);
   end
   else begin
      Reply(301);
   end
   Reply(300);
   NOption(302,Node014,004);
end

procedure Node021 begin
   Reply(310);
   NOption(311,Node022,004);
   BOption(312,Node023,004);
end

procedure Node022 begin
   Reply(320);
   NOption(321,Node014,004);
   NOption(322,Node999,004);
end

procedure Node023 begin
   Reply(330);
   NOption(331,Node999,004);
   NOption(332,Node999,004);
end

procedure Node024 begin
   Reply(340);
   NOption(341,Node014,004);
   NOption(342,Node999,004);
end

procedure Node025 begin
   Reply(350);
   NOption(351,Node014,004);
end
//xxxxxxxxxxxxxxxxxxxx
