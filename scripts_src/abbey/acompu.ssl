/*
  ***   Script conwerted to Interplay format by Fallout Script Edytor (by Jargo)  ***
*/

#define SCRIPT_REALNAME "acompu"
#include "../headers/define.h"
//#include "../headers/<TownMapName.h>"

#define NAME                    SCRIPT_ACOMPU          //Script name from scripts.h
#define TOWN_REP_VAR            GVAR_TOWN_REP_ABBEY           //Global variable name for this Town

#include "../headers/command.h"
#include "../headers/modreact.h"
#include "../headers/partybkg.h"

#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)
#define LVAR_Formatted                  (7)
#define LVAR_Science_Bonus              (8)
#define LVAR_Repair_Bonus               (9)
#define LVAR_Medicine_Bonus             (10)
#define LVAR_Weapons_Bonus              (11)
#define LVAR_Speech_Bonus               (12)

procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;

procedure Node001;
procedure Node002a;
procedure Node002b;
procedure Node002c;
procedure Node002d;
procedure Node002e;
procedure Node002f;
procedure Node002g;
procedure Node002h;
procedure Node003;
procedure Node004;
procedure Node004a;
procedure Node004b;
procedure Node005;
procedure Node006;
procedure Node006a;
procedure Node007;
procedure Node007a;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node014a;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;

procedure Node900;
procedure Node901;
procedure Node999;

procedure start begin
end

procedure timed_event_p_proc begin
end

procedure use_p_proc begin
   script_overrides;
   dialogue_system_enter;
end

procedure look_at_p_proc begin
   script_overrides;
//   if (local_var(LVAR_Herebefore) == 0) then
//      display_msg(mstr(101));
//   else
      display_msg(mstr(101));
end

procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(102));
end

procedure use_skill_on_p_proc begin
   variable Skill_Used;

   Skill_Used:=action_being_used;

   if (Skill_Used == SKILL_SCIENCE) then begin
      //script_overrides;
      call use_p_proc;
   end
end

procedure use_obj_on_p_proc begin
end

procedure damage_p_proc begin
end

procedure map_enter_p_proc begin
end

procedure map_update_p_proc begin
end

procedure talk_p_proc begin
if ((dude_iq < 4)) then begin
start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
      call Node012;
      gSay_End;
      end_dialogue;
      end else begin
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
        if (local_var(LVAR_Formatted) == 0) then
         call Node001;
        else
         call Node901;
      gSay_End;
      end_dialogue;
   end
end

procedure Node999 begin
end

procedure Node001 begin
   if (dude_item(PID_ACCESS_CARD)) then begin
      call Node002a;
   end else begin
      Reply(106);
      NOption(113,Node999,4);
   end
end

procedure Node002a begin
   Reply(107);
   NOption(114,Node002b,4);
end

procedure Node002b begin
   Reply(108);
   NOption(109,Node003,4);
   //NOption(110,Node004,4);
   NOption(111,Node005,4);
   NOption(130,Node015,4);
   NOption(140,Node016,4);
   NOption(113,Node999,4);
 end

procedure Node002c begin
   Reply(403);
   NOption(404,Node002d,4);
   NOption(405,Node002e,4);
   NOption(406,Node002f,4);
   NOption(407,Node002g,4);
   NOption(408,Node002h,4);
   NOption(430,Node002b,4);
end

procedure Node002d begin
   if (local_var(LVAR_Science_Bonus) == 0) then begin
      set_local_var(LVAR_Science_Bonus,1);
      Reply(410);
      critter_mod_skill(dude_obj,SKILL_SCIENCE,5);
      game_time_advance(ONE_GAME_HOUR*2);
   end else begin
      Reply(420);
   end
   NOption(430,Node002c,4);
end

procedure Node002e begin
   if (local_var(LVAR_Repair_Bonus) == 0) then begin
      set_local_var(LVAR_Repair_Bonus,1);
      Reply(411);
      critter_mod_skill(dude_obj,SKILL_REPAIR,5);
      game_time_advance(ONE_GAME_HOUR*2);
   end else
      Reply(421);

   NOption(430,Node002c,4);
end

procedure Node002f begin
   if (local_var(LVAR_Medicine_Bonus) == 0) then begin
      set_local_var(LVAR_Medicine_Bonus,1);
      Reply(412);
      critter_mod_skill(dude_obj,SKILL_DOCTOR,5);
      critter_mod_skill(dude_obj,SKILL_FIRST_AID,5);
      game_time_advance(ONE_GAME_HOUR*2);
   end else
      Reply(422);

   NOption(430,Node002c,4);
end

procedure Node002g begin
   if (local_var(LVAR_Weapons_Bonus) == 0) then begin
      set_local_var(LVAR_Weapons_Bonus,1);
      Reply(413);
      critter_mod_skill(dude_obj,SKILL_MELEE,5);
      critter_mod_skill(dude_obj,SKILL_THROWING,5);
      critter_mod_skill(dude_obj,SKILL_BIG_GUNS,5);
      critter_mod_skill(dude_obj,SKILL_SMALL_GUNS,5);
      critter_mod_skill(dude_obj,SKILL_ENERGY_WEAPONS,5);
      game_time_advance(ONE_GAME_HOUR*4);
   end else
      Reply(423);

   NOption(430,Node002c,4);

end

procedure Node002h begin
   if (local_var(LVAR_Speech_Bonus) == 0) then begin
      set_local_var(LVAR_Speech_Bonus,1);
      Reply(414);
      critter_mod_skill(dude_obj,SKILL_SPEECH,5);
      game_time_advance(ONE_GAME_HOUR*2);
   end else
      Reply(424);

   NOption(430,Node002c,4);

end


procedure Node003 begin
if ((dude_iq > 5) and ((has_skill(dude_obj, SKILL_SCIENCE) > 69))) then begin
   Reply(115);
   NOption(116,Node006,4);
   NOption(117,Node007,4);
   NOption(112,Node002b,4);
   end
   else begin
      Reply(118);
      NOption(112,Node002b,4);
   end
   end

procedure Node004 begin
   //if ( (has_skill(dude_obj, SKILL_SCIENCE) > 89) and (dude_iq >= 6) )  then begin
   //if ( (has_skill(dude_obj, SKILL_SCIENCE) > 1) and (dude_iq >= 1) )  then begin
         Reply(122);
   NOption(402,Node002c,4);
   NOption(112,Node002b,4);
   //end else begin
   //   call Node004b;
   //end

end

procedure Node004a begin
   Reply(122);
   NOption(402,Node002c,4);
   NOption(112,Node002b,4);
end

procedure Node004b begin
   Reply(121);
   NOption(112,Node002b,4);
end

procedure Node005 begin
   Reply(200);
   NOption(201,Node011,4);
   NOption(202,Node011,4);
   NOption(203,Node011,4);
   NOption(204,Node002b,4);
end

procedure Node006 begin
   Reply(119);
   NOption(123,Node006a,4);
   NOption(112,Node003,4);
end

procedure Node006a begin
   Reply(124);
   NOption(400,Node013,4);
   NOption(112,Node003,4);
end

procedure Node007 begin
   Reply(120);
   NOption(125,Node007a,4);
   NOption(112,Node003,4);
end

procedure Node007a begin
   Reply(126);
   NOption(112,Node003,4);
end

procedure Node008 begin
   Reply(205);
   NOption(112,Node005,4);
end

procedure Node009 begin
   Reply(206);
   NOption(112,Node005,4);
end

procedure Node010 begin
   Reply(207);
   NOption(112,Node005,4);
end

procedure Node011 begin
   variable rps;
   rps := random(1,3);

   if (rps == 1) then
      call Node008;
   else if (rps == 2) then
      call Node009;
   else if (rps == 3) then
      call Node010;
end

procedure Node012 begin
   Reply(300);
   NOption(301,Node999,1);
   NOption(302,Node999,1);
end

procedure Node013 begin
   Reply(500);
   NOption(400,Node014,4);
   NOption(401,Node003,4);
end

procedure Node014 begin
   Reply(501);
   NOption(502,Node014a,4);
   NOption(401,Node003,4);
   NOption(113,Node999,4);
end

procedure Node014a begin
   Reply(503);
   NOption(401,Node003,4);
   NOption(113,Node999,4);
end

procedure Node015 begin
   Reply(130);
   if (global_var(GVAR_ABBEY_KNOWLEDGE_EPA) == 3) then
      NOption(132,Node019,4);
   else
      NOption(131,Node002b,4);

end

procedure Node016 begin
   Reply(141);
   NOption(142,Node017,4);
   NOption(143,Node002b,4);
end

procedure Node017 begin
   Reply(144);
   NOption(145,Node018,4);
end

procedure Node018 begin
   Reply(146);
   NOption(147,Node900,4);
end

procedure Node019 begin
   Reply(150);
   NOption(112,Node002b,4);
   NOption(113,Node999,4);
   if (dude_item_count(PID_EPA_BOTANY_HOLODISK)) then
         remove_pid_qty(dude_obj, PID_EPA_BOTANY_HOLODISK, 1)
   set_global_var(GVAR_ABBEY_KNOWLEDGE_EPA,4);
   display_msg(mstr(1000));
   give_xp(750);
end
procedure Node900 begin
   set_global_var(GVAR_ABBEY_FORMAT_DATABASES,2);
   set_local_var(LVAR_Formatted,1);
   set_global_var(GVAR_TOWN_REP_ABBEY, -30);
   display_msg(mstr(2000));
   give_xp(500);
   inc_general_rep(-5);
end

procedure Node901 begin
   Reply(148);
   NOption(147,Node999,4);
end
