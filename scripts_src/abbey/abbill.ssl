/*
	Script for critter tmplete
*/




/* Include Files */
#define SCRIPT_REALNAME "abbill"
#include "../headers/define.h"
#include "../headers/abbey.h"
#include "../headers/rpu.h"

#define NAME                    SCRIPT_ABBILL
#define TOWN_REP_VAR            GVAR_TOWN_REP_ABBEY           //Global variable name for this Town

#include "../headers/command.h"

/* Standard Script Procedures */
procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;

procedure Node999;
procedure Node998;


procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure barter;

procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;


/*****************************************************************
   Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_
*****************************************************************/
#define LVAR_Flags                      (0)
#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)
#define LVAR_Sold_Marcus_Armor          (7)

/*******************************************************************
   Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_)
*******************************************************************/

/*******************************************************************
   Local variables which do not need to be saved between map changes.
*******************************************************************/


/*******************************************************************
*******                         PROCEDURES                   *******
*******************************************************************/


/*******************************************************************
   The start procedure is the first procedure called when the map is
   first entered. Any initial information that needs to be set up
   should be placed in here.
*******************************************************************/

import variable abbey_bill_box_obj;

procedure start begin
end

procedure timed_event_p_proc begin
end

/********************************************************************
********************************************************************/

procedure use_p_proc begin
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

/***************************************************************************
   This is cursory glance description that the player will receive should
   he just pass the Action Cursor over. Examines which give more information
   need to be in the description_p_proc procedure.
***************************************************************************/

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));

end


procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(101));
end



procedure use_skill_on_p_proc begin
end


procedure use_obj_on_p_proc begin
end

procedure critter_p_proc begin
   if ( (global_var(GVAR_TOWN_REP_ABBEY) == -30) and (self_can_see_dude)) then begin
      attack(dude_obj);
   end
end


/******************************************************************************************
   IF it gets damaged
******************************************************************************************/

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
      if (global_var(GVAR_TOWN_REP_ABBEY) != -30) then
         set_global_var(GVAR_TOWN_REP_ABBEY, -30);
   end
end

procedure destroy_p_proc
begin
 inc_good_critter
end

/***************************************************************************************
   Whenever the map is first entered, this procedure will be called.
***************************************************************************************/

procedure map_enter_p_proc begin
   set_self_team(TEAM_ABBEY);
end


/**************************************************************************************
   This procedure gets called roughly every 30 seconds of real time.
**************************************************************************************/

procedure map_update_p_proc begin
end

/**************************************************************************************
   This is used for any dialogue that may need to occur with the player.
**************************************************************************************/

procedure talk_p_proc begin
   script_overrides;

   move_obj_inven_to_obj(abbey_bill_box_obj,self_obj);

      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
            call Node001;
      gSay_End;
      end_dialogue;

   move_obj_inven_to_obj(self_obj,abbey_bill_box_obj);
end

procedure Node999 begin
end

procedure Node998 begin
  set_global_var(GVAR_TOWN_REP_ABBEY, -30);
end

procedure Node001 begin
   variable marcus_armor_enabled := rpu_msetting(set_marcus_armor);

   if (local_var(LVAR_Herebefore) == 0) then
      Reply(200);
   else
      Reply(201);
   NOption(202, barter, 004);

   if ((local_var(LVAR_Sold_Marcus_Armor) == 0) and marcus_armor_enabled) then
      NOption(210, Node006, 004);

   if (map_var(MVAR_Caravan_Info) > 0 ) then
      NOption(203, Node002, 004);
   NOption(204, Node999, 004);

   set_local_var(LVAR_Herebefore,1);
end

procedure Node002 begin
   Reply(300);
   NOption(301, Node003, 004);
   NOption(302, Node004, 004);
   NOption(204, Node999, 004);

   set_map_var(MVAR_Caravan_Info,2);
end

procedure Node003 begin
   Reply(304);
   NOption(306, Node002, 004);
   NOption(308, Node999, 004);
end

procedure Node004 begin
   Reply(305);
   NOption(306, Node002, 004);
   NOption(308, Node999, 004);
end

procedure barter begin
   gdialog_mod_barter(0);
   call Node005;
end

procedure Node005 begin
   Reply(400);
   NOption(401, barter, 004);
   NOption(402, Node999, 004);
end

procedure Node006 begin
   if (Marcus_In_Party) then begin
      Reply(211);
      NOption(215, Node007, 004);
   end else begin
      Reply(212);
      NOption(213, barter, 004);
      NOption(214, Node001, 004);
   end
end

procedure Node007 begin
   Reply(216);
   NOption(217, Node008, 004);
end

procedure Node008 begin
   Reply(218);
   NOption(219, Node009, 004);
   NOption(220, Node001, 004);
end


procedure Node009 begin
   Reply(221);
   if (dude_caps > 2999) then
      NOption(222, Node010, 004);
   NOption(223, Node001, 004);
end

procedure Node010 begin
   variable armor;

   set_local_var(LVAR_Sold_Marcus_Armor,1);
   dude_caps_adjust(-3000);

   armor := create_object(PID_MUTANT_ARMOR_WEARABLE,0,0);
   add_obj_to_inven(Marcus_Ptr,armor);
   wield_obj_critter(Marcus_Ptr, armor);
   metarule3(107,Marcus_Ptr,FID_MALIEU,0);

   float_msg(Marcus_Ptr, mstr(226), FLOAT_MSG_GREEN);
   add_timer_event(Marcus_Ptr,game_ticks(1),3);

   Reply(224);
   NOption(225, Node999, 004);

end
