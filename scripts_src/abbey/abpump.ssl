/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: abpump
        Location: Abbey
        Description: Broken waterpump

        Log:
           Please note any changes that have been made to the file in Updated. Then comment
           the code which you have changed/altered/commented out. Please, do not delete any
           code which was written.

           Created: killap - 6/30/2006

           Updated:
*/

/* Include Files */

/* Note, the Following Lines need to be in this order so that
   the script will be compilable. The define Name is referenced
   in a module from define.h and used in command.h. Please do
   not change the ordering.
        -rwh2   11/13/97
*/
/* Include Files */
#define SCRIPT_REALNAME "abpump"
#include "../headers/define.h"

#define NAME                    SCRIPT_ABPUMP
#define TOWN_REP_VAR            GVAR_TOWN_REP_ABBEY           //Global variable name for this Town

#include "../headers/command.h"

/* Standard Script Procedures */
procedure start;
procedure map_enter_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure timed_event_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;

procedure Node001;
procedure Node002;
procedure Node999;

#define LVAR_Flags                 (4)

procedure start begin
end

procedure map_enter_p_proc begin
   if (global_var(GVAR_ABBEY_PUMP) >= PUMP_FIXED) then begin
      reg_anim_begin();
      reg_anim_animate_forever(self_obj, ANIM_stand);
      reg_anim_end();
   end
   add_timer_event(self_obj, 1, 1);
end

procedure map_update_p_proc begin
   if ((combat_is_initialized == 0) and (global_var(GVAR_ABBEY_PUMP) >= PUMP_FIXED)) then
   begin
      reg_anim_begin();
      reg_anim_animate_forever(self_obj, ANIM_stand);
      reg_anim_end();
   end
end

procedure timed_event_p_proc
begin
  if (fixed_param == 1) then begin
      if ( (global_var(GVAR_ABBEY_PUMP) >= PUMP_FIXED) and (anim_busy(self_obj) == false) and (combat_is_initialized == 0) ) then begin
         reg_anim_begin();
         reg_anim_animate_forever(self_obj, ANIM_stand);
         reg_anim_end();
      end
      add_timer_event(self_obj, 1, 1);
  end

end

procedure use_p_proc begin
  if (global_var(GVAR_ABBEY_PUMP) == PUMP_QUEST_GIVEN) then begin
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_start;
            call Node001;
      gSay_end;
      end_dialogue;
   end
end

procedure use_obj_on_p_proc begin
   variable Tool;
   variable Skill := 0;
   variable item;

   Tool:=obj_pid(obj_being_used_with);

   if ((Tool == PID_MULTI_TOOL) and (dude_item_count(PID_MOTOR))) then begin
      script_overrides;
      Skill:=roll_vs_skill(source_obj,SKILL_REPAIR,-20);
   end else if ((Tool == PID_SUPER_TOOL_KIT) and (dude_item_count(PID_MOTOR))) then begin
      script_overrides;
      Skill:=roll_vs_skill(source_obj,SKILL_REPAIR,-10);
   end else if (Tool == PID_MOTOR) then begin
      script_overrides;
      display_msg(mstr(103));
   end

   if ((global_var(GVAR_ABBEY_PUMP) < PUMP_FIXED) and (dude_item_count(PID_MOTOR))) then begin
         script_overrides;
         if (is_success(Skill)) then begin
            display_msg(mstr(104));
            set_global_var(GVAR_ABBEY_PUMP,PUMP_FIXED);
            give_xp(800);
            inc_global_var_amt(GVAR_TOWN_REP_ABBEY,5);
            item:=dude_item(PID_MOTOR);
            rm_obj_from_inven(dude_obj,item);
            destroy_object(item);
         end else begin
            display_msg(mstr(105));
         end
   end

end

procedure use_skill_on_p_proc begin
   if (action_being_used == SKILL_REPAIR) then begin
       script_overrides;
       if (global_var(GVAR_ABBEY_PUMP) < PUMP_FIXED) then begin
         display_msg(mstr(103));
       end else begin
         display_msg(mstr(102));
       end
   end
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure description_p_proc begin
   script_overrides;
   if (global_var(GVAR_ABBEY_PUMP) < PUMP_FIXED) then
      display_msg(mstr(101));
   else
      display_msg(mstr(102));
end

procedure Node999 begin
end

procedure Node001 begin
   Reply(200);
   NOption(201,Node999,4);
   NOption(202,Node002,4);
end

procedure Node002 begin
  if (global_var(GVAR_ABBEY_PUMP) < PUMP_FOUND_PROBLEM) then begin
     display_msg(mstr(106));
     give_xp(100);
     set_global_var(GVAR_ABBEY_PUMP,PUMP_FOUND_PROBLEM);
  end
  Reply(203);

  NOption(204,Node999,4);
end
