/*
	Script for critter tmplete
*/




/* Include Files */
#define SCRIPT_REALNAME "abpetson"
#include "../headers/define.h"
#include "../headers/abbey.h"

#define NAME                    SCRIPT_ABPETSON
#define TOWN_REP_VAR            GVAR_TOWN_REP_ABBEY

#include "../headers/command.h"
#include "../headers/modreact.h"

/* Standard Script Procedures */
procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;


procedure Node998; //combat
procedure Node999; //end

procedure Node999a;
procedure Node999b;

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node010a;
procedure Node011;


/*****************************************************************
   Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_
*****************************************************************/
#define LVAR_Flags                      (0)
#define LVAR_Herebefore                 (5)
#define LVAR_Hostile                    (6)
#define LVAR_Personal_Enemy             (7)
#define LVAR_Said_Tom_Message           (8)

/*******************************************************************
   Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_)
*******************************************************************/

/*******************************************************************
   Local variables which do not need to be saved between map changes.
*******************************************************************/


/*******************************************************************
*******                         PROCEDURES                   *******
*******************************************************************/


/*******************************************************************
   The start procedure is the first procedure called when the map is
   first entered. Any initial information that needs to be set up
   should be placed in here.
*******************************************************************/

procedure start begin
end

procedure critter_p_proc begin
   if ( (global_var(GVAR_TOWN_REP_ABBEY) == -30) and (self_can_see_dude)) then begin
      attack(dude_obj);
   end
end

procedure timed_event_p_proc begin
end

/********************************************************************
********************************************************************/

procedure use_p_proc begin
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

/***************************************************************************
   This is cursory glance description that the player will receive should
   he just pass the Action Cursor over. Examines which give more information
   need to be in the description_p_proc procedure.
***************************************************************************/

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));

end


procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(101));
end

procedure destroy_p_proc
begin
 inc_good_critter
end

procedure use_skill_on_p_proc begin
end


procedure use_obj_on_p_proc begin
end


/******************************************************************************************
   IF it gets damaged
******************************************************************************************/

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
      if (global_var(GVAR_TOWN_REP_ABBEY) != -30) then
         set_global_var(GVAR_TOWN_REP_ABBEY, -30);
   end
end
/***************************************************************************************
   Whenever the map is first entered, this procedure will be called.
***************************************************************************************/

procedure map_enter_p_proc begin
   set_self_team(TEAM_ABBEY);
end


/**************************************************************************************
   This procedure gets called roughly every 30 seconds of real time.
**************************************************************************************/

procedure map_update_p_proc begin
end

/**************************************************************************************
   This is used for any dialogue that may need to occur with the player.
**************************************************************************************/

procedure talk_p_proc begin
   if (map_var(MVAR_Petersons_angry) == 1) then begin
      floater(700);
   end else begin
      start_gdialog(NAME,self_obj,4,-1,-1);
          gSay_Start;
              if (local_var(LVAR_Herebefore) == 0) then
                  call Node001;
              else
                  call Node002;
          gSay_End;
      end_dialogue;
   end
end

procedure Node999 begin
end

procedure Node999a begin
   set_map_var(MVAR_Crops_Stolen,1);
end

procedure Node999b begin
   set_map_var(MVAR_Petersons_angry,1);
end

procedure Node998 begin
   set_global_var(GVAR_TOWN_REP_ABBEY, -30);
   set_hostile;
end


procedure Node001 begin

   Reply(200);
   NOption(202,Node003,4);
   NOption(203,Node006,4);
   if ((global_var(GVAR_ABBEY_GRAVES) == 1) and (map_var(MVAR_Crops_Stolen) == 0)) then
      NOption(204,Node007,4);
   NOption(205,Node999,4);
   set_local_var(LVAR_Herebefore,1);
end

procedure Node002 begin
   if ( (global_var(GVAR_ABBEY_GRAVES) > 2) and (local_var(LVAR_Said_Tom_Message) == 0) ) then begin
      Reply(710);
      set_local_var(LVAR_Said_Tom_Message,1);
   end else begin
      Reply(201);
   end

   NOption(401,Node003,4);
   NOption(402,Node006,4);
   if ((global_var(GVAR_ABBEY_GRAVES) == 1) and (map_var(MVAR_Crops_Stolen) == 0)) then
      NOption(204,Node007,4);
   NOption(205,Node999,4);
end

procedure Node003 begin
   Reply(300);
   if (map_var(MVAR_Caravan_Info) == 0) then
      NOption(301,Node004,4);
   NOption(304,Node005,4);
   NOption(303,Node999,4);
end

procedure Node004 begin
   Reply(302);
   NOption(304,Node005,4);
   NOption(303,Node999,4);
   set_map_var(MVAR_Caravan_Info,1);
end

procedure Node005 begin
   Reply(400);
   NOption(401,Node003,4);
   NOption(402,Node006,4);
   if (global_var(GVAR_ABBEY_GRAVES) == 1) then
      NOption(204,Node007,4);
   NOption(305,Node999,4);
end

procedure Node006 begin
   Reply(500);
   NOption(501,Node005,4);
   NOption(502,Node999,4);
end

procedure Node007 begin
   Reply(600);
   NOption(601,Node008,4);
end

procedure Node008 begin
   Reply(602);
   NOption(603,Node009,4);
   NOption(604,Node999,4);
end

procedure Node009 begin
   Reply(605);
   NOption(603,Node010,4);
   NOption(609,Node999,4);
end

procedure Node010 begin
   Reply(606);
   NOption(603,Node010a,4);
end

procedure Node010a begin
   Reply(6061);
   NOption(608,Node005,4);
   NOption(607,Node999a,4);
   BOption(610,Node011,4);
end

procedure Node011 begin
   Reply(611);
   NOption(612,Node999,4);
   BOption(mstr(613) + dude_name + ".", Node998, 004);
end
