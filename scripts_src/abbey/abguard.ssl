/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Tough Guard
        Location: Abbey
        Description: Old retired caravan guard

        Log:

           Created: February 4, 2012

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "abguard"
#include "../headers/define.h"
#include "../headers/abbey.h"

#define NAME                    SCRIPT_ABGUARD
#define TOWN_REP_VAR            GVAR_TOWN_REP_ABBEY           //Global variable name for this Town

#include "../headers/command.h"

/* Standard Script Procedures */
procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;

procedure Node001;
procedure Node001a;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;

procedure Node999;
procedure Node998;

/*****************************************************************
   Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_
*****************************************************************/
#define LVAR_Flags                      (0)
#define LVAR_Here_Before                (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)

/*******************************************************************
   Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_)
*******************************************************************/

/*******************************************************************
   Local variables which do not need to be saved between map changes.
*******************************************************************/
variable more_questions := 0;

/*******************************************************************
*******                         PROCEDURES                   *******
*******************************************************************/


/*******************************************************************
   The start procedure is the first procedure called when the map is
   first entered. Any initial information that needs to be set up
   should be placed in here.
*******************************************************************/

procedure start begin
end

procedure timed_event_p_proc begin
end

/********************************************************************
********************************************************************/

procedure use_p_proc begin
end

procedure critter_p_proc begin
   if (self_can_see_dude) then begin
      if (hostile) then begin
         self_attack_dude;
      end
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

/***************************************************************************
   This is cursory glance description that the player will receive should
   he just pass the Action Cursor over. Examines which give more information
   need to be in the description_p_proc procedure.
***************************************************************************/

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end


procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(101));
end

procedure use_skill_on_p_proc begin
end


procedure use_obj_on_p_proc begin
end


/******************************************************************************************
   IF it gets damaged
******************************************************************************************/

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
   end
end

procedure destroy_p_proc begin
   inc_good_critter
end

/***************************************************************************************
   Whenever the map is first entered, this procedure will be called.
***************************************************************************************/

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
      if (map_first_run) then begin
         set_self_team(TEAM_ABBEY);
         set_self_ai(AI_TOUGH_GUARD);
      end
   end
end


/**************************************************************************************
   This procedure gets called roughly every 30 seconds of real time.
**************************************************************************************/

procedure map_update_p_proc begin
end

/**************************************************************************************
   This is used for any dialogue that may need to occur with the player.
**************************************************************************************/

procedure talk_p_proc begin
   if (hostile) then begin
      if (self_can_see_dude) then begin
        self_attack_dude;
      end
   end else begin
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
         call Node001;
      gSay_End;
      end_dialogue;
   end
   set_local_var(LVAR_Here_Before,1);
end

procedure Node001 begin
   if (more_questions) then
      Reply(700);
   else
      Reply(200+local_var(LVAR_Here_Before)*600+has_rep_slaver);
   NOption(202, Node002, 004);
   NOption(203, Node004, 004);
   if (global_var(GVAR_ABBEY_GRAVES) > 0 and global_var(GVAR_ABBEY_GRAVES) < 2) then
      NOption(204, Node005, 004);
   if (global_var(GVAR_ABBEY_BEAST) > 0 and global_var(GVAR_ABBEY_BEAST) < 3) then
      NOption(205, Node006, 004);
   if (has_rep_slaver) then
      BOption(206, Node998, 004);
   NOption(207, Node999, 004);
end

procedure Node001a begin
   more_questions := 1;
   call Node001;
end

procedure Node002 begin
   Reply(300+2*has_rep_slaver);
   if (has_rep_slaver) then begin
      NOption(303, Node001a, 004);
      NOption(304, Node999, 004);
      BOption(305, Node998, 004);
   end else begin
      NOption(g_mstr(352), Node003, 004);
   end
end

procedure Node003 begin
   Reply(301);
   NOption(303, Node001a, 004);
   NOption(304, Node999, 004);
end

procedure Node004 begin
   Reply(400);
   NOption(401, Node001a, 004);
   NOption(402, Node999, 004);
end

procedure Node005 begin
   Reply(500);
   NOption(501, Node001a, 004);
   NOption(502, Node999, 004);
end

procedure Node006 begin
   Reply(600+has_rep_slaver);
   if (has_rep_slaver) then begin
      NOption(611, Node001a, 004);
      NOption(613, Node998, 004);
      BOption(612, Node999, 004);
   end else begin
      NOption(602, Node007, 004);
      BOption(603, Node007, 004);
   end
end

procedure Node007 begin
   Reply(610);
   NOption(611, Node001a, 004);
   NOption(612, Node999, 004);
end

procedure Node998 begin
   set_hostile;
   set_global_var(GVAR_TOWN_REP_ABBEY, -30);
end

procedure Node999 begin
end
