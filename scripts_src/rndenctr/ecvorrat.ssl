/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/* Random Encounter scripts. These will be filled in more once they
   have been designed.
*/

procedure start;

#define SCRIPT_REALNAME "ecvorrat"
#include "../headers/define.h"

#define NAME                    SCRIPT_ECVORRAT

#include "../headers/command.h"

import variable i_arthur_obj;
import variable i_robin_obj;
import variable i_launcelot_obj;
import variable i_galahad_obj;
import variable i_bedemir_obj;
import variable i_vorpal_obj;


procedure critter_p_proc;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure checkAttack;
procedure timed_event_p_proc;
procedure DoExplosiveSequence;

#define LVAR_Death_Sequence             (7)
variable starttile := 0;

procedure map_enter_p_proc begin
   set_self_team(TEAM_RND_RATS);
   starttile := self_tile;
   reg_anim_clear(self_obj);
   reg_anim_begin();
   self_rotate(Random(0, 5));
   reg_anim_end();
end

procedure start begin
   i_vorpal_obj := self_obj;
end

procedure destroy_p_proc begin
   i_vorpal_obj := -1;
end

procedure damage_p_proc begin
   if (target_obj) then begin
      if (obj_pid(target_obj) == PID_HOLY_HAND_GRENADE) then begin
         script_overrides;
         //i_vorpal_obj := -1;
         //kill_critter(self_obj, ANIM_big_hole_sf);
         //critter_damage(self_obj, 99999);
         set_local_var(LVAR_Death_Sequence,1);
         terminate_combat;
         game_ui_disable;
         call DoExplosiveSequence;
      end
   end
end

procedure timed_event_p_proc begin
   if (fixed_param == 1) then begin
      call DoExplosiveSequence;
   end
end


procedure DoExplosiveSequence begin
   if (local_var(LVAR_Death_Sequence) == 0) then begin
      add_timer_event(self_obj, game_ticks(0), 1);
   end else begin
      script_overrides;
      give_xp(7500); // added by killap - expansion
      set_local_var(LVAR_Death_Sequence,2);
      game_ui_enable;
      i_vorpal_obj := -1;
      critter_damage(self_obj, 99999);
   end
end


procedure combat_p_proc begin
end

procedure critter_p_proc begin
   call checkAttack;

   if (not anim_busy(self_obj)) then begin
      reg_anim_clear(self_obj);
      reg_anim_begin();
      self_walk_to_tile(tile_num_in_direction(starttile, Random(0, 5), Random(3, 10)));
      reg_anim_end();
   end
end

procedure checkAttack begin
   if (self_elevation == dude_elevation) then begin
      if (i_arthur_obj != -1) then
         attack(i_arthur_obj);
      else if (i_robin_obj != -1) then
         attack(i_robin_obj);
      else if (i_launcelot_obj != -1) then
         attack(i_launcelot_obj);
      else if (i_galahad_obj != -1) then
         attack(i_bedemir_obj);
      else if (self_can_see_dude) then
         attack(dude_obj);
   end
end
