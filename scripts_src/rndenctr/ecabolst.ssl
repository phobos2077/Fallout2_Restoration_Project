/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Abolitionist
        Location: Random Encounters
        Description:

        Log:
           Please note any changes that have been made to the file in Updated. Then comment
           the code which you have changed/altered/commented out. Please, do not delete any
           code which was written.

           Created:

           Updated:
*/

/* Include Files */

/* Note, the Following Lines need to be in this order so that
   the script will be compilable. The define Name is referenced
   in a module from define.h and used in command.h. Please do
   not change the ordering.
        -rwh2   11/13/97
*/
#define SCRIPT_REALNAME "ecabolst"
#include "../headers/define.h"
//#include "../headers/<TownName.h>"

#define NAME                    SCRIPT_ECABOLST

#include "../headers/command.h"


/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;

//~~~~~~~~~~~~~~~~ DESIGN TOOL ENDS HERE
// The Following lines are for anything that is not needed to be
// seen by the design Tool


procedure Node998;
procedure Node999;

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;


/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */

#define LVAR_Greeted                            (0)
#define LVAR_Hostile                            (1)

/* Local variables which do not need to be saved between map changes. */
variable Only_Once:=0;

procedure start begin
end

/* This procedure will get called each time that the map is first entered. It will
   set up the Team number and AI packet for this critter. This will override the
   default from the prototype, and needs to be set in scripts. */
procedure map_enter_p_proc begin
   Only_Once:=0;
   set_self_team(TEAM_RND_RAIDERS);
   set_self_ai(AI_BERSERKER);
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(101));
end

/* Every heartbeat that the critter gets, this procedure will be called. Anything from
   Movement to attacking the player on sight can be placed in here.*/
procedure critter_p_proc begin

/* If the critter is mad at the player for any reason, it will attack and remember to attack
   the player should the game be saved and loaded repeatedly. Additionally, if any special
   actions need to be taken by the critter based on previous combat, the critter will remember
   this as well. */

   if (self_can_see_dude and (local_var(LVAR_Hostile) == 1)) then begin
       attack(dude_obj);
   end

   if ((self_can_see_dude) and ((has_rep_slaver) or (has_rep_slave_owner))) then begin
       floater(random(200,204));
       attack(dude_obj);
   end

   if ((self_can_see_dude) and (local_var(LVAR_Greeted) == 0)) then begin
       set_local_var(LVAR_Greeted,1);
       floater(random(250,251));
   end

end

/* Whenever the critter takes damage of any type, this procedure will be called. Things
   like setting ENEMY_ and LVAR_Personal_Enemy can be set here. */
procedure damage_p_proc begin

/* If the player causes damage to this critter, then he will instantly consider the player
   his personal enemy. In Critter_Proc or through dialog, actions will be taken against
   the player for his evil acts. */

   attack(source_obj);

end

/* Any time that the player is caught stealing from this critter, Pickup_proc will be called.
   In here, various things can happen. The most common response is instant hostility which
   will be remembered. */
procedure pickup_p_proc begin
   attack(source_obj);
end

procedure talk_p_proc begin
   start_gdialog(NAME,self_obj,4,-1,-1);
   gSay_Start;
       call Node001;
   gSay_End;
   end_dialogue;
end

/* This procedure gets called only on the death of this NPC. Special things like
   incrementing the death count for reputation purposes and Enemy Counters are placed
   in here. */
procedure destroy_p_proc begin

/* Increment the aligned critter counter*/
   inc_good_critter

/* Set global_variable for Enemy status*/
end

procedure Node001 begin
   Reply(300);

   NOption(301,Node002,004);
   NOption(302,Node003,004);
   NOption(303,Node004,005);
   BOption(304,Node005,004);
   NOption(305,Node999,004);
   NLowOption(306,Node006);
end

procedure Node002 begin
   Reply(310);

   NOption(311,Node007,004);
   NOption(312,Node004,004);
   NOption(313,Node999,004);
end

procedure Node003 begin
   Reply(314);

   NOption(315,Node008,004);
   NOption(316,Node012,004);
   NOption(317,Node999,004);
end

procedure Node004 begin
   Reply(320);

   BOption(321,Node009,004);
   NOption(322,Node999,004);
   NOption(323,Node010,004);
   NOption(324,Node011,004);
end

procedure Node005 begin
   Reply(370);

   NOption(371,Node999,004);
   BOption(372,Node998,004);
end

procedure Node006 begin
   NMessage(307);
end

procedure Node007 begin
   Reply(360);

   NOption(361,Node004,004);
   NOption(362,Node999,004);
   NOption(363,Node999,004);
end

procedure Node008 begin
   Reply(355);

   NOption(356,Node999,004);
end

procedure Node009 begin
   if (dude_is_male) then
       Reply(340);
   else
       Reply(341);

   BOption(342,Node998,004);
end

procedure Node010 begin
   Reply(335);

   GOption(336,Node999,004);
   BOption(337,Node998,004);
   NOption(338,Node999,004);
end

procedure Node011 begin
   Reply(330);

   NOption(331,Node999,004);
end

procedure Node012 begin
   Reply(350);

   NOption(351,Node999,004);
end

procedure Node998 begin
   set_local_var(LVAR_Hostile,1);
end

procedure Node999 begin
end
