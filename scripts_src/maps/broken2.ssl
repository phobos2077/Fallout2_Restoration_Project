/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Broken Hills Village
        Location: Broken Hills
        Description: This is the Map Script for the Village of Broken Hills

        Log:

           Created: July 2, 1998

           Updated:
*/

/* Include Files */

/* Note, the Following Lines need to be in this order so that
   the script will be compilable. The define Name is referenced
   in a module from define.h and used in command.h. Please do
   not change the ordering.
        -rwh2   11/13/97
*/
#define SCRIPT_REALNAME "broken2"
#include "../headers/define.h"
//#include "../headers/broken.h" - comment out by killap
#include "../headers/broken2.h"
#include "../headers/updatmap.h"

#define NAME                    SCRIPT_BROKEN2

#include "../headers/command.h"

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;

procedure CauseDamage;

variable k;
variable frank_ptr;
variable frank_hex;
variable manson_ptr;
variable manson_hex;
variable Damage_Timer_Started := 0;
variable damage;

#define apply_radon_damage(x) \
   damage := random(10, 15); \
   critter_dmg(x, damage, (DMG_normal_dam bwor DMG_NOANIMATE bwor DMG_BYPASS_ARMOR));

export variable frank_obj;
export variable manson_obj;
export variable broken_hills_cavein;
export variable professor_obj;
export variable scorpion_obj;
export variable Professor_Box1;
export variable Professor_Box2;
export variable seymour_obj;

export variable Chad_Ptr; //added by killap - expansion pack

procedure start begin
end

procedure map_enter_p_proc begin
   override_map_start_hex(21144,0,0);

   Damage_Timer_Started := 0;

   if (map_first_run) then begin
       display_msg(mstr(100));
   end

   if (global_var(GVAR_JAIL_BREAK) == JB_SUCCESSFUL) then begin
      set_global_var(GVAR_JAIL_BREAK, JB_OVER);
   end

   if( dude_elevation == 0) then
      Lighting;
   else
      Cavern_Lighting;

   if( ( global_var(GVAR_BH_MINE) < MINE_FIXED_CASH ) and ( Damage_Timer_Started == 0 ) ) then begin
      Damage_Timer_Started := 1;
      add_timer_event( self_obj, game_ticks(20), 2 );
   end
   set_global_var(GVAR_LOAD_MAP_INDEX,0);
end

procedure map_update_p_proc begin
   if( dude_elevation == 0) then
      Lighting;
   else
      Cavern_Lighting;

   if( map_var(MVAR_Blew_Up_Purifier) == 1 ) then begin
      ndebug( "Doin' Blow up");
      set_map_var(MVAR_Blew_Up_Purifier, 0);
      // Get the player out of the mine and "destroy" it.
      move_to( dude_obj, 14095, 0 );
      critter_attempt_placement( dude_obj, 14095, 0 );
      move_to( broken_hills_cavein, 9091, 0 );

      // Add new blocking hexes to prevent entry into mine.
      create_object(PID_BLOCKING_HEX, 9493, 0);
      create_object(PID_BLOCKING_HEX, 9292, 0);
      create_object(PID_BLOCKING_HEX, 9491, 0);

      add_timer_event(self_obj, game_ticks(2), 1);
   end

end

procedure map_exit_p_proc begin
   set_global_var(GVAR_CAME_FROM_BROKEN2, 1);
end

procedure timed_event_p_proc begin
   if fixed_param == 1 then begin
      gfade_in(600);
   end
   else if fixed_param == 2 then begin
      if global_var(GVAR_BH_MINE) < MINE_FIXED_CASH then begin
         if dude_elevation == 2 then call CauseDamage;
         add_timer_event( self_obj, game_ticks(20), 2);
      end
   end
end

//radon damage
procedure CauseDamage begin
   variable dmg, who;
   foreach who in party_member_list_critters begin
      if prone_to_gas(who) then begin
         apply_radon_damage(who)
      end
   end
end
