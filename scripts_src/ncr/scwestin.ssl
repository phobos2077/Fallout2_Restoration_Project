/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Westin
        Location: NCR 3
        Description: He is a head honcho

        Log:
           Please note any changes that have been made to the file in Updated. Then comment
           the code which you have changed/altered/commented out. Please, do not delete any
           code which was written.

           Created:

           Updated:
*/

/* Include Files */

/* Note, the Following Lines need to be in this order so that
   the script will be compilable. The define Name is referenced
   in a module from define.h and used in command.h. Please do
   not change the ordering.
        -rwh2   11/13/97
*/
#define SCRIPT_REALNAME "scwestin"
#include "../headers/define.h"
//#include "../headers/<TownName.h>"

#define NAME                    SCRIPT_SCWESTIN
#define TOWN_REP_VAR            GVAR_TOWN_REP_NCR

#include "../headers/command.h"
#include "../headers/modreact.h"

#include "../headers/v13.h"
#include "../headers/ncr.h"


/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure use_obj_on_p_proc;
procedure timed_event_p_proc;
procedure DoExplosiveSequence;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending


// The next lines are added in by the Designer Tool.
// Do NOT add in any lines here.
//~~~~~~~~~~~~~~~~ DESIGNER TOOL STARTS HERE

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure DoDeathSequence;
procedure ContinueDeath;
procedure DoExplosiveSequence;

//~~~~~~~~~~~~~~~~ DESIGN TOOL ENDS HERE
// The Following lines are for anything that is not needed to be
// seen by the design Tool


/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)
#define LVAR_Death_Sequence             (7)
#define LVAR_Pid                        (9)

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */


/* Local variables which do not need to be saved between map changes. */
variable Only_Once:=0;
variable Node1Rep := 0;
variable num := 0;

#define TIMER_DEATH 1
#define TIMER_EXPLOSIVE_DEATH 2
#define TIMER_DESTROY_DUDE_OBJ 3
#define DEATH_TILE 20495 // moved here by killap

procedure timed_event_p_proc begin
   variable obj;
   if (fixed_param == TIMER_DEATH) then begin
      call ContinueDeath;
   end else if (fixed_param == TIMER_EXPLOSIVE_DEATH) then begin
      call DoExplosiveSequence;
   end else if (fixed_param == TIMER_DESTROY_DUDE_OBJ) then begin
      if (local_var(LVAR_Pid)) then begin
         obj := dude_item(local_var(LVAR_Pid));
         if (obj) then begin
            rm_obj_from_inven(dude_obj, obj);
            destroy_object(obj);
         end
      end
   end
end

procedure use_obj_on_p_proc begin
   variable Tool;

   Tool:=obj_pid(obj_being_used_with);
   if (Tool == PID_BUFFOUT or Tool == PID_PSYCHO or Tool == PID_JET or
       Tool == PID_HYPO_POISON or Tool == PID_SUPER_STIMPAK) then begin
       if (local_Var(LVAR_Death_Sequence) == 0) then begin
         if (Tool != PID_SUPER_STIMPAK) then
            call DoDeathSequence;
         else
            call DoExplosiveSequence;
      end
      add_timer_event(self_obj, 0, TIMER_DESTROY_DUDE_OBJ);
      set_local_var(LVAR_Pid, Tool);
   end
end

procedure start begin
end

/* This procedure will get called each time that the map is first entered. It will
   set up the Team number and AI packet for this critter. This will override the
   default from the prototype, and needs to be set in scripts. */
procedure map_enter_p_proc begin
   Only_Once:=0;
   set_self_team(TEAM_NCR_WESTIN);
   set_self_ai(AI_TOUGH_CITIZEN);

   //added by killap - RP
   if (get_westin_flag(WESTIN_HEART_PILLS_DEATH)) then begin
      move_to(self_obj,DEATH_TILE,self_elevation);
      critter_heal(self_obj, -self_max_hits);
   end
   //end added
end


/* Every heartbeat that the critter gets, this procedure will be called. Anything from
   Movement to attacking the player on sight can be placed in here.*/
procedure critter_p_proc begin

/* If the critter is mad at the player for any reason, it will attack and remember to attack
   the player should the game be saved and loaded repeatedly. Additionally, if any special
   actions need to be taken by the critter based on previous combat, the critter will remember
   this as well. */

   if (not local_var(LVAR_Death_Sequence) == 1) then begin
      if ((local_var(LVAR_Hostile) != 0 or ncr_flag(NCR_WESTIN_ENEMY)) and (self_can_see_dude)) then begin
         set_local_var(LVAR_Hostile,1);
         self_attack_dude;
         set_westin_flag(WESTIN_FAIL);
      end
   end
end

/* Whenever the critter takes damage of any type, this procedure will be called. Things
   like setting ENEMY_ and LVAR_Personal_Enemy can be set here. */
procedure damage_p_proc begin

/* If the player causes damage to this critter, then he will instantly consider the player
   his personal enemy. In Critter_Proc or through dialog, actions will be taken against
   the player for his evil acts. */
   if (obj_in_party(source_obj)) then begin
       set_local_var(LVAR_Personal_Enemy,1);
       set_local_var(LVAR_Hostile, 1);
       set_ncr_flag(NCR_WESTIN_ENEMY);
   end

end

/* Any time that the player is caught stealing from this critter, Pickup_proc will be called.
   In here, various things can happen. The most common response is instant hostility which
   will be remembered. */
procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
       set_local_var(LVAR_Hostile,2);
   end
end

/* The dialog system is setup and prepares the player to talk to this NPC. Where To Go
   written by designers are placed in here. Additionally, Reactions are generated and
   stored which affects player interactions. */
procedure talk_p_proc begin
   Evil_Critter:=0;
   Slavery_Tolerant:=SLAVE_INTOLERANT;
   Karma_Perception:=KARMA_PERCEPTION5;

   CheckKarma;

   GetReaction;
   if (local_var(LVAR_Pid) == 0) then begin // prevent talking to him during the ~2 second span where he is about to die from a heart attack - killap
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
         call Node001;
      gSay_End;
      end_dialogue;
      set_local_var(LVAR_Herebefore, 1);
   end
end

/* This procedure gets called only on the death of this NPC. Special things like
   incrementing the death count for reputation purposes and Enemy Counters are placed
   in here. */
procedure destroy_p_proc begin

/* Increment the aligned critter counter*/
   inc_good_critter

//added by killap - kill Bishop quest now gets crossed off if you double cross Westin and kill him like Bishop wanted
   if (global_var(GVAR_NCR_ELMBISHOP_QST) == 1) then
      set_global_var(GVAR_NCR_ELMBISHOP_QST, 3);
//addded by killap

/* Set global_variable for Enemy status*/
   if (local_var(LVAR_Hostile) > 0) then
      set_westin_flag(WESTIN_FAIL);
   set_westin_flag(WESTIN_DEAD);


   // added by killap - fail the brahmin quest if it's active and Westin is killed
   if (global_var(GVAR_NCR_BRAHMIN_QST) == 1) then begin
     set_global_var(GVAR_NCR_BRAHMIN_QST, 2);
     set_felix_seed(FELIX_CRITTERS_DONE);
   end
   // end added
end

/* Look_at_p_proc gets called any time that the player passes the cursor over any object.
   This should only hold the most cursory of glances for the player. */
procedure look_at_p_proc begin
   script_overrides;
   if (local_var(LVAR_Herebefore) == 0) then
      display_msg(mstr(100));
   else
      display_msg(mstr(101));
end

/* The player will see more indepth descriptions from this procedure. They are actively
   looking at the critter and want more information. Things like names can be added here
   if the critter is known to the player. */
procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(102));
end

/* Any time a skill is used on a critter this call is made. This can be to give examinations
   for things like Doctor skill or messages for various other skills. */
procedure use_skill_on_p_proc begin
end

/* Should the Player ever cause the NPC too much discomfort that he desires to attack the player,
   this call will be made. Essentially, it stores the Hostile vaule so that the critter remembers
   he was once hostile towards the player.*/
procedure Node998 begin
   set_local_var(LVAR_Hostile,2);
end

/* Anytime that there is a need for an ending to dialog, this node is to be called. It will just
   exit from the dialog system without any reprisals from the NPC. */
procedure Node999 begin
end


// Not lines are allowed to be added below here
// The Following lines are from the Design Tool
//~~~~~~~~~~~~~~~~ DESIGN TOOL STARTS HERE

procedure Node1314a begin
   //edit by killap
   if ( (not(get_felix_seed(FELIX_CRITTERS_DONE)) and (not (get_felix_seed(FELIX_CRITTERS_DEAD)))) and (GETDSTATUS != GDCOMPLETE) ) then
      call Node014;
   else
      call Node013;

   /*if (get_felix_seed(FELIX_CRITTERS_DONE)) then
      call Node013;
   else
      call Node014;*/
end

procedure Node1516a begin
   if (V13KNOWN) then
      call Node015;
   else
      call Node016;
end

procedure Node001 begin
   if (local_var(LVAR_Herebefore) == 0) then begin
      Reply(103);
   end else begin
      if (Node1Rep == 0) then
         Reply(104);
      else
         Reply(105);
      Node1Rep += 1;
   end

   if (not get_felix_seed(FELIX_CRITTERS_ACCEPT)) then
      NLowOption(106, Node004);
   if (not V13KNOWN and not get_felix_seed(FELIX_CRITTERS_ACCEPT)) then begin
      NLowOption(107, Node1314a);
      NOption(108, Node1314a, 4);
   end
   if (not get_bishop_flag(BISHOP_COMPLETE) and get_bishop_flag(BISHOP_DEAD) and get_bishop_flag(BISHOP_ACCEPT_SNUFF)) then
      NOption(109, Node009, 4);
   if (get_felix_seed(FELIX_CRITTERS_DEAD) and not get_felix_seed(FELIX_CRITTERS_DONE)) then begin
      NLowOption(110, Node1516a);
      NOption(111, Node1516a, 4);
   end
   if (not get_felix_seed(FELIX_CRITTERS_ACCEPT)) then
      NOption(112, Node002, 4);
   // Changed - DJS. Proper PID is PID_BISHOPS_HOLODISK
   //if (obj_is_carrying_obj_pid(dude_obj, LYNETTE_PID_HOLO)) then
   if ( ( global_var( GVAR_VAULT_DELIVER_HOLODISK ) == HOLODISK_ACCEPTED ) and
        ( dude_item_count(PID_BISHOPS_HOLODISK) ) ) then
      GOption(113, Node017, 4);

   if (get_westin_flag(WESTIN_ACCEPT_SNUFF) and not get_westin_flag(WESTIN_CANCEL_SNUFF)) then
      BOption(114, Node003, 4);
   NOption(115, Node999, 1);
end

procedure Node002 begin
   Reply(116);
   //if (get_westin_flag(WESTIN_ACCEPT_SNUFF)) then
   if (get_westin_flag(WESTIN_ACCEPT_SNUFF) and not get_westin_flag(WESTIN_CANCEL_SNUFF)) then //edit by killap
      BOption(117, Node020, 4);
   if (get_felix_seed(FELIX_DUMONT_REF)) then
      GOption(118, Node010, 4);
   NOption(119, Node999, 4);
end

procedure Node999a begin
   set_westin_flag(WESTIN_SNUFF_KNOWN); // Seraph's Fix: set_westin_flag only takes 1 arg. Thanks Rob!
   call Node998;
end

procedure Node003 begin
   Reply(120);
   NOption(121, Node005, 4);
   NOption(122, Node999a, 4);
end

procedure Node999b begin
   set_felix_seed(FELIX_SENT_BY_WESTIN);
   set_global_var(GVAR_NCR_BRAHMIN_QST, 1);
   call Node999;
end

procedure Node004 begin
   Reply(123);
   NOption(124, Node999b, 1);
end

procedure Node005 begin
   Reply(125);
   NOption(126, Node006, 4);
   BOption(127, Node999a, 4);
end

procedure Node007a begin
   num := global_var(GVAR_NEW_RENO_WESTIN_PRICE);
   call Node007;
end

procedure Node007b begin
   num := global_var(GVAR_NEW_RENO_WESTIN_PRICE) + (global_var(GVAR_NEW_RENO_WESTIN_PRICE) / 2);
   call Node007;
end

procedure Node006 begin
   Reply(128);
//129
   NOption("" + global_var(GVAR_NEW_RENO_WESTIN_PRICE), Node007a, 4);
//130
   BOption("" + (global_var(GVAR_NEW_RENO_WESTIN_PRICE) + (global_var(GVAR_NEW_RENO_WESTIN_PRICE) / 2)), Node007b, 4);
end

procedure Node008a begin
   set_global_var(GVAR_NCR_ELMBISHOP_QST, 1);
   set_bishop_flag(BISHOP_ACCEPT_SNUFF);
   set_westin_flag(WESTIN_CANCEL_SNUFF);
   set_global_var(GVAR_NCR_BISHOP_PRICE, num);
   call Node008;
end

procedure Node007 begin
   num += (num / 2);

   Reply(mstr(131) + " " + num + " " + mstr(168));
   GOption(132, Node008a, 4);
   BOption(133, NOde999a, 4);
end

procedure Node008 begin
   Reply(134);
   ENDOPTION;
end

procedure Node1119a begin
   //edit by killap
   if ( (not(get_felix_seed(FELIX_CRITTERS_DONE)) and (not (get_felix_seed(FELIX_CRITTERS_DEAD)))) and (GETDSTATUS != GDCOMPLETE) ) then
      call Node011;
   else
      call Node019;
   //if ( (not get_felix_seed(FELIX_CRITTERS_DEAD)) ) then //added (GETDSTATUS != GDCOMPLETE) by killap
   //   call Node011;
   //else
   //   call Node019;
end

procedure Node009 begin
   dude_caps_adjust(global_var(GVAR_NCR_BISHOP_PRICE));
   set_bishop_flag(BISHOP_COMPLETE);
   set_global_var(GVAR_NCR_ELMBISHOP_QST, 2);

   Reply(135);
   NOption(136, Node1119a, 4);
   if (not V13KNOWN) then
      NOption(137, Node1314a, 4);
   NOption(138, Node999, 4);
end

procedure Node012a begin
   set_felix_seed(FELIX_SENT_BY_WESTIN);
   set_global_var(GVAR_NCR_BRAHMIN_QST, 1);

   call Node012;
end

procedure Node010 begin
   if (GETDSTATUS != GDCOMPLETE) then begin
      Reply(139);
      NOption(140, Node012a, 4);
      NOption(141, Node999, 4);
   end else begin
      Reply(169);
      NOption(170, Node999, 4);
   end
end

procedure Node011 begin
   Reply(142);
   NOption(143, Node012a, 4);
   NOption(144, Node999, 4);
end

procedure Node012 begin
   Reply(145);
   ENDOPTION;
end

procedure Node013 begin
   //set_global_var(GVAR_NCR_DEATHCLAW_DEN, 1);
   //mark_vault_13_on_map
   //set_f2(f2_state_v13_known);

   Reply(146);
   NLowOption(147, Node999);
   NOption(148, Node999, 4);
end

procedure Node014 begin
   Reply(149);

   NLowOption(106, Node004); //added by killap
   NOption(150, Node012a, 4);
   NOption(151, Node999, 4);
end

procedure EndDeathClawMission begin
   set_global_var(GVAR_NCR_BRAHMIN_QST, 2);
   set_felix_seed(FELIX_CRITTERS_DONE);
   dude_caps_adjust(200);
   inc_general_rep(REP_BONUS_NCR_DID_DEATHCLAWS);
   inc_ncr_rep(REP_HERO_NCR_STOPED_BRAHMIN_RAIDS);
   give_xp(EXP_DID_DEATHCLAW_MISSION);
end

procedure Node015 begin
   call EndDeathClawMission;
   Reply(152);
   ENDOPTION;
end

procedure Node016 begin
   call EndDeathClawMission;
   Reply(153);
   NLowOption(154, Node999);
   NOption(155, Node999, 4);
end

procedure getDisk begin
   variable obj;

   // Changed, DJS. Proper PID is PID_BISHOPS_HOLODISK
   //obj := obj_carrying_pid_obj(dude_obj, LYNETTE_PID_HOLO);
   obj := dude_item(PID_BISHOPS_HOLODISK);
   if (obj) then begin
      set_global_var(GVAR_VAULT_DELIVER_HOLODISK, HOLODISK_DELIVERED);
      rm_obj_from_inven(dude_obj, obj);
      destroy_object(obj); //As per Chris Avellone
//      add_obj_to_inven(self_obj, obj);
   end
end

procedure giveDisk begin
   variable obj;

   obj := create_object_sid(WESTIN_PID_HOLO, self_tile, self_elevation, SCRIPT_SIWESHOL);
   if (obj) then begin
      set_global_var(GVAR_NCR_LYNETTE_HOLO_QST, 1);
      add_obj_to_inven(dude_obj, obj);
   end
end

procedure Node017 begin
   call getDisk;
   inc_general_rep(REP_BONUS_NCR_DELIVER_LYNETTE_HOLO);
   display_msg(mstr(175)); //added by killap
   give_xp(EXP_DELIVER_LYNETTE_HOLO);
   Reply(156);
   if ((global_var(GVAR_VAULT_CITIZEN) > 0) and (global_var(GVAR_VAULT_CITIZEN) < CITIZEN_KICKED_OUT)) then //edit by killap - was if (global_var(GVAR_VAULT_CITIZEN)
      GOption(157, Node018, 4);
   else
      NOption(158, Node019, 4);
end

procedure Node018 begin
   call giveDisk;
   Reply(159);
//   NOption(160, Node001, 4);
   NOption(161, Node999, 4);
end

procedure Node019 begin
   Reply(162);
   NOption(163, Node001, 4);
   NOption(164, Node999, 4);
end

procedure Node020 begin
   Reply(165);
   NOption(166, Node003, 4);
   NOption(167, Node999a, 4);
end

procedure DoDeathSequence begin
   if (local_var(LVAR_Death_Sequence) == 0) then begin
      set_local_var(LVAR_Death_Sequence, 1);
      reg_anim_clear(self_obj);
      reg_anim_begin();
      self_walk_to_tile(DEATH_TILE);
      reg_anim_end();
      float_msg(self_obj, mstr(171), FLOAT_MSG_GREEN);
      add_timer_event(self_obj, game_ticks(3), TIMER_DEATH);
   end
   //added by killap - kill Bishop quest now gets crossed off if you double cross Westin and kill him like Bishop wanted
   if (global_var(GVAR_NCR_ELMBISHOP_QST) == 1) then
      set_global_var(GVAR_NCR_ELMBISHOP_QST, 3);
   //addded by killap

end

procedure ContinueDeath begin
   if (local_var(LVAR_Death_Sequence) == 1) then begin
      reg_anim_clear(self_obj);
      reg_anim_begin();
      reg_anim_animate(self_obj, ANIM_fall_back, -1);
      reg_anim_end();
      float_msg(self_obj, mstr(172), FLOAT_MSG_GREEN);
      add_timer_event(self_obj, game_ticks(3), TIMER_DEATH);
   end else if (local_var(LVAR_Death_Sequence) == 2) then begin
      float_msg(dude_obj, mstr(173+(dude_is_stupid*3)), FLOAT_MSG_NORMAL);
      if (local_var(LVAR_Hostile) > 0) then begin
         set_westin_flag(WESTIN_FAIL);
      end
      set_westin_flag(WESTIN_DEAD);
      critter_heal(self_obj, -self_max_hits);
   end
   inc_local_var(LVAR_Death_Sequence);
end

procedure DoExplosiveSequence begin
   if (local_var(LVAR_Death_Sequence) == 0) then begin
      set_local_var(LVAR_Death_Sequence, 1);
      reg_anim_clear(self_obj);
      reg_anim_begin();
      self_run_to_tile(DEATH_TILE);
      reg_anim_end();
      float_msg(self_obj, mstr(174), FLOAT_MSG_RED);
      add_timer_event(self_obj, game_ticks(1), TIMER_EXPLOSIVE_DEATH);
   end else if (local_var(LVAR_Death_Sequence) == 1) then begin
      float_msg(self_obj, mstr(174), FLOAT_MSG_RED);
      if (local_var(LVAR_Hostile) > 0) then begin
         set_westin_flag(WESTIN_FAIL);
      end
      set_westin_flag(WESTIN_DEAD);
      critter_damage(self_obj, 10000);
   end
   //added by killap - kill Bishop quest now gets crossed off if you double cross Westin and kill him like Bishop wanted
   if (global_var(GVAR_NCR_ELMBISHOP_QST) == 1) then
      set_global_var(GVAR_NCR_ELMBISHOP_QST, 3);
   //addded by killap
end
//xxxxxxxxxxxxxxxxxxxx
