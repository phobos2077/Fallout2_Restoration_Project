/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Modoc Bess, your brahmin friend till the end
        Location: Modoc
        Description:

        Log:

           Created: December 02, 1997

           Updated:
*/

/* Include Files */

#define set_default_party_follow             set_follow_close

#define SCRIPT_REALNAME "mcbess"
#include "../headers/define.h"
#define NAME                    SCRIPT_MCBESS
#define TOWN_REP_VAR            GVAR_TOWN_REP_MODOC
#include "../headers/command.h"
#include "../headers/modoc.h"
#include "../headers/modmain.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;
procedure use_p_proc;
procedure push_p_proc;

procedure Node999;
procedure Node990;
procedure Node002;
procedure Node003;

#define br_mstr(x)                        message_str(SCRIPT_ZCBRAHMN,x)
#define br_floater(x)                     float_msg(self_obj, br_mstr(x), FLOAT_COLOR_NORMAL)

#define LVAR_Flags                        (0)
#define LVAR_Graze_Tile                   (1)
#define LVAR_FOLLOW_DISTANCE              (2)
#define LVAR_WAITING                      (3)
#define LVAR_TEAM                         (5)

#define healed_bit                        bit_10
#define made_jerky_bit                    bit_11

#define healed                            lvar_bit(LVAR_Flags, healed_bit)
#define set_healed                        if (healed == false) then begin              \
                                             display_mstr(300);                        \
                                             give_xp(EXP_HEAL_BESS);                   \
                                          end                                          \
                                          set_lvar_bit_on(LVAR_Flags, healed_bit)

#define made_jerky                        lvar_bit(LVAR_Flags, made_jerky_bit)
#define set_made_jerky                    set_lvar_bit_on(LVAR_Flags, made_jerky_bit)

#define is_bess_map                       ((cur_town == AREA_MODOC) and (cur_map_index != MAP_MODOC_DOWNTHESHITTER) and (cur_map_index != MAP_MODOC_WELL))
#define set_graze_tile                    if (is_slaughter_house_brahmin) then begin                                                                       \
                                             temp_tile := tile_num_in_direction(self_tile, random(0,5), random(1,3));                     \
                                             if (tile_in_brahmin_pen(temp_tile)) then begin                                                                \
                                                set_local_var(LVAR_Graze_Tile, temp_tile);                                                                 \
                                             end                                                                                                           \
                                          end
#define check_give_bess_number            if (is_slaughter_bess_time) then begin                                                                                    \
                                             if (brahmin_1_object == 0) then begin                                                                                  \
                                                brahmin_1_object := self_obj;                                                                                       \
                                             end else if ((brahmin_1_object != self_obj) and (is_slaughter_1_time == false)) then begin  \
                                                brahmin_1_object := self_obj;                                                                                       \
                                             end                                                                                                                    \
                                          end

#define bess_is_injured                   ((critter_state(self_obj) bwand DAM_CRIP_LEG_RIGHT) and (healed == false))
#define put_jerky_in_box                  ndebug("PUTTING JERKY IN BOX");                          \
                                          if (made_jerky == false) then begin                         \
                                             set_made_jerky;                                          \
                                             give_pid_qty(modoc_jerky_box_obj, PID_MEAT_JERKY, 100)   \
                                          end

import variable brahmin_1_object;
import variable modoc_jerky_box_obj;
variable temp_brahmin;
variable temp_tile;

procedure start begin
end

procedure timed_event_p_proc begin
variable temp_poo;
   if (fixed_param == 666) then begin
      put_jerky_in_box
      critter_damage(self_obj, 100);
   end else if (self_visible) then begin
      if (fixed_param == 1) then begin
            br_floater(random(201, 206));
         add_timer_event(self_obj,game_ticks(random(5,15)),1);
      end else if (fixed_param == 3) then begin
         if (bess_is_injured == false) then begin
            if (random(1,3) == 1) then begin
               br_floater(206);
               temp_poo := create_object_sid(random(PID_SMALL_GOO_1, PID_SMALL_GOO_3), 0, 0, SCRIPT_ZIBRAPOO);
               move_to(temp_poo, tile_num_in_direction(self_tile, self_inv_rot, 1), 0);
            end
            flush_add_timer_event_sec(self_obj, random(120, 300), 3);
         end
      end else if (fixed_param == 4) then begin
         reg_anim_clear(self_obj);
         reg_anim_begin();
            reg_anim_animate(self_obj, ANIM_back_to_standing, -1);
         reg_anim_end();
         critter_uninjure(self_obj, DAM_KNOCKED_DOWN);
      //added by killap
      end else if (fixed_param == 5) then begin
         if not anim_busy(self_obj) then begin
            self_walk_to_tile(tile_num_in_direction(self_tile,1,3));
            add_timer_event(self_obj, game_ticks(1), 5);
         end
      end
      //end added
   end
end

procedure critter_p_proc begin
   // setup pointers
   if (self_visible) then begin
      if not healed and not (critter_state(self_obj) bwand DAM_CRIP_LEG_RIGHT) then begin
         set_healed;
         flush_add_timer_event_sec(self_obj, random(120, 300), 3);
         inc_general_rep(REP_BONUS_MODOC_HELP_BESS);
         party_add_self;
         reg_anim_clear(self_obj);
         reg_anim_begin();
            reg_anim_animate(self_obj, ANIM_back_to_standing, -1);
         reg_anim_end();
      end

      if (Bess_In_Party) then begin
         party_member_follow_dude
      end else if (freed_bess) then begin
         if (tile_distance(self_tile, map_next_tile) > 1) then begin
            self_walk_to_tile(map_next_tile);
            //added by killap
            if not anim_busy(self_obj) then begin
               add_timer_event(self_obj, game_ticks(1), 5);
            end
            //end added
         end else begin
            inc_general_rep(REP_BONUS_MODOC_FREE_BESS);
            set_global_var(TOWN_REP_VAR, global_var(TOWN_REP_VAR) - 15);
            inc_global_var(GVAR_MODOC_BRAHMIN_ESCAPED);
            destroy_object(self_obj);
         end
      end else if (bess_sold_for_jerky) then begin

         if (Bess_In_Party) then begin
            party_remove_self;
         end

         if (brahmin_1_object == self_obj) then begin
            send_to_slaughter
         end else
            check_give_bess_number
         else if (tile_distance(self_tile, local_var(LVAR_Graze_Tile)) > 0) then begin
            if ((critter_state(self_obj) bwand DAM_KNOCKED_DOWN) == FALSE) then begin
               self_walk_to_tile(local_var(LVAR_Graze_Tile));
            end
         end
      end
   end else if not(self_visible) then begin
      if (is_bess_map) then begin
         //check_set_obj_visiblility(self_obj, true);
         set_obj_visibility( self_obj, false );
      end
   end
end

procedure talk_p_proc begin
   script_overrides;
   if (bess_is_injured) then begin
      floater_sick(120);
      display_mstr(121);
   end else if ((bess_sold_for_jerky) and (freed_bess == false)) then begin
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
         call Node002;
      gSay_End;
      end_dialogue;
   end else begin
      br_floater(random(201, 206));
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      if (self_team == TEAM_PLAYER) then begin
         set_self_abandon_party;
      end
   end
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(100 + herebefore);
   set_herebefore;
end

procedure description_p_proc begin
   script_overrides;
   display_mstr(110 + (bess_is_injured == false));
end

procedure use_skill_on_p_proc begin
   // a good science skill check will give you a little more info about the brahmin.
   if (action_being_used == SKILL_SCIENCE) then begin
      script_overrides;
      if (is_success(roll_vs_skill(dude_obj,action_being_used,0))) then
         display_msg(br_mstr(101));
      else
         display_msg(br_mstr(102));
   end else if (action_being_used == SKILL_FIRST_AID) then begin
      if (healed == false) then begin
         script_overrides;
         display_mstr(200);
      end
   end else if (action_being_used == SKILL_STEAL) then
      script_overrides;
end

procedure use_obj_on_p_proc begin
   //added by killap
   if ( (obj_pid(obj_being_used_with) == PID_MICRO_FUSION_CELL) or (obj_pid(obj_being_used_with) == PID_SMALL_ENERGY_CELL) ) then begin
      script_overrides;
      display_msg(g_mstr(20000));
   end
   //end added

   // if you give a Brahmin beer or booze, it'll fall down and take damage. This was pulled from the original
   //    fallout script
   if ((obj_pid(obj_being_used_with) == PID_BEER) or (obj_pid(obj_being_used_with) == PID_BOOZE)) then begin
      variable item := 0;
      script_overrides;
      item := obj_being_used_with;
      rm_obj_from_inven(source_obj,obj_being_used_with);
      destroy_object(item);
      if ((critter_state(self_obj) bwand DAM_KNOCKED_DOWN) == FALSE) then begin
         reg_anim_clear(self_obj);
         reg_anim_begin();
            reg_anim_animate(self_obj,ANIM_hit_from_front,-1);
            reg_anim_animate(self_obj,ANIM_fall_back,5);
            reg_anim_animate(self_obj,ANIM_fall_back_sf,-1);
         reg_anim_end();
         critter_injure(self_obj,DAM_KNOCKED_DOWN);
      end
   end
end

procedure push_p_proc begin
   if (healed) then begin
      if (obj_in_party(source_obj)) then begin
         if (stat_success(source_obj, STAT_st, 0)) then begin
            if ((critter_state(self_obj) bwand DAM_KNOCKED_DOWN) == FALSE) then begin
               reg_anim_clear(self_obj);
               reg_anim_begin();
                  reg_anim_animate(self_obj,ANIM_hit_from_front,-1);
                  reg_anim_animate(self_obj,ANIM_fall_back,5);
                  reg_anim_animate(self_obj,ANIM_fall_back_sf,-1);
               reg_anim_end();
               critter_injure(self_obj,DAM_KNOCKED_DOWN);
               add_timer_event(self_obj, game_ticks(Random(10, 30)), 4);
               ndebug("ahh Cow TIPPED you get +10 Hick Experience Points.");
            end
         end
      end
   end else begin
      script_overrides;
   end
end

procedure map_enter_p_proc begin
   match_dude_elevation;
   if (is_loading_game == false) then begin
      if (map_first_run) then begin
         if (healed == false) then begin
            reg_anim_clear(self_obj);
            reg_anim_begin();
               reg_anim_animate(self_obj,ANIM_hit_from_front,-1);
               reg_anim_animate(self_obj,ANIM_fall_back,5);
               reg_anim_animate(self_obj,ANIM_fall_back_sf,-1);
            reg_anim_end();
            critter_injure(self_obj, DAM_CRIP_LEG_RIGHT);
         end
      end

      //added by killap
      if ( (healed) and not(freed_bess) and not(bess_sold_for_jerky) ) then begin
         party_add_self;
      end
      //end added by killap

      if (freed_bess) then begin
         destroy_object(self_obj);
      end else if (bess_sold_for_jerky) then begin
         if (is_slaughter_bess_time) then begin
            put_jerky_in_box
            destroy_object(self_obj);
         end
      end else if (Bess_In_Party) then begin
         if (is_bess_map == false) then begin
            //check_set_obj_visiblility(self_obj, true);
            set_obj_visibility( self_obj, true );
         end else if ((self_visible == false) and (local_var(LVAR_WAITING) == cur_map_index)) then begin
            set_local_var(LVAR_WAITING, 0);
            //check_set_obj_visiblility(self_obj, false);
            set_obj_visibility( self_obj, false );
         end
      end
   end
end

procedure map_exit_p_proc begin
   ndebug("bess in party: " + Bess_In_Party);
   if (Bess_In_Party) then begin
      if ((is_bess_map) and (local_var(LVAR_WAITING) == 0)) then begin
         set_local_var(LVAR_WAITING, cur_map_index);
         party_remove_self;
      end
   end if (is_slaughter_house_brahmin) then begin
      if (freed_bess) then begin
         if (tile_in_slaughter_house_area(self_tile) == false) then begin
            //inc_global_var(GVAR_MODOC_BRAHMIN_ESCAPED);
            //ndebug("GVAR_MODOC_BRAHMIN_ESCAPED == " + global_var(GVAR_MODOC_BRAHMIN_ESCAPED));
            //destroy_object(self_obj);

            //added by killap --commented out above code
            inc_general_rep(REP_BONUS_MODOC_FREE_BESS);
            set_global_var(TOWN_REP_VAR, global_var(TOWN_REP_VAR) - 15);
            inc_global_var(GVAR_MODOC_BRAHMIN_ESCAPED);
            destroy_object(self_obj);
            //end added
         end
      end else if (brahmin_1_object == self_obj) then begin
         critter_attempt_placement(self_obj, slaughter_1_tile, self_elevation);
      end
   end
end

procedure use_p_proc begin
end

procedure Node999 begin
end

procedure Node990 begin
   set_freed_bess;
end

procedure Node002 begin
variable temp_msg;
   temp_msg := mstr(130);
   if (dude_perk(PERK_empathy)) then begin
      temp_msg += mstr(131);
   end
   Reply(temp_msg);
   GOption(132,Node003,001);
   BOption(133,Node999,001);
end

procedure Node003 begin
variable temp_msg;
   temp_msg := mstr(140);
   if (dude_perk(PERK_empathy)) then begin
      temp_msg += mstr(141);
   end
   Reply(temp_msg);
   GOption(142,Node990,001);
   BOption(143,Node999,001);
end
