/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name:
        Location: Modoc
        Description:

        Log: the following defines need to be changed:


          Created: August 3, 1998

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "mctrader"
#include "../headers/define.h"

#define NAME                        SCRIPT_MCTRADER
#define TOWN_REP_VAR                GVAR_TOWN_REP_MODOC

#include "../headers/command.h"
#include "../headers/modoc.h"
#include "../headers/modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure push_p_proc;

// dialog nodes
procedure Node001;
procedure Node002;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;

procedure Node999;                                      // This is the do nothing node
procedure Node998;                                      // This Node is Always Combat

#define LVAR_Flags                           (4)
#define LVAR_Home_Tile                       (5)

#define is_rose_patron_bit                   bit_10
#define is_rose_patron                       lvar_bit(LVAR_Flags, is_rose_patron_bit)
#define set_is_rose_patron                   set_lvar_bit_on(LVAR_Flags, is_rose_patron_bit)

procedure start begin
end

procedure push_p_proc begin
end

procedure timed_event_p_proc begin
variable temp;
   move_to_wander_tile(temp)
   mod_add_timer_event_rand(self_obj, 15, 45, 1);
end

procedure map_enter_p_proc begin

   match_dude_elevation;
   if (is_loading_game == false) then begin
      if (map_first_run) then begin
         if ((obj_in_roses(self_obj)) or (obj_in_roses_bedroom(self_obj))) then begin
            set_is_rose_patron;
         end
         set_local_var(LVAR_Home_Tile, self_tile);
         set_self_team(TEAM_MODOC);
         set_self_ai(AI_PEASANT);
      end
      mod_add_timer_event_rand(self_obj, 15, 45, 1);
      if (random(1, 5) <= (1 + night)) then begin
         check_set_obj_visiblility(self_obj, true);
      end else begin
         check_set_obj_visiblility(self_obj, false);
      end
   end
end


procedure combat_p_proc begin
   if (fixed_param == COMBAT_SUBTYPE_TURN) then begin
   end
end

procedure critter_p_proc begin
   if (self_visible) then begin
      if ((wedding_stage_place_important <= get_sub_stage) and (get_sub_stage <= wedding_stage_place_guest_4) and (is_staging_wedding)) then begin
         if (tile_in_church(self_tile)) then begin
            check_set_obj_visiblility(self_obj, true);
         end
      end else if (self_can_see_dude) then begin
         if ((hostile) or (dude_enemy_modoc)) then begin
            self_attack_dude;
         end
      end
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_enemy_modoc;
      call Node998;
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

procedure talk_p_proc begin
   if (obj_in_roses(self_obj)) then begin
      if (chicken_let_out) then begin
         call Node005;
      end else if (shitter_has_blown) then begin
         call Node002;
      end else begin
         call Node001;
      end
   end else if (obj_in_roses_bedroom(self_obj)) then begin
      call Node004;
   end else if (chicken_let_out) then begin
      call Node005;
   end else if (all_slags_dead) then begin
      if (modoc_attacked_slags) then begin
         call Node008;
      end else begin
         call Node007;
      end
   end else if (ghost_farm_seed_completed) then begin
      call Node009;
   end else begin
      call Node006;
   end
   set_herebefore;
end

procedure destroy_p_proc begin
   inc_good_critter
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(500);
   set_examined;
end

procedure description_p_proc begin
   script_overrides;
   display_mstr(500);
end

procedure use_skill_on_p_proc begin
end

// dialog action functions
procedure Node999 begin
  // do absolutely everything that pertains to nothing
end
procedure Node998 begin
   set_hostile;
end

procedure Node001 begin
   floater_rand(100, 103);
end
procedure Node002 begin
   floater_bad_rand(110, 112);
end
procedure Node004 begin
   floater_bad_rand(120, 122);
end
procedure Node005 begin
   floater_bad_rand(130, 132);
end
procedure Node006 begin
   floater_rand(140, 142);
end
procedure Node007 begin
   floater_rand(150, 152);
end
procedure Node008 begin
   floater_rand(160, 164);
end
procedure Node009 begin
   floater_rand(170, 172);
end
