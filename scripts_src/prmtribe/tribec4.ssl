/*
	Script for critter tmplete
*/




/* Include Files */
#define SCRIPT_REALNAME "tribec4"
#include "../headers/define.h"

#define NAME                    SCRIPT_TRIBEC4

#define TOWN_REP_VAR            GVAR_TOWN_REP_PRIMITIVE_TRIBE

#include "../headers/command.h"

/* Standard Script Procedures */
procedure start;
procedure combat_p_proc;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node007a;
procedure Node007b;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node012a;
procedure Node012b;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;

procedure Node999;
procedure Node998;
/*****************************************************************
   Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_
*****************************************************************/

#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)
#define LVAR_Bring_Herbs                (7)
#define LVAR_Heal_Serin                 (8)

/*******************************************************************
   Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_)
*******************************************************************/

/*******************************************************************
   Local variables which do not need to be saved between map changes.
*******************************************************************/

import variable GHOST_obj;

/*******************************************************************
*******                         PROCEDURES                   *******
*******************************************************************/


/*******************************************************************
   The start procedure is the first procedure called when the map is
   first entered. Any initial information that needs to be set up
   should be placed in here.
*******************************************************************/

procedure start begin
end

procedure timed_event_p_proc begin
   if (fixed_param==1) then begin
      ndebug("tribec4: tile_set_center(22902): " + tile_set_center(22902)); //screen will center on the fire
      add_timer_event(self_obj,10,2);
   end
   else if (fixed_param==2) then begin
	  floater(310);
	  add_timer_event(self_obj,40,3);
   end
   else if (fixed_param==3) then begin
	  float_msg(GHOST_obj, mstr(311), FLOAT_MSG_YELLOW);
	  add_timer_event(self_obj,30,4);
   end
   else if (fixed_param==4) then begin
	  floater(312);
	  add_timer_event(self_obj,50,5);
   end
   else if (fixed_param==5) then begin
	  float_msg(GHOST_obj, mstr(313), FLOAT_MSG_YELLOW);
	  add_timer_event(self_obj,30,6);
   end
   else if (fixed_param==6) then begin
     floater(314);
	  add_timer_event(self_obj,60,7);
   end
   else if (fixed_param==7) then begin
	  float_msg(GHOST_obj, mstr(315), FLOAT_MSG_YELLOW);
	  add_timer_event(self_obj,40,8);
   end
   else if (fixed_param==8) then begin
	  floater(316);
	  add_timer_event(self_obj,30,9);
   end
   else if (fixed_param==9) then begin
	  float_msg(GHOST_obj, mstr(317), FLOAT_MSG_YELLOW);
	  set_global_var(GVAR_TRIBE_GHOST,3);
	  add_timer_event(self_obj,35,10);
   end
   else if (fixed_param==10) then begin
      gfade_out(ONE_GAME_SECOND*6);
      move_to(self_obj,18717,1);
      move_to(dude_obj,19317,1);
      Face_Critter( self_obj, dude_obj );
      Face_Critter( dude_obj, self_obj );
      game_ui_enable;
      display_msg(mstr(1000));
      give_xp(EXP_TRIBE_GHOSTPROBLEM);
      inc_general_rep(REP_TOWN_TRIBE_GHOSTPROBLEM);
      gfade_in(ONE_GAME_SECOND*6);
   end
end

/********************************************************************
********************************************************************/

procedure use_p_proc begin
end

/***************************************************************************
   This is cursory glance description that the player will receive should
   he just pass the Action Cursor over. Examines which give more information
   need to be in the description_p_proc procedure.
***************************************************************************/

procedure look_at_p_proc begin
   script_overrides;
   if (local_var(LVAR_Herebefore) == 0) then
      display_msg(mstr(100));
   else
      display_msg(mstr(101));
end



procedure description_p_proc begin
   script_overrides;
   if (global_var(GVAR_TRIBE_GHOST) == 3) then
      display_msg(mstr(103));
   else
      display_msg(mstr(102));
end



procedure use_skill_on_p_proc begin
end


procedure use_obj_on_p_proc begin
end


/******************************************************************************************
   IF it gets damaged
******************************************************************************************/

procedure damage_p_proc begin
   set_global_var(GVAR_ENEMY_PRIMITIVE_TRIBE,1);
   attack(dude_obj);
end
/***************************************************************************************
   Whenever the map is first entered, this procedure will be called.
***************************************************************************************/

procedure map_enter_p_proc begin
   set_self_team(TEAM_PRIMITIVE_TRIBE);
end


/**************************************************************************************
   This procedure gets called roughly every 30 seconds of real time.
**************************************************************************************/

procedure map_update_p_proc begin
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
       set_global_var(GVAR_ENEMY_PRIMITIVE_TRIBE,1);
   end
end

/**************************************************************************************
   This is used for any dialogue that may need to occur with the player.
**************************************************************************************/

procedure talk_p_proc begin
   if ((local_var(LVAR_Herebefore) <= 1) and (global_var(GVAR_TRIBE_GHOST) == 0)) then begin
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
         call Node001;
      gSay_End;
      end_dialogue;
   end else if ((local_var(LVAR_Herebefore) == 2) and (global_var(GVAR_TRIBE_GHOST) == 0)) then begin
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
         call Node009;
      gSay_End;
      end_dialogue;
   end else if ((local_var(LVAR_Herebefore) < 3) and ((global_var(GVAR_TRIBE_GHOST) == 1) or (global_var(GVAR_TRIBE_GHOST) == 2))) then begin
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
         call Node010;
      gSay_End;
      end_dialogue;
   end else if ((local_var(LVAR_Herebefore) == 3) and (global_var(GVAR_TRIBE_GHOST) == 2)) then begin
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
         call Node013;
      gSay_End;
      end_dialogue;
   end else if (global_var(GVAR_TRIBE_SHAMAN_HERBS) == 1) then begin
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
         call Node018;
      gSay_End;
      end_dialogue;
   end else if ( ((global_var(GVAR_MISSING_WARRIOR) >= 5) and (global_var(GVAR_MISSING_WARRIOR) < 8)) and (local_var(LVAR_Heal_Serin) == 0) ) then begin
      set_local_var(LVAR_Heal_Serin,1);
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
         call Node014;
      gSay_End;
      end_dialogue;
   end else begin
      if (Fallout2_enclave_destroyed) then begin
         floater(random(3000,3001));
      end else begin
         floater(random(500, 501));
      end
   end
   if (local_var(LVAR_Herebefore) == 0) then
      set_local_var(LVAR_Herebefore, 1);
end

procedure destroy_p_proc
begin
   inc_good_critter
   set_global_var(GVAR_TOWN_REP_PRIMITIVE_TRIBE, global_var(GVAR_TOWN_REP_PRIMITIVE_TRIBE) - 10);
   set_global_var(GVAR_ENEMY_PRIMITIVE_TRIBE,1);
end

procedure critter_p_proc
begin
   if (self_can_see_dude) then begin
      if (has_rep_slaver) then begin
         attack(dude_obj);
      end else if (REP_ENEMY_PRIMITIVE_TRIBE) then begin
         attack(dude_obj);
      end
   end
end

procedure combat_p_proc
begin
   if (global_var(GVAR_ENEMY_PRIMITIVE_TRIBE)==1) then begin
      attack(dude_obj);
   end
end

procedure Node001
begin
	Reply(200+(local_var(LVAR_Herebefore) > 0));

   NLowOption(204,Node002);
	NOption(202,Node004,004);
	NOption(203,Node999,004);
end

procedure Node002
begin
	Reply(400);

	NLowOption(401,Node003);
end

procedure Node003
begin
	Reply(410);

	NLowOption(411,Node999);
end

procedure Node004
begin
	if (dude_charisma >= 7 or global_var(GVAR_TOWN_REP_PRIMITIVE_TRIBE) > 0) then
	  Reply(211);
	else
     Reply(210);

	NOption(212,Node005,004);
	NOption(213,Node008,004);
end

procedure Node005
begin
	Reply(220);

	NOption(221,Node006,004);
	BOption(222,Node998,004);
end

procedure Node006
begin
	Reply(240);

	NOption(241,Node007,004);
	NOption(242,Node007,004);
end

procedure Node007
begin
	Reply(250);

	NOption(251,Node007a,004); //did not accept
	NOption(252,Node007b,004); //accepted
end

procedure Node007a
begin
  set_local_var(LVAR_Herebefore,2);
end

procedure Node007b
begin
  set_global_var(GVAR_TRIBE_GHOST,1);
end

procedure Node008
begin
	Reply(230);

	NOption(231,Node006,004);
end

procedure Node009
begin
	Reply(260);

	NOption(261,Node007a,004); //did not accept
	NOption(262,Node007b,004); //accepted
end

procedure Node010
begin
	Reply(270);

	NOption(271,Node999,004);
	if (global_var(GVAR_TRIBE_GHOST) == 2) then
	  NOption(272,Node011,004); //found out about 'Thorg'
end

procedure Node011
begin
	Reply(280);

	NOption(281,Node012,004);
end

procedure Node012
begin
	Reply(290);

	NOption(291,Node012a,004); //did not accept sequence
	NOption(292,Node012b,004); //sequence
	NOption(293,Node012b,004); //sequence
end

procedure Node013
begin
	Reply(300);

	NOption(301,Node012a,004); //did not accept sequence
	NOption(302,Node012b,004); //sequence
end

procedure Node012a
begin
 set_local_var(LVAR_Herebefore,3);
end

procedure Node012b
begin
   game_ui_disable;
   gfade_out(ONE_GAME_SECOND*600);
   game_time_advance_hour(000);
   move_to(self_obj,22706,2);

   move_to(dude_obj,22301,2);
   move_to(GHOST_obj,22897,2);
   Face_Critter( self_obj, GHOST_obj );
   Face_Critter( Ghost_obj, self_obj );
   Face_Critter( self_obj, dude_obj );
   Face_Critter( dude_obj, self_obj );

   gfade_in(ONE_GAME_SECOND*600);
   add_timer_event(self_obj,0,1);
end

procedure Node014 begin
   Reply(600);
   NOption(601,Node015,004);
   NOption(602,Node999,004);
end

procedure Node015 begin
   Reply(610);
   if not((dude_item_count(PID_BROC_FLOWER) >= 3) and (dude_item_count(PID_XANDER_ROOT) >= 5)) then
      NOption(611,Node017,004);
   else
      NOption(612,Node019,004);
   NOption(614,Node016,004);
   NOption(613,Node999,004);
end

procedure Node016 begin
   Reply(620);
   if not((dude_item_count(PID_BROC_FLOWER) >= 3) and (dude_item_count(PID_XANDER_ROOT) >= 5)) then
     NOption(611,Node017,004);
   else
     NOption(612,Node019,004);
   NOption(613,Node999,004);
end

procedure Node017 begin
   set_global_var(GVAR_TRIBE_SHAMAN_HERBS,1);
end

procedure Node018 begin
   Reply(630);
   if ((dude_item_count(PID_BROC_FLOWER) >= 3) and (dude_item_count(PID_XANDER_ROOT) >= 5)) then
     NOption(631,Node019,004);
   else
     NOption(632,Node999,004);
end

procedure Node019 begin
   variable Obj;
   variable Obj2;
   variable Remove;

   set_global_var(GVAR_TRIBE_SHAMAN_HERBS,2);

   Obj := dude_item(PID_BROC_FLOWER);
   Obj2 := dude_item(PID_XANDER_ROOT);
   Remove := rm_mult_objs_from_inven(dude_obj, Obj, 3 );
   Remove := rm_mult_objs_from_inven(dude_obj, Obj2, 5 );
   destroy_object(Obj);
   destroy_object(Obj2);
   Obj:=create_object(PID_HEALING_POWDER,0,0);
   add_mult_objs_to_inven(dude_obj,Obj,3);
   display_msg(mstr(2000));
   give_xp(100);

   Reply(640);
   NOption(641,Node999,004);
end

procedure Node998 begin
   set_local_var(LVAR_Hostile,2);
   set_global_var(GVAR_ENEMY_PRIMITIVE_TRIBE,1);
end

procedure Node999 begin

end
