/*        Script from item templete*          /

/*
        Name: Well in Primitive Tribe
        Location:  Primitive Tribe
        Description:   See above

        Log:


           Created:

           Updated:
*/

/* Include Files */

#define SCRIPT_REALNAME "tribei1"
#include "../headers/define.h"

#define NAME                    SCRIPT_TRIBEI1

#include "../headers/command.h"

procedure start;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure use_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;


#define     LVAR_WELL_FIXED      (4)
#define     LVAR_Noticed_Broken  (5)

procedure start begin
end

procedure destroy_p_proc
begin

end

procedure use_skill_on_p_proc begin
  script_overrides;
end

procedure use_p_proc
begin
   if (global_var(GVAR_FIXTRIBE_WELL) < 4) then begin
      if (global_var(GVAR_FIXTRIBE_WELL) >= 2) then
        display_msg(mstr(104));
      else
        display_msg(mstr(102));
      if ( not(local_var(LVAR_Noticed_Broken)) and (global_var(GVAR_FIXTRIBE_WELL) == 0) ) then
         set_local_var(LVAR_Noticed_Broken,1);
   end else begin
      display_msg(mstr(103));
   end
end

procedure use_obj_on_p_proc
begin
   variable Obj;
   variable Obj2;
   variable Remove;
   Obj := dude_item(PID_ROPE);
   Obj2 := dude_item(PID_BUCKET);
   script_overrides;

   /*if (local_var(LVAR_Noticed_Broken) == 1) then begin
      if (obj_pid(obj_being_used_with) == PID_ROPE) then begin
         set_global_var(GVAR_FIXTRIBE_WELL,2);
         float_msg(self_obj, mstr(100), FLOAT_MSG_YELLOW);
         Remove := rm_mult_objs_from_inven(dude_obj, Obj, 1 );
         destroy_object(Obj);
         set_global_var(GVAR_FIXTRIBE_WELL,3);
         set_local_var(LVAR_Noticed_Broken,2);
      end
   end else if (local_var(LVAR_Noticed_Broken) == 2) then begin
      if (obj_pid(obj_being_used_with) == PID_BUCKET) then begin
    	   float_msg(self_obj, mstr(101), FLOAT_MSG_YELLOW);
    	   set_local_var(LVAR_WELL_FIXED,1);
    	   Remove := rm_mult_objs_from_inven(dude_obj, Obj2, 1 );
    	   destroy_object(Obj2);
    	   set_global_var(GVAR_FIXTRIBE_WELL,4);
    	   display_msg(message_str(SCRIPT_TRIBEC2, 1000));
         give_xp(EXP_TRIBE_WELL_GOOD);
         inc_general_rep(REP_TOWN_TRIBE_WELL);
         set_global_var(GVAR_FIXTRIBE_WELL,6);
      end
   end else begin*/
      if ( (local_var(LVAR_Noticed_Broken) == 1) or (global_var(GVAR_FIXTRIBE_WELL) == 1) ) then begin
         if (obj_pid(obj_being_used_with) == PID_ROPE) then begin
          set_global_var(GVAR_FIXTRIBE_WELL,2);
          float_msg(self_obj, mstr(100), FLOAT_MSG_YELLOW);
          Remove := rm_mult_objs_from_inven(dude_obj, Obj, 1 );
          destroy_object(Obj);
          if (local_var(LVAR_Noticed_Broken) == 1) then
            set_local_var(LVAR_Noticed_Broken,2);
         end
      end else if ( ((local_var(LVAR_Noticed_Broken) == 2) or ((global_var(GVAR_FIXTRIBE_WELL) == 2) or (global_var(GVAR_FIXTRIBE_WELL) == 3))) and (local_var(LVAR_WELL_FIXED) == 0) ) then begin
         if (obj_pid(obj_being_used_with) == PID_BUCKET) then begin
 	       float_msg(self_obj, mstr(101), FLOAT_MSG_YELLOW);
 	       set_local_var(LVAR_WELL_FIXED,1);
 	       Remove := rm_mult_objs_from_inven(dude_obj, Obj2, 1 );
 	       destroy_object(Obj2);

 	       if (local_var(LVAR_Noticed_Broken) == 2) then
 	         set_global_var(GVAR_FIXTRIBE_WELL,5);
 	       else
 	         set_global_var(GVAR_FIXTRIBE_WELL,4);
         end
      end
   //end
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(200));
end

/* The player will see more indepth descriptions from this procedure. They are actively
   looking at the critter and want more information. Things like names can be added here
   if the critter is known to the player. */
procedure description_p_proc begin
   script_overrides;

   if ( not(local_var(LVAR_Noticed_Broken)) and (global_var(GVAR_FIXTRIBE_WELL) == 0) ) then
     set_local_var(LVAR_Noticed_Broken,1);

   if (global_var(GVAR_FIXTRIBE_WELL) < 4) then begin
      if (dude_perception >= 6) then begin
         if ( not(local_var(LVAR_Noticed_Broken)) and (global_var(GVAR_FIXTRIBE_WELL) == 0) ) then
            set_local_var(LVAR_Noticed_Broken,1);
         display_msg(mstr(202));
      end else begin
         display_msg(mstr(201));
      end
   end else begin
      display_msg(mstr(203));
   end

end
