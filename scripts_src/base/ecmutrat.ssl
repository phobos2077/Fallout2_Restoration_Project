/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Generic Lesser Rat
        Location: Arroyo
        Description: Generic lesser rat when you need a small, not very strong rat.

        Log:

           Created: December 02, 1997

           Updated:
*/

/* Include Files */

#define SCRIPT_REALNAME "ecmutrat"
#include "../headers/define.h"
//#include "../headers/<TownName.h>"

#define NAME                    SCRIPT_ZCLRAT

#include "../headers/command.h"
//#include "../headers/modreact.h"

#define POISON_MIN              (1)
#define POISON_MAX              (6)
#define RAD_MIN                 (2)
#define RAD_MAX                 (10)

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure combat_p_proc;

/* Local variables which do not need to be saved between map changes. */
variable pissed:=false;

procedure start begin
end

procedure timed_event_p_proc begin
   if ((pissed == false) and ((critter_state(self_obj) bwand DAM_KNOCKED_OUT) == FALSE)) then begin
      reg_anim_clear(self_obj);
      reg_anim_begin();
         self_walk_to_tile(tile_num_in_direction(self_tile,random(0,5),random(1,3)));
      reg_anim_end();
   end
   add_timer_event(self_obj,game_ticks(random(3,5)),0);
end

procedure combat_p_proc begin
   if (fixed_param == COMBAT_SUBTYPE_HIT_SUCCEEDED) then begin
       if (target_obj == dude_obj) then begin
           poison(target_obj,random(POISON_MIN,POISON_MAX));
           radiation_inc(target_obj,random(RAD_MIN,RAD_MAX));
       end
   end
end

procedure critter_p_proc begin
   // the rat attacks if it sees the player
   if (self_can_see_dude) then begin
         pissed := true;
         attack(dude_obj);
   end
end

procedure destroy_p_proc begin
end

procedure damage_p_proc begin
   if (pissed == false) then begin
      pissed := true;
      attack(dude_obj);
   end
end

procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure description_p_proc begin
end

procedure use_obj_on_p_proc begin
end

procedure use_skill_on_p_proc begin
   if (action_being_used == SKILL_STEAL) then
      script_overrides;
end

procedure map_enter_p_proc begin
   set_self_team(TEAM_MUTATED_RAT);
   set_self_ai(AI_MUTATED_RAT);
   add_timer_event(self_obj,game_ticks(random(1,5)),0);
end
