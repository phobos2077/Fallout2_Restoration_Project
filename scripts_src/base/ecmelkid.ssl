/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name:
        Location:
        Description:

        Log:
           Please note any changes that have been made to the file in Updated. Then comment
           the code which you have changed/altered/commented out. Please, do not delete any
           code which was written.

           Created:

           Updated:
*/

/* Include Files */

/* Note, the Following Lines need to be in this order so that
   the script will be compilable. The define Name is referenced
   in a module from define.h and used in command.h. Please do
   not change the ordering.
        -rwh2   11/13/97
*/
#define SCRIPT_REALNAME "ecmelkid"
#include "../headers/define.h"
//#include "../headers/<TownName.h>"

#define NAME                    SCRIPT_ECMELKID
#define TOWN_REP_VAR            GVAR_TOWN_REP_THE_DEN

#include "../headers/command.h"
#include "../headers/base.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

procedure Node001;

#define LVAR_Message                      (0)
#define LVAR_Hostile                      (1)
#define LVAR_Home_Tile                    (2)

procedure start begin
end

procedure timed_event_p_proc begin
   if (combat_is_initialized == false) then begin
      if (anim_busy(self_obj) == false) then begin
         if (self_can_see_dude) then begin
            if (local_var(LVAR_Hostile) == false) then begin
               self_look_at_dude;
            end
         end else if (tile_distance(self_tile, local_var(LVAR_Home_Tile)) > 12) then begin
            self_run_to_tile(tile_num_in_direction(self_tile, rotation_to_tile(self_tile, local_var(LVAR_Home_Tile)), random(5, 10)));
         end else begin
            self_run_to_tile(tile_num_in_direction(self_tile, random(0, 5), random(5, 10)));
         end
      end
   end
   flush_add_timer_event_sec(self_obj, 1, 1);
end

procedure map_enter_p_proc begin
   if (map_first_run) then begin
      set_local_var(LVAR_Home_Tile, self_tile);
      set_self_team(TEAM_REDDING);
      set_self_ai(AI_CHILD);
   end
   flush_add_timer_event_sec(self_obj, 1, 1);
end

procedure critter_p_proc begin
   if (self_can_see_dude) then begin
      if (local_var(LVAR_Hostile) != 0) then begin
         self_attack_dude;
      end
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_local_var(LVAR_Hostile, true);
      self_attack_dude;
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      set_local_var(LVAR_Hostile, true);
      self_attack_dude;
   end
end

procedure talk_p_proc begin
   call Node001;
end

procedure destroy_p_proc begin
   /*if (source_obj == dude_obj) then begin
      inc_childkiller
   end*/
   inc_good_critter //edit by killap
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(100 + (local_var(LVAR_Message) > 0));
end

procedure description_p_proc begin
   script_overrides;
   display_mstr(150);
end

procedure Node998 begin
end

procedure Node999 begin
end

procedure Node001 begin
   floater(200 + local_var(LVAR_Message));
   if (local_var(LVAR_Message) < 7) then begin
      inc_local_var(LVAR_Message);
   end
end
