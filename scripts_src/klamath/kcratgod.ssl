/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Klamath Rat God
        Location: Klamath
        Description: This is a special version of generic rat zclrat which sets a global on death

        Log:

           Created: August 6, 1998

           Updated:
*/

/* Include Files */

#define SCRIPT_REALNAME "kcratgod"
#include "../headers/define.h"
//#include "../headers/<TownName.h>"

#define NAME                    SCRIPT_KCRATGOD

#include "../headers/command.h"
#include "../headers/klamath.h"
//#include "../headers/modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;

#define LVAR_seen                 (0)

/* Local variables which do not need to be saved between map changes. */
variable pissed:=false;

procedure start begin
end

procedure timed_event_p_proc begin
/*
   if ((pissed == false) and ((critter_state(self_obj) bwand DAM_KNOCKED_OUT) == FALSE)) then begin
      reg_anim_clear(self_obj);
      reg_anim_begin();
         self_walk_to_tile(tile_num_in_direction(self_tile,random(0,5),random(1,3)));
      reg_anim_end();
   end
   add_timer_event(self_obj,game_ticks(random(3,5)),0);
*/
end

procedure critter_p_proc begin
   // the rat attacks if it sees the player
   if (self_can_see_dude) then begin
      if ((pissed==false)) then begin
         pissed := true;
         attack(dude_obj);
      end
   end else
      pissed := false;
end

procedure destroy_p_proc begin
   //added check by killap - expansion
   if (global_var(GVAR_QUEST_RAT_GOD) < RAT_GOD_SUCCESS) then begin
      set_global_var(GVAR_QUEST_RAT_GOD, RAT_GOD_SUCCESS);
      display_msg(mstr(103));
      give_xp(EXP_KC_KILL_RAT_GOD);
      KC_REP_ADJUST(5)
      inc_general_rep(REP_BONUS_KC_KILL_RAT_GOD);
   end
end

procedure damage_p_proc begin
   if (pissed == false) then begin
      pissed := true;
      attack(dude_obj);
   end
end

procedure look_at_p_proc begin
   script_overrides;
   if (local_var(LVAR_seen) == 0) then begin
      set_local_var(LVAR_seen,1);
      display_msg(mstr(100));
   end
   else begin
      display_msg(mstr(101));
   end
end

procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(102));
end

procedure use_obj_on_p_proc begin
end

procedure use_skill_on_p_proc begin
   if (action_being_used == SKILL_STEAL) then
      script_overrides;
end

procedure map_enter_p_proc begin
   set_self_team(TEAM_RAT);
   set_self_ai(AI_RAT_GOD);
   // added by killap - expansion
   if (global_var(GVAR_QUEST_RAT_GOD) == RAT_GOD_SUCCESS) then begin
      destroy_object(self_obj);
   end

   //add_timer_event(self_obj,game_ticks(random(1,5)),0);
end
