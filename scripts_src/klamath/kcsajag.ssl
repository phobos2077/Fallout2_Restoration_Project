/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Sajag
        Location: Klamath
        Description:

        Note: Currently this script cannot be loaded by the scripting tool.

        Log:
           Please note any changes that have been made to the file in Updated. Then comment
           the code which you have changed/altered/commented out. Please, do not delete any
           code which was written.

           Created: January 14, 1998
           Need to add code to check player inventory and remove 5 coins (use $ for money)

           Updated:
*/

/* Include Files */

/* Note, the Following Lines need to be in this order so that
   the script will be compilable. The define Name is referenced
   in a module from define.h and used in command.h. Please do
   not change the ordering.
        -rwh2   11/13/97
*/
#define SCRIPT_REALNAME "kcsajag"
#include "../headers/define.h"
#include "../headers/klamath.h"
#include "../headers/kladwtn.h"
#include "../headers/den.h" //added by killap

#define NAME                    SCRIPT_KCSAJAG
#define TOWN_REP_VAR            (GVAR_TOWN_REP_KLAMATH)
#define ROOM                    15712

#include "../headers/command.h"
#include "../headers/modreact.h"

#define Vault_Known             (1)     // Temp Until get command from Jesse
#define Visited_City            (1)     // Temp Until get command from Jesse

#define rep_check_pass town_rep_better_than(5)

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure sajagbarter;
procedure discount;
procedure addbeer;
procedure push_p_proc;

/* Script Specific Procedure Calls */
procedure Node904;
procedure Node905;
procedure Node910;
procedure Node920;
procedure Node930;
procedure Node940;
procedure Node950;
procedure Node960;
procedure Node970;
procedure Node990;
procedure Node995;
procedure Node996;
procedure Node997;
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending


// The next lines are added in by the Designer Tool.
// Do NOT add in any lines here.
//~~~~~~~~~~~~~~~~ DESIGNER TOOL STARTS HERE

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node029;

//~~~~~~~~~~~~~~~~ DESIGN TOOL ENDS HERE
// The Following lines are for anything that is not needed to be
// seen by the design Tool


/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)
#define LVAR_910_before                 (7)
#define LVAR_920_before                 (8)
#define LVAR_attempted_barter           (9)
#define LVAR_10_before                 (10)
#define LVAR_Max_Rep                   (11)

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */


/* Local variables which do not need to be saved between map changes. */
variable Only_Once:=0;
variable tr;
variable item;
variable sajag_weapon;

import variable klam_sajag_box_obj;

procedure start begin
end

/* This procedure will get called each time that the map is first entered. It will
   set up the Team number and AI packet for this critter. This will override the
   default from the prototype, and needs to be set in scripts. */
procedure map_enter_p_proc begin
   Only_Once:=0;
   set_self_team(TEAM_KLAMATH_CROOKS);
   set_self_ai(AI_THUG);
   sajag_weapon:=PID_CLUB;
end


/* Every heartbeat that the critter gets, this procedure will be called. Anything from
   Movement to attacking the player on sight can be placed in here.*/
procedure critter_p_proc begin

/* If the critter is mad at the player for any reason, it will attack and remember to attack
   the player should the game be saved and loaded repeatedly. Additionally, if any special
   actions need to be taken by the critter based on previous combat, the critter will remember
   this as well. */

   if ((local_var(LVAR_Hostile) == 2) and (self_can_see_dude)) then begin
       set_local_var(LVAR_Hostile,1);
       attack(dude_obj);
   end

end

/* Whenever the critter takes damage of any type, this procedure will be called. Things
   like setting ENEMY_ and LVAR_Personal_Enemy can be set here. */
procedure damage_p_proc begin

/* If the player causes damage to this critter, then he will instantly consider the player
   his personal enemy. In Critter_Proc or through dialog, actions will be taken against
   the player for his evil acts. */
   if (source_obj == dude_obj) then begin
       set_local_var(LVAR_Personal_Enemy,1);
       set_global_var(GVAR_ENEMY_KLAMATH,1);
   end

end

/* Any time that the player is caught stealing from this critter, Pickup_proc will be called.
   In here, various things can happen. The most common response is instant hostility which
   will be remembered. */
procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
       set_local_var(LVAR_Hostile,2);
   end
end

/* The dialog system is setup and prepares the player to talk to this NPC. Where To Go
   written by designers are placed in here. Additionally, Reactions are generated and
   stored which affects player interactions. */
procedure talk_p_proc begin
   script_overrides;
   GetReaction;

   move_obj_inven_to_obj(klam_sajag_box_obj,self_obj);

   // CHANGE -nbk
   if ((REP_ENEMY_KLAMATH) or (local_var(LVAR_Personal_Enemy) == 1)) then begin
       //call Node019; --comment out by killap
       call Node998;
   end

   else if (global_var(GVAR_STILL_STATUS) == STILL_BETRAY) then begin
   //else if (map_var(MVAR_Still_Betray) == 1) then begin
      ndebug("WHERE_TO_GO_1");
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
         call Node017;
      gSay_End;
      end_dialogue;
   end
   else if ( (global_var(GVAR_STILL_STATUS) == STILL_ACCEPT) or (global_var(GVAR_STILL_STATUS) == STILL_SUCCESS) or (global_var(GVAR_STILL_STATUS) == STILL_FAILURE) ) then begin
   //else if ( (map_var(MVAR_Still_Accept) == 1) or (global_var(GVAR_STILL_SUCCESS) == 1) or (global_var(GVAR_STILL_FAILURE) == 1) ) then begin
      ndebug("WHERE_TO_GO_2");
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
         if (local_var(LVAR_10_before) == 0) then begin
            set_local_var(LVAR_10_before,1);
            call Node010;
         end
         else begin
            call Node003;
         end
      gSay_End;
      end_dialogue;
   end
   else if (local_var(LVAR_Herebefore) == 0) then begin
      ndebug("WHERE_TO_GO_3");
//else if ((local_var(LVAR_Herebefore) == 0) and (get_critter_stat(dude_obj,STAT_iq) <= (0-LOW_IQ))) then begin
       start_gdialog(NAME,self_obj,4,-1,-1);
       gSay_Start;
           call Node001;
       gSay_End;
       end_dialogue;
       set_local_var(LVAR_Herebefore,1);
   end
   else begin
      ndebug("WHERE_TO_GO_4");
       start_gdialog(NAME,self_obj,4,-1,-1);
       gSay_Start;
           call Node003;
       gSay_End;
       end_dialogue;
   end
   /*
   else if (local_var(LVAR_Give) == 1) then begin
       start_gdialog(NAME,self_obj,4,-1,-1);
       gSay_Start;
           call Node012;
       gSay_End;
       end_dialogue;
   end

   else if (local_var(LVAR_Nogive) == 1) then begin
       start_gdialog(NAME,self_obj,4,-1,-1);
       gSay_Start;
           call Node011;
       gSay_End;
       end_dialogue;
   end
   */
/*
   else if ((dude_iq <= (0-LOW_IQ))) then begin
       start_gdialog(NAME,self_obj,4,-1,-1);
       gSay_Start;
           call Node018;
       gSay_End;
       end_dialogue;
   end
*/
   move_obj_inven_to_obj(self_obj,klam_sajag_box_obj);

end

/* This procedure gets called only on the death of this NPC. Special things like
   incrementing the death count for reputation purposes and Enemy Counters are placed
   in here. */
procedure destroy_p_proc begin

/* Increment the aligned critter counter*/
   move_obj_inven_to_obj(klam_sajag_box_obj,self_obj);

   inc_good_critter

/* Set global_variable for Enemy status*/
end

/* Look_at_p_proc gets called any time that the player passes the cursor over any object.
   This should only hold the most cursory of glances for the player. */
procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

/* The player will see more indepth descriptions from this procedure. They are actively
   looking at the critter and want more information. Things like names can be added here
   if the critter is known to the player. */
procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(101));
end

procedure push_p_proc begin
   script_overrides;
end

/* Any time a skill is used on a critter this call is made. This can be to give examinations
   for things like Doctor skill or messages for various other skills. */
procedure use_skill_on_p_proc begin
end

procedure combat_p_proc begin
   if (self_item_count(sajag_weapon) == 0) then begin
      item := create_object(sajag_weapon,0,0);
      add_obj_to_inven(self_obj, item);
   end
end

procedure sajagbarter begin
   set_local_var(LVAR_attempted_barter,1);

   gdialog_mod_barter(0);

   call Node003;
end

procedure discount begin
   set_local_var(LVAR_attempted_barter,1);

   gdialog_mod_barter(-20);

   call Node003;
end

procedure addbeer begin
   item:=create_object(PID_BEER,0,0);
   add_obj_to_inven(dude_obj,item);
end

procedure Node904 begin
   Reply(140);
   NOption(141,Node007,004);
   NOption(142,Node009,004);
   NOption(143,Node999,004);
end

procedure Node905 begin
set_map_var(MVAR_Round_Of_Drinks,1); //signal bar patrons round of drinks bought
   Reply(150);
   NOption(151,Node007,004);
   NOption(152,Node009,004);
   NOption(153,Node999,004);
end

procedure Node910 begin
   if (local_var(LVAR_910_before) == 0) then begin
      set_local_var(LVAR_910_before,1);
      tr:=global_var(GVAR_TOWN_REP_KLAMATH);
      set_global_var(GVAR_TOWN_REP_KLAMATH,tr-2);
   end
   call Node012;
end

procedure Node920 begin
   if (local_var(LVAR_920_before) == 0) then begin
      set_local_var(LVAR_920_before,1);
      tr:=global_var(GVAR_TOWN_REP_KLAMATH);
      set_global_var(GVAR_TOWN_REP_KLAMATH,tr-4);
   end
   call Node012;
end

procedure Node930 begin
//call barter
   call Node003;
end

procedure Node940 begin
//Roll Speech if successful goto 22 else goto 23
   if (is_success(roll_vs_skill(dude_obj, SKILL_SPEECH, 0))) then
       call Node022;
   else
       call Node023;
end

procedure Node950 begin
   if (dude_caps >= 20) then begin
      dude_caps_adjust(-20);
      critter_heal(dude_obj,(get_critter_stat(dude_obj,STAT_heal_rate)*4));//standard rate of healing/24 hours..Matt wants room to help healing
      gfade_out(600);
      move_to(dude_obj,ROOM,dude_elevation);
      game_time_advance(game_ticks(8*3600));//8 hours
      gfade_in(600);
   end
   else begin
      call Node006;
   end
end

procedure Node960 begin
   Reply(270);

   NOption(272,Node950,004);
   NOption(273,Node003,004);
end

procedure Node970 begin
   NMessage(271);
end

procedure Node990 begin
//if player money < 5 goto 13 and set nogive
//else goto 5 subtract 5 coins and set give
end

procedure Node995 begin
   if (dude_charisma >= 7) then begin
       TopReact;
   end
   else begin
       BottomReact;
   end
end

procedure Node996 begin
   BottomReact;
end

procedure Node997 begin
   if (dude_charisma >= 8) then
       call Node004;
   else
       call Node005;
end

/* Should the Player ever cause the NPC too much discomfort that he desires to attack the player,
   this call will be made. Essentially, it stores the Hostile vaule so that the critter remembers
   he was once hostile towards the player.*/
procedure Node998 begin
   set_local_var(LVAR_Hostile,2);
end

/* Anytime that there is a need for an ending to dialog, this node is to be called. It will just
   exit from the dialog system without any reprisals from the NPC. */
procedure Node999 begin
end

// Not lines are allowed to be added below here
// The Following lines are from the Design Tool
//~~~~~~~~~~~~~~~~ DESIGN TOOL STARTS HERE

procedure Node001 begin
   Reply(110);
   NLowOption(111,Node002);
   NLowOption(112,Node002);
   NOption(113,Node004,004);
   NOption(114,Node005,004);
   NOption(115,Node015,004);
   NOption(116,Node016,004);
end

procedure Node002 begin
   NMessage(120);
end

procedure Node003 begin
   if rep_check_pass then
      Reply(130);
   else
      Reply(131);

   NOption(132,Node004,004);
   NOption(133,Node005,004);
   NOption(134,Node015,004);
   NOption(135,Node016,004);
   NOption(136,Node999,004);
end

procedure Node004 begin
//money check
//[if <$5 in inventory then goto 6, else subtract $4 from PC and goto 904(was 4)]
   if (dude_caps >= 5) then begin
      dude_caps_adjust(-5);
      call addbeer;
      call Node904;
   end
   else begin
      call Node006;
   end
end

procedure Node005 begin
//money check
//[if <$30 in inventory then goto 6, else subtract $30 from PC and goto 905(was 5)]
   if (dude_caps >= 30) then begin
      dude_caps_adjust(-30);
      call addbeer;
      if (local_var(LVAR_Max_Rep) < 3) then begin
         set_local_var(LVAR_Max_Rep,local_var(LVAR_Max_Rep)+1);
         set_global_var(GVAR_TOWN_REP_KLAMATH, global_var(GVAR_TOWN_REP_KLAMATH)-1);
      end
      call Node905;
   end
   else begin
      call Node006;
   end
end

procedure Node006 begin
   if rep_check_pass then
      NMessage(160);
   else
      NMessage(161);
end

procedure Node007 begin
   if rep_check_pass then
      Reply(170);
   else
      Reply(171);

   NOption(172,Node008,004);
   NOption(173,Node008,006);
   NOption(174,Node002,004);
end

procedure Node008 begin
   if rep_check_pass then
      Reply(180);
   else
      Reply(181);

   NOption(182,Node004,004);
   NOption(183,Node005,004);
   NOption(184,Node009,004);
   NOption(185,Node999,004);
end

procedure Node009 begin
   if rep_check_pass then
      Reply(190);
   else
      Reply(191);

   NOption(192,Node020,004);
   if not(vic_free) then //added by killap
      NOption(193,Node021,004);
   NOption(194,Node018,004);
   NOption(195,Node019,004);
   NOption(196,Node015,004);
   //TOOK OUT NEXT TWO LINES...WAS CRASHING
   //IN DIALOGUE -TOO MANY RESPONSES
   //NOption(197,Node029,004);
   //NOption(198,Node003,004);
   NOption(199,Node999,004);
end

procedure Node010 begin
   Reply(210);
   NOption(211,Node011,004);
   NOption(212,Node011,004);
   NOption(213,Node012,004);
   NOption(214,Node910,004); //define 910, 920 to reduce rep
   NOption(215,Node920,007);
end

procedure Node011 begin
   NMessage(220);
end

procedure Node012 begin
   if rep_check_pass then begin
      Reply(230);
      NOption(232,Node013,004);
      NOption(233,Node011,004);
      NOption(235,Node014,006);
   end
   else begin
      Reply(231);
      NOption(232,Node013,004);
      NOption(233,Node011,004);
      NOption(234,Node011,006);
   end
end

procedure Node013 begin
      set_global_var(GVAR_STILL_STATUS, STILL_BETRAY);
      //set_map_var(MVAR_Still_Betray,1);
      give_xp(EXP_KC_BETRAY_STILL); //killap's fix: changed to give_xp
      KC_REP_ADJUST(-8)
      inc_general_rep(REP_BONUS_KC_BETRAY_STILL);
      call addbeer;
      //add_mult_objs_to_inven(dude_obj,PID_BOTTLE_CAPS,50);
      dude_caps_adjust(50);
      Reply(240);
      NOption(241,Node004,004);
      NOption(242,Node005,004);
      NOption(243,Node009,004);
      NOption(244,Node999,004);
end

procedure Node014 begin
      Reply(250);
      NOption(251,Node013,004);
end

procedure Node015 begin
      Reply(260);
      NOption(261,sajagbarter,004); //need node 930 with call to barter and then node003
      NOption(262,Node009,004);
      NOption(263,Node940,004); //need node 940 with speech check
end

procedure Node016 begin
   if rep_check_pass then
      call Node960;
   else
      call Node970;
end

procedure Node017 begin
   if rep_check_pass then begin
      Reply(280);
      NOption(282,Node003,004);
      NOption(284,Node003,004);
   end
   else begin
      Reply(281);
      NOption(283,Node003,004);
      NOption(284,Node003,004);
   end
end

procedure Node018 begin
   //added by killap - expansion
   variable msg;
   variable comma_needed := false;
   variable count := 0;

   msg := mstr(290);

   if ((global_var(GVAR_KLAMATH_FIND_RUSTLERS) < FIND_RUSTLERS_SUCCESS) and (global_var(GVAR_DUNTON_DEAD) == 0) and (global_var(GVAR_SCARE_DUNTONS) == 0)) then begin
      msg += mstr(2901);
      comma_needed := true;
      count += 1;
   end

   if (global_var(GVAR_QUEST_RAT_GOD) < RAT_GOD_SUCCESS) then begin
      if (comma_needed) then
         msg += ", ";
      else
        comma_needed := true;
      msg += mstr(2902);
      count += 1;
   end

   if not(map_is_known(MAP_KLAMATH_CANYON)) then begin
      if (comma_needed) then
         msg += ", ";
      else
        comma_needed := true;
      msg += mstr(2903);
      count += 1;
   end

   if (global_var(GVAR_SMILEY_STATUS) < SMILEY_RETURNED) then begin
      if (comma_needed) then
         msg += ", ";
      msg += mstr(2904);
      count += 1;
   end

   msg += mstr(2905);

   if (count == 0) then
      msg := mstr(2900);
   //end added

   Reply(msg);
   if ((global_var(GVAR_KLAMATH_FIND_RUSTLERS) < FIND_RUSTLERS_SUCCESS) and (global_var(GVAR_DUNTON_DEAD) == 0) and (global_var(GVAR_SCARE_DUNTONS) == 0)) then
      NOption(291,Node024,004); //brahmin mutilating
   if (global_var(GVAR_QUEST_RAT_GOD) < RAT_GOD_SUCCESS) then
      NOption(292,Node025,004); //rat problem
   if not(map_is_known(MAP_KLAMATH_CANYON)) then
      NOption(293,Node026,004); //walking spirits
   if (global_var(GVAR_SMILEY_STATUS) < SMILEY_RETURNED) then
      NOption(294,Node027,004); //missing trapper
   NOption(295,Node009,004);
   NOption(296,Node003,004);
end

procedure Node019 begin
   Reply(300);
   NOption(301,Node009,004);
   NOption(302,Node003,004);
   NOption(303,Node999,004);
end

procedure Node020 begin
   mark_den_on_map
   Reply(310);
   NOption(301,Node009,004);
   NOption(302,Node003,004);
   NOption(303,Node999,004);
end

procedure Node021 begin
   Reply(320);
   NOption(301,Node009,004);
   NOption(302,Node003,004);
   NOption(303,Node999,004);
end

procedure Node022 begin
   if (dude_is_male) then begin
      NMessage(330);
      call discount;
      //barter (20% bonus), goto 3
   end
   else begin
      NMessage(331);
      call discount;
      //barter (20% bonus), goto 3
   end
end

procedure Node023 begin
   Reply(340);
   NOption(341,Node015,004);
   NOption(342,Node999,004);
   NOption(343,Node022,007);
end

procedure Node024 begin
   Reply(350);
   NOption(381,Node018,004);
   NOption(382,Node003,004);
end

procedure Node025 begin
   Reply(360);
   NOption(381,Node018,004);
   NOption(382,Node003,004);
end

procedure Node026 begin
   Reply(370);
   NOption(381,Node018,004);
   NOption(382,Node003,004);
end

procedure Node027 begin
   Reply(380);
   NOption(381,Node018,004);
   NOption(382,Node003,004);
end

procedure Node029 begin
   Reply(390);
   NOption(391,Node009,004);
   NOption(392,Node003,004);
end
//xxxxxxxxxxxxxxxxxxxx
