/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Vault City Main Gate Guard
        Location: Vault City
        Description:

        Log:
           Please note any changes that have been made to the file in Updated. Then comment
           the code which you have changed/altered/commented out. Please, do not delete any
           code which was written.

           Created:

           Updated:
*/

/* Include Files */

/* Note, the Following Lines need to be in this order so that
   the script will be compilable. The define Name is referenced
   in a module from define.h and used in command.h. Please do
   not change the ordering.
        -rwh2   11/13/97
*/
#define SCRIPT_REALNAME "vcgatgrd"
#include "../headers/define.h"
#include "../headers/vctydwtn.h"

#define NAME                    SCRIPT_VCGATGRD
#define TOWN_REP_VAR            (GVAR_TOWN_REP_VAULT_CITY)

#include "../headers/command.h"
#include "../headers/modreact.h"



/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending


// The next lines are added in by the Designer Tool.
// Do NOT add in any lines here.
//~~~~~~~~~~~~~~~~ DESIGNER TOOL STARTS HERE

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node021a;
procedure Node021b;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node028a;
procedure Node029;
procedure Node030;
procedure Node030a;
procedure Node031;
procedure Node031a;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node035a;
procedure Node036;
procedure Node037;

procedure Caught_Touching_Door;

//~~~~~~~~~~~~~~~~ DESIGN TOOL ENDS HERE
// The Following lines are for anything that is not needed to be
// seen by the design Tool


/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)
#define LVAR_Front_Gate                 (7)
#define LVAR_Home_Tile                  (8)
#define LVAR_Created                    (9)

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */
import variable Entrance_Door_Ptr;


/* Local variables which do not need to be saved between map changes. */
variable Only_Once:=0;
variable From_Node15:=0;
variable From_Node17:=0;
variable From_Node18:=0;
variable From_Node19:=0;
variable Allow_Walk:=1;
variable Target_Tile:=0;
variable Open_Mutex := 0;
variable Close_Mutex := 0;
variable Do_Door := 0;

procedure start begin
end

/* This procedure will get called each time that the map is first entered. It will
   set up the Team number and AI packet for this critter. This will override the
   default from the prototype, and needs to be set in scripts. */
procedure map_enter_p_proc begin
   rm_timer_event( self_obj );
   Only_Once:=0;
   From_Node15:=0;
   From_Node17:=0;
   From_Node18:=0;
   From_Node19:=0;
   Do_Door := 0;
   Allow_Walk:=1;

   set_self_team(TEAM_VAULT_CITIZENS);
   set_self_ai(AI_VAULT_GUARD);

   if (local_var(LVAR_Front_Gate) == 0) then begin
       if (tile_distance(self_tile,28917) < 10) then           // Front Gate of Downtown
           set_local_var(LVAR_Front_Gate,1);
       else
           set_local_var(LVAR_Front_Gate,-1);
   end

   if (local_var(LVAR_Home_Tile) == 0) then begin
       set_local_var(LVAR_Home_Tile,self_tile);
   end
   else begin
      move_to( self_obj, local_var( LVAR_Home_Tile ), 0 );
      self_rotate(2);
   end

   if( local_var( LVAR_Created ) == 0 ) then begin
      inc_map_var( MVAR_Gate_Guard_Count );
      set_local_var( LVAR_Created, 1 );
   end
end

/* Every heartbeat that the critter gets, this procedure will be called. Anything from
   Movement to attacking the player on sight can be placed in here.*/
procedure critter_p_proc begin

/* If the critter is mad at the player for any reason, it will attack and remember to attack
   the player should the game be saved and loaded repeatedly. Additionally, if any special
   actions need to be taken by the critter based on previous combat, the critter will remember
   this as well. */
/*
   if ( ( not( obj_is_open( Entrance_Door_Ptr ) ) ) and
        ( local_var(LVAR_Open_Gate) == 1 ) and
        ( Open_Mutex == 0 ) ) then begin
       Open_Mutex := 1;
       //animate_move_to_tile(28918);
       //animate_rotation(0);
       obj_unlock(Entrance_Door_Ptr);
       obj_open(Entrance_Door_Ptr);
       set_local_var(LVAR_Open_Gate,2);
       //animate_move_to_tile( local_var( LVAR_Home_Tile ) );
       //add_timer_event(self_obj,game_ticks(1),2);
       add_timer_event(self_obj,game_ticks(30),1);
       Open_Mutex := 0;
   end

   //if ( (local_var(LVAR_Open_Gate) == 3) and (tile_num(self_obj) != 28918)) then begin
       //animate_move_to_tile(28918);
   //end

   else if ( ( obj_is_open( Entrance_Door_Ptr ) ) and
             (local_var(LVAR_Open_Gate) == 3) and
             //(tile_num(self_obj) == 28918) and
             ( Close_Mutex == 0 ) ) then begin
       Close_Mutex := 1;
       //animate_move_to_tile(28918);
       //animate_rotation(0);
       obj_unlock(Entrance_Door_Ptr);
       obj_close(Entrance_Door_Ptr);
       set_local_var(LVAR_Open_Gate,0);
       //animate_move_to_tile( local_var( LVAR_Home_Tile ) );
       //add_timer_event(self_obj,game_ticks(1),2);
       Close_Mutex := 0;
   end
*/

   if ( ( (local_var(LVAR_Hostile) == 2) or ( global_var( GVAR_ENEMY_VAULT_CITY ) == 1 ) ) and (self_can_see_dude)) then begin
       set_local_var(LVAR_Hostile,1);
       attack(dude_obj);
   end
   else if( map_var( MVAR_Guard_Alert ) == 1 ) then begin
       set_map_var( MVAR_Guard_Alert, 0 );
       set_local_var(LVAR_Hostile,1);
       anim_move_to_point_rate( dude_tile, 5 )
       attack(dude_obj);
   end

   if (map_var(MVAR_Picking_Front_Gate) != Front_Gate_None) then begin
       call Caught_Touching_Door;
   end
/*
   else begin
       if (local_var(LVAR_Home_Tile) == 29321) then begin
            if(Allow_Walk == 1) then begin
                if ((self_can_see_dude) and (self_tile != 28918)) then begin
                    Allow_Walk:=0;
                    Target_Tile:=28918;
                    self_walk_to_tile(Target_Tile);
                end
                else if((not(self_can_see_dude)) and (self_tile != local_var(LVAR_Home_Tile))) then begin
                    Allow_Walk:=0;
                    Target_Tile:=local_var(LVAR_Home_Tile);
                    self_walk_to_tile(Target_Tile);
                end
            end
            else if(Allow_Walk == 0) then begin
                if(self_tile == Target_Tile) then begin
                    if( (self_cur_rot != 2) ) then begin
                        add_timer_event(self_obj,game_ticks(1),2);
                        //animate_rotation(2);
                    end
                    else
                        Allow_Walk:=1;
                end
            end
       end
       else if (local_var(LVAR_Home_Tile) == 29315) then begin
            if(Allow_Walk == 1) then begin
                if ((self_can_see_dude) and (self_tile != 28916)) then begin
                    Allow_Walk:=0;
                    Target_Tile:=28916;
                    self_walk_to_tile(Target_Tile);
                end
                else if((not(self_can_see_dude)) and (self_tile != local_var(LVAR_Home_Tile))) then begin
                    Allow_Walk:=0;
                    Target_Tile:=local_var(LVAR_Home_Tile);
                    self_walk_to_tile(Target_Tile);
                end
            end
            else if(Allow_Walk == 0) then begin
                if(self_tile == Target_Tile) then begin
                    if( (self_cur_rot != 2) ) then begin
                        add_timer_event(self_obj,game_ticks(1),2);
                        //animate_rotation(2);
                    end
                    else
                        Allow_Walk:=1;
                end
            end
       end
   end
*/
end

/* Whenever the critter takes damage of any type, this procedure will be called. Things
   like setting ENEMY_ and LVAR_Personal_Enemy can be set here. */
procedure damage_p_proc begin

/* If the player causes damage to this critter, then he will instantly consider the player
   his personal enemy. In Critter_Proc or through dialog, actions will be taken against
   the player for his evil acts. */
   if (source_obj == dude_obj) then begin
      set_local_var(LVAR_Personal_Enemy,1);
      set_global_var( GVAR_ENEMY_VAULT_CITY, 1 );
      set_global_var( GVAR_VAULT_CITIZEN, CITIZEN_KICKED_OUT );
      set_global_var( GVAR_TOWN_REP_VAULT_CITY, (global_var(GVAR_TOWN_REP_VAULT_CITY) + REP_TOWN_KICKED_OUT ) );
      set_global_var( GVAR_VAULT_CITIZENSHIP, 0 );
   end
end

/* Any time that the player is caught stealing from this critter, Pickup_proc will be called.
   In here, various things can happen. The most common response is instant hostility which
   will be remembered. */
procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
       set_local_var(LVAR_Hostile,2);
   end
end

/* The dialog system is setup and prepares the player to talk to this NPC. Where To Go
   written by designers are placed in here. Additionally, Reactions are generated and
   stored which affects player interactions. */
procedure talk_p_proc begin
   variable Time;

   Time:=game_time_hour;
   Evil_Critter:=0;
   Slavery_Tolerant:=SLAVE_TOLERANT;
   Karma_Perception:=KARMA_PERCEPTION1;

   CheckKarma;

   GetReaction;

    if( Fallout2_enclave_destroyed ) then begin
        call Node012;
    end
    else if(global_var(GVAR_VAULT_CITIZEN) == CITIZEN_CAPTAIN_GUARD) then begin
        call Node004;
    end
    else if( (Marcus_Ptr != 0) and ( (global_var(GVAR_VAULT_CITIZEN) == CITIZEN_GUARD_BELIEVE_FAKE) or
                                     (global_var(GVAR_VAULT_CITIZENSHIP) == CITIZEN_TRUE) ) ) then begin
        call Node005;
    end
    else if( (Lenny_Ptr != 0) and (  (global_var(GVAR_VAULT_CITIZEN) == CITIZEN_GUARD_BELIEVE_FAKE) or
                                     (global_var(GVAR_VAULT_CITIZENSHIP) == CITIZEN_TRUE) ) ) then begin
        call Node006;
    end
    else if( (Marcus_Ptr != 0) ) then begin
        call Node007;
    end
    else if( (Lenny_Ptr != 0) ) then begin
        call Node008;
    end
    else if( (global_var(GVAR_VAULT_CITIZEN) == CITIZEN_GUARD_BELIEVE_FAKE) or (global_var(GVAR_VAULT_CITIZENSHIP) == CITIZEN_TRUE) ) then begin
        call Node009;
    end
    else if( (global_var(GVAR_VAULT_CITIZEN) == CITIZEN_KICKED_OUT) ) then begin
        call Node010;
    end
    else if( (dude_item_count(PID_DAY_PASS) ) and (global_var(GVAR_DAY_PASS_SHOWN) == 0) and (day) ) then begin
       start_gdialog(NAME,self_obj,4,-1,-1);
       gSay_Start;
           call Node028;
       gSay_End;
       end_dialogue;
    end
    else if( (dude_item_count(PID_DAY_PASS) ) and (global_var(GVAR_DAY_PASS_SHOWN) == 1) and (day) ) then begin
        call Node011;
    end
    else if( ( (dude_item_count(PID_DAY_PASS) ) or (global_var(GVAR_DAY_PASS_SHOWN) == 0) ) and (( game_time_hour >= 1800 ) or ( game_time_hour < 600 )) ) then begin
       start_gdialog(NAME,self_obj,4,-1,-1);
       gSay_Start;
           call Node031;
       gSay_End;
       end_dialogue;
    end
    else if( (global_var(GVAR_VAULT_CITIZEN) == CITIZEN_SKEEVE_GIVEN_FAKE) or
             (global_var(GVAR_VAULT_CITIZEN) == CITIZEN_KNOWN_FAKE) ) then begin
       start_gdialog(NAME,self_obj,4,-1,-1);
       gSay_Start;
           call Node021;
       gSay_End;
       end_dialogue;
    end
    else if (local_var(LVAR_Herebefore) == 0) then begin
        set_local_var(LVAR_Herebefore,1);
        start_gdialog(NAME,self_obj,4,-1,-1);
        gSay_Start;
            call Node015;
        gSay_End;
        end_dialogue;
    end
    else if( dude_iq > 3 ) then begin
        call Node020;
    end
    else if( dude_iq < 4 ) then begin
        call Node010;
    end

   if( Do_Door == 1 ) then begin
        Do_Door := 0;
        obj_unlock( Entrance_Door_Ptr );
        obj_open( Entrance_Door_Ptr );
        rm_timer_event( Entrance_Door_Ptr );
        add_timer_event(Entrance_Door_Ptr,game_ticks(10),1);
   end
end

/* This procedure gets called only on the death of this NPC. Special things like
   incrementing the death count for reputation purposes and Enemy Counters are placed
   in here. */
procedure destroy_p_proc begin

   dec_map_var( MVAR_Gate_Guard_Count );

/* Increment the aligned critter counter*/
   inc_good_critter

/* Set global_variable for Enemy status*/
end

/* Look_at_p_proc gets called any time that the player passes the cursor over any object.
   This should only hold the most cursory of glances for the player. */
procedure look_at_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

/* The player will see more indepth descriptions from this procedure. They are actively
   looking at the critter and want more information. Things like names can be added here
   if the critter is known to the player. */
procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(101));
end

/* Any time a skill is used on a critter this call is made. This can be to give examinations
   for things like Doctor skill or messages for various other skills. */
procedure use_skill_on_p_proc begin
end

/* Should the Player ever cause the NPC too much discomfort that he desires to attack the player,
   this call will be made. Essentially, it stores the Hostile vaule so that the critter remembers
   he was once hostile towards the player.*/
procedure Node998 begin
   set_local_var(LVAR_Hostile,2);
end

/* Anytime that there is a need for an ending to dialog, this node is to be called. It will just
   exit from the dialog system without any reprisals from the NPC. */
procedure Node999 begin
end


// Not lines are allowed to be added below here
// The Following lines are from the Design Tool
//~~~~~~~~~~~~~~~~ DESIGN TOOL STARTS HERE

procedure Node001 begin
        floater(102);
end

procedure Node002 begin
        floater(103);

        call Node998;
end

procedure Node003 begin
        floater(104);
//        set_local_var(LVAR_Open_Gate,1);
        Do_Door := 1;
end

procedure Node004 begin
        floater( random(105, 108) );
//        set_local_var(LVAR_Open_Gate,1);
        Do_Door := 1;
end

procedure Node005 begin //marcus
   floater(110); // Seraph's Fix: changed '109' to '110'
//        set_local_var(LVAR_Open_Gate,3);
   obj_close( Entrance_Door_Ptr );
   obj_lock( Entrance_Door_Ptr );
end

procedure Node006 begin //lenny
   floater(109); // Seraph's Fix: changed '110' to '109'
//        set_local_var(LVAR_Open_Gate,3);
   obj_close( Entrance_Door_Ptr );
   obj_lock( Entrance_Door_Ptr );
end

procedure Node007 begin //marcus
   floater(112);  //killap's fix: changed '111' to '112'
   //set_local_var(LVAR_Open_Gate,3);
   obj_close( Entrance_Door_Ptr );
   obj_lock( Entrance_Door_Ptr );
end

procedure Node008 begin //lenny
   floater(111);  //killap's fix: changed '112' to '111'
//        set_local_var(LVAR_Open_Gate,3);
   obj_close( Entrance_Door_Ptr );
   obj_lock( Entrance_Door_Ptr );
end

procedure Node009 begin
        floater( random(113, 115) );
        //set_local_var(LVAR_Open_Gate,1);
        Do_Door := 1;
end

procedure Node010 begin
   floater( random(116, 119) );
   //set_local_var(LVAR_Open_Gate,3);
   obj_close( Entrance_Door_Ptr );
   obj_lock( Entrance_Door_Ptr );
end

procedure Node011 begin
        floater( random(120, 122) );
        //set_local_var(LVAR_Open_Gate,1);
        Do_Door := 1;
end

procedure Node012 begin
        floater( random(123, 128) );
        //set_local_var(LVAR_Open_Gate,1);
        Do_Door := 1;
end

procedure Node013 begin
   floater(130); // Seraph's Fix: changed '129' to '130'
   //set_local_var(LVAR_Open_Gate,3);
   obj_close( Entrance_Door_Ptr );
   obj_lock( Entrance_Door_Ptr );
end

procedure Node014 begin
   floater(129); // Seraph's Fix: changed '130' to '129'
   //set_local_var(LVAR_Open_Gate,3);
   obj_close( Entrance_Door_Ptr );
   obj_lock( Entrance_Door_Ptr );
end

procedure Node015 begin
        From_Node15 := 1;

        Reply(131);

        NLowOption(132, Node016);
        NLowOption(133, Node999);
        NOption(134, Node017, 004);
        NOption(135, Node999, 004);
end

procedure Node016 begin
        Reply(136);

        BLowOption(137, Node998);
        //NLowOption(137, Node999);
        NLowOption(138, Node999); //edit by killap
end

procedure Node017 begin
        From_Node17 := 1;

        if( From_Node15 == 1 ) then begin
                From_Node15 := 0;
                Reply(mstr(139) + " " + mstr(140) );
        end
        else
            Reply(140);

        NOption(141, Node018, 004);
        NOption(142, Node019, 004);
        NOption(143, Node999, 004);
end

procedure Node018 begin
        From_Node18 := 1;

        if( From_Node19 == 1 ) then begin
                From_Node19 := 0;
                Reply(mstr(144) + " " + mstr(145));
        end
        else
            Reply(144);

        if( From_Node17 == 1 ) then begin
                From_Node17 := 0;
                NOption(146, Node019, 004);
        end
        NOption(147, Node999, 004);
end

procedure Node019 begin
        From_Node19 := 1;

        if( From_Node18 == 1 ) then begin
                From_Node18 := 0;
                Reply(mstr(148) + " " + mstr(149));
        end
        else
                Reply(148);

       if( From_Node17 == 1 ) then begin
                From_Node17 := 0;
                NOption(150, Node018, 004);
        end
        NOption(151, Node999, 004);
end

procedure Node020 begin
        floater( random(152, 155) );
end

procedure Node021 begin
        Reply(156);

        NOption(157, Node017, 004);
        NOption(158, Node021a, 004);
        if( dude_item_count( PID_FAKE_CITIZENSHIP) > 0) then
                NOption(159, Node021b, 004);
end

procedure Node021a begin
        if( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_KNOWN_FAKE ) then
                call Node032;
        else
                call Node022;
end

procedure Node021b begin
        if( (has_skill(dude_obj, SKILL_SPEECH) > 74) or (dude_charisma > 7) ) then
                call Node023;
        else begin //--Edits by killap
                //call Node032; --comment out by killap
                if ( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_KNOWN_FAKE ) then
                    call Node032;
                else
                    call Node024;
        end
end

procedure Node022 begin
    Reply(160);

    NOption(161, Node024, 004);
    if( dude_item_count( PID_FAKE_CITIZENSHIP) > 0) then
        NOption(162, Node025, 004);
    NOption(163, Node033, 004);
end

procedure Node023 begin
    Reply(164);
    //set_local_var(LVAR_Open_Gate,1);
    Do_Door := 1;
    set_global_var(GVAR_VAULT_CITIZEN,CITIZEN_GUARD_BELIEVE_FAKE);

    NOption(165, Node999, 004);
end

procedure Node024 begin
    Reply(166);
    set_global_var(GVAR_VAULT_CITIZEN,CITIZEN_KNOWN_FAKE);

    NOption(167, Node999, 004);
end

procedure Node025 begin
    Reply(168);

    BOption(169, Node026, 004);
    NOption(170, Node027, 004);
    NOption(171, Node026, 004);
    if( (has_skill(dude_obj, SKILL_SPEECH) > 74) or (dude_charisma > 5) ) then
        NOption(172, Node027, 004);
end

procedure Node026 begin
    variable papers:=0;
    variable paperCount:=0;
    variable temp:=0;

    Reply(173);
    // Set Citizenship to KNOWN_FAKE and remove papers from inventory.
    set_global_var(GVAR_VAULT_CITIZEN,CITIZEN_KNOWN_FAKE);
    paperCount := dude_item_count(PID_FAKE_CITIZENSHIP);
    if( paperCount > 0 ) then begin
        papers := dude_item(PID_FAKE_CITIZENSHIP);
        temp := rm_mult_objs_from_inven(dude_obj, papers, paperCount );
        destroy_object(papers); //added by killap
    end

    BOption(174, Node998, 004);
    NOption(175, Node033, 004);
    NOption(176, Node999, 004);
end

procedure Node027 begin
    Reply(177);
    //set_local_var(LVAR_Open_Gate,1);
    Do_Door := 1;
    set_global_var(GVAR_VAULT_CITIZEN,CITIZEN_GUARD_BELIEVE_FAKE);

    NOption(178, Node999, 004);
    NOption(179, Node999, 004);
end

procedure Node028 begin
    Reply(180);

    NLowOption(209, Node030);
    NLowOption(210, Node999);
    NOption(181, Node030, 004);
    NOption(182, Node028a, 004);
    NOption(183, Node029, 004);
end

procedure Node028a begin
    if( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_KNOWN_FAKE ) then
        call Node032;
    else
        call Node022;
end

procedure Node029 begin
    Reply(184);

    NOption(185, Node999, 004);
    NOption(186, Node999, 004);
end

procedure Node030 begin
    if( dude_is_stupid ) then
       Reply( mstr(211) + mstr(187) );
    else
       Reply(187);

    NLowOption(212, Node030a);
    NLowOption(213, Node999);
    NOption(188, Node030a, 004);
    NOption(189, Node035, 004);
    NOption(190, Node999, 004);
end

procedure Node030a begin
    gfade_out(600);
    gfade_in(600);

    //added PID_ABBEY_BOOZE and PID_DRUGS - killap expansion
    if( ( dude_item_count(PID_JET) > 0) or
        ( dude_item_count(PID_MENTATS) > 0) or
        ( dude_item_count(PID_PSYCHO) > 0) or
        ( dude_item_count(PID_BUFFOUT) > 0) or
        ( dude_item_count(PID_BEER) > 0) or
        ( dude_item_count(PID_BOOZE) > 0) or
        ( dude_item_count(PID_ROT_GUT) > 0) or
        ( dude_item_count(PID_GAMMA_GULP_BEER) > 0) or
        ( dude_item_count(PID_ROENTGEN_RUM) > 0) or
        ( dude_item_count(PID_ABBEY_BOOZE) > 0) or
        ( dude_item_count(PID_DRUGS) > 0) ) then
        call Node036;
    else
        call Node037;
end

procedure Node031 begin
    Reply(191);

    if( dude_item_count(PID_DAY_PASS) > 0) then
        NOption(192, Node034, 004);
    NOption(193, Node031a, 004);
    NOption(194, Node999, 004);
end

procedure Node031a begin
    if( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_KNOWN_FAKE ) then
        call Node032;
    else
        call Node022;
end

procedure Node032 begin
    variable papers:=0;
    variable paperCount:=0;
    variable temp:=0;

    Reply(195);
    set_global_var(GVAR_VAULT_CITIZEN,CITIZEN_KICKED_OUT);
    set_global_var( GVAR_TOWN_REP_VAULT_CITY, (global_var(GVAR_TOWN_REP_VAULT_CITY) + REP_TOWN_KICKED_OUT ) );
    set_global_var(GVAR_VAULT_CITIZENSHIP,0);
    set_global_var(GVAR_DAY_PASS_SHOWN, 0);
    paperCount := dude_item_count(PID_FAKE_CITIZENSHIP);
    if( paperCount > 0 ) then begin
        papers := dude_item(PID_FAKE_CITIZENSHIP);
        temp := rm_mult_objs_from_inven(dude_obj, papers, paperCount );
    end

    BOption(196, Node998, 004);
    NOption(197, Node999, 004);
end

procedure Node033 begin
    Reply(198);

    NOption(199, Node999, 004);
end

procedure Node034 begin
    Reply(200);

    NOption(201, Node999, 004);
end

procedure Node035 begin
    Reply(202);

    NOption(203, Node035a, 004);
    NOption(204, Node999, 004);
end

procedure Node035a begin
    gfade_out(600);
    gfade_in(600);

    if( ( dude_item_count(PID_JET) > 0) or
        ( dude_item_count(PID_MENTATS) > 0) or
        ( dude_item_count(PID_PSYCHO) > 0) or
        ( dude_item_count(PID_BUFFOUT) > 0) or
        ( dude_item_count(PID_BEER) > 0) or
        ( dude_item_count(PID_BOOZE) > 0) or
        ( dude_item_count(PID_ROT_GUT) > 0) or
        ( dude_item_count(PID_GAMMA_GULP_BEER) > 0) or
        ( dude_item_count(PID_ROENTGEN_RUM) > 0) ) then
        call Node036;
    else
        call Node037;
end

procedure Node036 begin
    Reply(205);

    NLowOption(214, Node999);
    NOption(206, Node999, 004);
end

procedure Node037 begin
    Reply(207);
    set_global_var(GVAR_DAY_PASS_SHOWN, 1);
    //set_local_var(LVAR_Open_Gate,1);
    Do_Door := 1;

    NLowOption(215, Node999);
    NOption(208, Node999, 004);
end

procedure Caught_Touching_Door begin
   if (map_var(MVAR_Picking_Front_Gate) == Front_Gate_Used) then begin
       ndebug("Someone tried to use the front gate.");
       set_map_var(MVAR_Picking_Front_Gate,Front_Gate_None);
       dialogue_system_enter;
   end

   else if (map_var(MVAR_Picking_Front_Gate) == Front_Gate_Lockpick) then begin
       ndebug("Someone tried lockpicking the front gate.");
       set_map_var(MVAR_Picking_Front_Gate,Front_Gate_None);
   end

   else if (map_var(MVAR_Picking_Front_Gate) == Front_Gate_Explode) then begin
       ndebug("Someone tried to blowup the front gate.");
       set_map_var(MVAR_Picking_Front_Gate,Front_Gate_None);
   end

   else begin
       ndebug("Someone did something that they shouldn't have, but I don't know what.");
       set_map_var(MVAR_Picking_Front_Gate,Front_Gate_None);
   end
end
//xxxxxxxxxxxxxxxxxxxx
