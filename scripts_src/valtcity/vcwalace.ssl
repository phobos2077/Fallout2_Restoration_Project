/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Wallace, Customs Official
        Location: Vault City Downtown
        Description:

        Log:
           Please note any changes that have been made to the file in Updated. Then comment
           the code which you have changed/altered/commented out. Please, do not delete any
           code which was written.

           Created:

           Updated:
*/

/* Include Files */

/* Note, the Following Lines need to be in this order so that
   the script will be compilable. The define Name is referenced
   in a module from define.h and used in command.h. Please do
   not change the ordering.
        -rwh2   11/13/97
*/
#define SCRIPT_REALNAME "vcwalace"
#include "../headers/define.h"
#include "../headers/vctydwtn.h"

#define NAME                    SCRIPT_VCWALACE
#define TOWN_REP_VAR            (GVAR_TOWN_REP_VAULT_CITY)

#include "../headers/command.h"
#include "../headers/modreact.h"


/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending


// The next lines are added in by the Designer Tool.
// Do NOT add in any lines here.
//~~~~~~~~~~~~~~~~ DESIGNER TOOL STARTS HERE

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node006a;
procedure Node007;
procedure Node008;
procedure Node008a;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node013a;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node016a;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node028a;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node031a;
procedure Node031b;
procedure Node032;
procedure Node032a;
procedure Node032b;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node049;
procedure Node050;
procedure Node051;
procedure Node052;
procedure Node052a;
procedure Node053;
procedure Node054;
procedure Node055;

//~~~~~~~~~~~~~~~~ DESIGN TOOL ENDS HERE
// The Following lines are for anything that is not needed to be
// seen by the design Tool


/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Herebefore                 (4)
#define LVAR_Hostile                    (5)
#define LVAR_Personal_Enemy             (6)
#define LVAR_Wallace_Pissed             (7)
#define LVAR_Gave_Day_Pass              (8)
#define LVAR_Wallace_Shipment           (9)
#define LVAR_Wallace_Redding            (10)
#define LVAR_Wallace_Raiders            (11)
#define LVAR_Turned_In_Skeeve           (12)

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */
import variable Skeeve_Ptr;
import variable Wallace_Ptr;

#define has_qualifying_party_member    ( (Myron_In_Party) or   \
                                         (Marcus_In_Party) or  \
                                         (Vic_In_Party) or     \
                                         (Sulik_In_Party) or   \
                                         (Lenny_In_Party) or   \
                                         (Doc_In_Party) or     \
                                         (Goris_In_Party) or   \
                                         (Davin_In_Party) or   \
                                         (Miria_In_Party) or   \
                                         (Bess_In_Party) )

/* Local variables which do not need to be saved between map changes. */
variable Only_Once:=0;
variable Float_Idiot:=0;
variable From_13 := 0;
variable From_23 := 0;
variable From_24 := 0;
variable From_34 := 0;
variable From_WTG := 0;
variable slaves := 0;
variable exile_skeeve := 0;

procedure start begin
   Wallace_Ptr := self_obj;
end

/* This procedure will get called each time that the map is first entered. It will
   set up the Team number and AI packet for this critter. This will override the
   default from the prototype, and needs to be set in scripts. */
procedure map_enter_p_proc begin
   Only_Once:=0;
   Wallace_Ptr := self_obj;
   set_self_team(TEAM_VAULT_CITIZENS);
   set_self_ai(AI_COWARD);

   if( not( is_loading_game ) ) then begin
      if( ( game_time_hour > 700 ) and ( game_time_hour < 1800 ) ) then begin
         if( not( self_visible ) ) then begin
            set_obj_visibility(self_obj, false);
         end
      end
      else begin
         if( self_visible ) then
            set_obj_visibility(self_obj, true);
      end
   end
end

procedure map_update_p_proc begin
   Wallace_Ptr := self_obj;
end

/* Every heartbeat that the critter gets, this procedure will be called. Anything from
   Movement to attacking the player on sight can be placed in here.*/
procedure critter_p_proc begin

/* If the critter is mad at the player for any reason, it will attack and remember to attack
   the player should the game be saved and loaded repeatedly. Additionally, if any special
   actions need to be taken by the critter based on previous combat, the critter will remember
   this as well. */

   if ( ( (local_var(LVAR_Hostile) == 2) or ( global_var( GVAR_ENEMY_VAULT_CITY ) == 1 ) ) and (self_can_see_dude)) then begin
       set_local_var(LVAR_Hostile,1);
       attack(dude_obj);
   end

end

/* Whenever the critter takes damage of any type, this procedure will be called. Things
   like setting ENEMY_ and LVAR_Personal_Enemy can be set here. */
procedure damage_p_proc begin

/* If the player causes damage to this critter, then he will instantly consider the player
   his personal enemy. In Critter_Proc or through dialog, actions will be taken against
   the player for his evil acts. */
   if (source_obj == dude_obj) then begin
      set_local_var(LVAR_Personal_Enemy,1);
      set_global_var( GVAR_ENEMY_VAULT_CITY, 1 );
      set_global_var( GVAR_VAULT_CITIZEN, CITIZEN_KICKED_OUT );
      set_global_var( GVAR_TOWN_REP_VAULT_CITY, (global_var(GVAR_TOWN_REP_VAULT_CITY) + REP_TOWN_KICKED_OUT ) );
      set_global_var( GVAR_VAULT_CITIZENSHIP, 0 );
   end
end

/* Any time that the player is caught stealing from this critter, Pickup_proc will be called.
   In here, various things can happen. The most common response is instant hostility which
   will be remembered. */
procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
       set_local_var(LVAR_Hostile,2);
   end
end

/* The dialog system is setup and prepares the player to talk to this NPC. Where To Go
   written by designers are placed in here. Additionally, Reactions are generated and
   stored which affects player interactions. */
procedure talk_p_proc begin
   Evil_Critter:=0;
   Slavery_Tolerant:=SLAVE_TOLERANT;
   Karma_Perception:=KARMA_PERCEPTION1;

   CheckKarma;

   GetReaction;

   From_WTG := 1;
   From_13 := 0;
   From_24 := 0;
   From_23 := 0;
   From_34 := 0;
   slaves := 0;
   exile_skeeve := 0;

   if( Fallout2_enclave_destroyed ) then
      call Node001;
   else if( night ) then
      call Node002;
   else if( global_var( GVAR_VAULT_CITIZEN ) == CITIZEN_CAPTAIN_GUARD ) then begin
      if( local_var( LVAR_Herebefore ) == 0 ) then begin
         start_gdialog(NAME,self_obj,4,-1,-1);
         gSay_Start;
            call Node005;
         gSay_End;
         end_dialogue;
         set_local_var( LVAR_Herebefore, 1 );
      end
      else begin
         start_gdialog(NAME,self_obj,4,-1,-1);
         gSay_Start;
            call Node036;
         gSay_End;
         end_dialogue;
      end
   end
   else if( Lenny_Ptr != 0 ) then
      call Node003;
   else if( Marcus_Ptr != 0 ) then
      call Node004;
   else if( global_var( GVAR_VAULT_CITIZEN ) == CITIZEN_REAL_CITIZEN ) then begin
      if( local_var( LVAR_Herebefore ) == 0 ) then begin
         start_gdialog(NAME,self_obj,4,-1,-1);
         gSay_Start;
            call Node005;
         gSay_End;
         end_dialogue;
         set_local_var( LVAR_Herebefore, 1 );
      end
      else begin
         start_gdialog(NAME,self_obj,4,-1,-1);
         gSay_Start;
            call Node036;
         gSay_End;
         end_dialogue;
      end
   end
   else if( (global_var( GVAR_VAULT_CITIZEN ) == CITIZEN_KICKED_OUT) or ( local_var(LVAR_Wallace_Pissed) == 1 ) ) then begin
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
         call Node013;
      gSay_End;
      end_dialogue;
   end
   else dude_wearing_vault_suit begin
      if( local_var(LVAR_Gave_Day_Pass) == 0 ) then begin
         start_gdialog(NAME,self_obj,4,-1,-1);
         gSay_Start;
            call Node011;
         gSay_End;
         end_dialogue;
      end
      else begin
         if( local_var(LVAR_Herebefore) == 0 ) then begin
            start_gdialog(NAME,self_obj,4,-1,-1);
            gSay_Start;
               call Node005;
            gSay_End;
            end_dialogue;
            set_local_var( LVAR_Herebefore, 1 );
         end
         else begin
            start_gdialog(NAME,self_obj,4,-1,-1);
            gSay_Start;
               call Node036;
            gSay_End;
            end_dialogue;
         end
      end
   end
   else if( local_var(LVAR_Herebefore) == 0 ) then begin
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
         call Node005;
      gSay_End;
      end_dialogue;
      set_local_var( LVAR_Herebefore, 1 );
   end
   else begin
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
         call Node036;
      gSay_End;
      end_dialogue;
   end

   if( Float_Idiot == 1 ) then begin
      Float_Idiot := 0;
      call Node007;
   end

   if( exile_skeeve == 1 ) then begin
      exile_skeeve := 0;
      gfade_out(600);
      if( ( map_var(MVAR_Skeeve_Dead) == 0 ) and ( local_var(LVAR_Turned_In_Skeeve) == 0 ) ) then begin
         set_local_var( LVAR_Turned_In_Skeeve, 1 );
         move_to( Skeeve_Ptr, 0, 0 );
         destroy_object( Skeeve_Ptr );
      end
      gfade_in(600);
   end
end

/* This procedure gets called only on the death of this NPC. Special things like
   incrementing the death count for reputation purposes and Enemy Counters are placed
   in here. */
procedure destroy_p_proc begin

/* Increment the aligned critter counter*/
   inc_good_critter

/* Set global_variable for Enemy status*/
end

/* Look_at_p_proc gets called any time that the player passes the cursor over any object.
   This should only hold the most cursory of glances for the player. */
procedure look_at_p_proc begin
   script_overrides;
   if( local_var(LVAR_Herebefore) == 0 ) then
      display_msg(mstr(101));
   else
      display_msg(mstr(100));
end

/* The player will see more indepth descriptions from this procedure. They are actively
   looking at the critter and want more information. Things like names can be added here
   if the critter is known to the player. */
procedure description_p_proc begin
   if( local_var(LVAR_Herebefore) == 0 ) then
      display_msg(mstr(101));
   else
      display_msg(mstr(102));
end

/* Any time a skill is used on a critter this call is made. This can be to give examinations
   for things like Doctor skill or messages for various other skills. */
procedure use_skill_on_p_proc begin
end

/* Should the Player ever cause the NPC too much discomfort that he desires to attack the player,
   this call will be made. Essentially, it stores the Hostile vaule so that the critter remembers
   he was once hostile towards the player.*/
procedure Node998 begin
   set_local_var(LVAR_Hostile,2);
end

/* Anytime that there is a need for an ending to dialog, this node is to be called. It will just
   exit from the dialog system without any reprisals from the NPC. */
procedure Node999 begin
end

procedure Node001 begin
   From_WTG := 0;
   floater(104);
end

procedure Node002 begin
   From_WTG := 0;
   floater( random(105, 106) );
end

procedure Node003 begin
   From_WTG := 0;
   floater(107);
end

procedure Node004 begin
   From_WTG := 0;
   floater(108);
end

procedure Node005 begin
   From_WTG := 0;
   if( global_var( GVAR_VAULT_CITIZEN ) == CITIZEN_CAPTAIN_GUARD ) then
      Reply(109);
   else if( global_var( GVAR_VAULT_CITIZEN ) == CITIZEN_REAL_CITIZEN ) then
      Reply(110);
   else
      Reply(111);

   BLowOption(112, Node006);
   NLowOption(113, Node999);
   NOption(114, Node018, 004);
   NOption(115, Node020, 004);
   if( ( local_var(LVAR_Turned_In_Skeeve) == 0 ) and
       ( map_var(MVAR_Skeeve_Dead) == 0 ) and
       ( (global_var( GVAR_VAULT_CITIZEN ) == CITIZEN_SKEEVE_GIVEN_FAKE) or
         (global_var( GVAR_VAULT_CITIZEN ) == CITIZEN_GUARD_BELIEVE_FAKE) ) ) then
      BOption(116, Node021, 004);
   NOption(117, Node999, 004);
end

procedure Node006 begin
   Reply(118);

   BLowOption(119, Node008);
   NLowOption(120, Node006a);
end

procedure Node006a begin
   Float_Idiot := 1;
end

procedure Node007 begin
   floater(121);
end

procedure Node008 begin
   Reply(122);

   NLowOption(123, Node008a);
end

procedure Node008a begin
   if( local_var(LVAR_Gave_Day_Pass) == 0 ) then
      call Node009;
   else
      call Node999;
end

procedure Node009 begin
   Reply(124);

   NLowOption(125, Node010);
end

procedure Node010 begin
   Reply(126);

   NLowOption(127, Node011);
end

procedure Node011 begin
   From_WTG := 0;
   Reply(128);

   NLowOption(129, Node012);
   NOption(130, Node012, 004);
end

procedure Node012 begin
   variable dayPass;

   dayPass := create_object( PID_DAY_PASS, 0, 0 );
   add_obj_to_inven( dude_obj, dayPass );
   set_local_var( LVAR_Gave_Day_Pass, 1 );
   Reply(131);

   NLowOption(132, Node999);
   NOption(133, Node999, 004);
end

procedure Node013 begin
   From_WTG := 0;
   From_13 := 1;
   Reply(134);

   if( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_KICKED_OUT ) then
      BLowOption(135, Node015);
   BLowOption(136, Node014);
   NLowOption(137, Node999);
   if( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_KICKED_OUT ) then
      BOption(138, Node015, 004);
   if( (local_var(LVAR_Wallace_Pissed) == 1 ) and (global_var(GVAR_VAULT_CITIZEN) != CITIZEN_KICKED_OUT) ) then
      BOption(139, Node013a, 004);
   NOption(140, Node999, 004);
end

procedure Node013a begin
   if( is_success( roll_vs_skill( dude_obj, SKILL_SPEECH, 0 ) ) ) then
      call Node036;
   else
      call Node014;
end

procedure Node014 begin
   Reply(141);

   BLowOption(142, Node027);
   NLowOption(143, Node999);
   BOption(144, Node027, 004);
   NOption(145, Node999, 004);
end

procedure Node015 begin
   if( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_KICKED_OUT ) then
      Reply(146);
   else
      Reply(147);

   BLowOption(148, Node027);
   BLowOption(149, Node014);
   NLowOption(150, Node999);
   if( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_KICKED_OUT ) then
      BOption(151, Node027, 004);
   if( global_var(GVAR_VAULT_CITIZEN) != CITIZEN_KICKED_OUT ) then
      BOption(152, Node016, 004);
   if( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_KICKED_OUT ) then
      NOption(153, Node999, 004);
   if( global_var(GVAR_VAULT_CITIZEN) != CITIZEN_KICKED_OUT ) then
      NOption(154, Node999, 004);
end

procedure Node016 begin
   Reply(155);

   if( dude_caps >= 50) then
      BOption(156, Node016a, 004);
   if( dude_caps >= 50) then
      NOption(157, Node999, 004);
   if( dude_caps < 50) then
      NOption(158, Node999, 004);
end

procedure Node016a begin
   dude_caps_adjust( -50);
   call Node017;
end

procedure Node017 begin
   variable item;

   item := create_object( PID_DAY_PASS, 0, 0 );
   add_obj_to_inven( dude_obj, item );
   set_local_var( LVAR_Gave_Day_Pass, 1 );
   Reply(159);

   NOption(160, Node036, 004);
   NOption(161, Node999, 004);
end

procedure Node018 begin
   Reply(162);

   if( ( local_var(LVAR_Gave_Day_Pass) == 0 ) and
       ( global_var(GVAR_VAULT_CITIZEN) != CITIZEN_CAPTAIN_GUARD ) and
       ( global_var(GVAR_VAULT_CITIZEN) != CITIZEN_REAL_CITIZEN ) ) then
      NOption(163, Node019, 004);
   NOption(164, Node020, 004);
   NOption(165, Node999, 004);
end

procedure Node019 begin
   Reply(166);

   NOption(167, Node022, 004);
   NOption(168, Node023, 004);
   if( ( ( global_var(GVAR_VAULT_CITIZEN) != CITIZEN_SKEEVE_GIVEN_FAKE ) or
         ( global_var(GVAR_VAULT_CITIZEN) != CITIZEN_GUARD_BELIEVE_FAKE ) ) and
       ( dude_item_count( PID_FAKE_CITIZENSHIP) > 0) ) then
      NOption(169, Node028, 004);
   NOption(170, Node999, 004);
end

procedure Node020 begin
   Reply(171);

   if( ( local_var(LVAR_Gave_Day_Pass) == 0 ) and
       ( global_var(GVAR_VAULT_CITIZEN) != CITIZEN_CAPTAIN_GUARD ) and
       ( global_var(GVAR_VAULT_CITIZEN) != CITIZEN_REAL_CITIZEN ) ) then
      NOption(172, Node019, 004);
   NOption(173, Node037, 004);
   NOption(174, Node999, 004);
end

procedure Node021 begin
   if( ( global_var( GVAR_VAULT_CITIZEN ) == CITIZEN_CAPTAIN_GUARD ) or ( global_var( GVAR_VAULT_CITIZEN ) == CITIZEN_REAL_CITIZEN ) ) then
      Reply(175);
   else
      Reply(176);

   if( dude_item_count( PID_FAKE_CITIZENSHIP) > 0) then
      NOption(177, Node031, 004);
   NOption(178, Node999, 004);
end

procedure Node022 begin
   Reply(179);

   if( dude_charisma >= 6 ) then
      NOption(180, Node023, 004);
   NOption(343, Node052, 004);
   NOption(181, Node023, 004);
   NOption(182, Node043, 004);
   NOption(183, Node020, 004);
   NOption(184, Node999, 004);
end

procedure Node023 begin
   From_23 := 1;
   if( dude_charisma < 6 ) then
      Reply( mstr(185) + " " + mstr(186) );
   else
      Reply(185);

   if( dude_charisma >= 6 ) then
      NOption(187, Node024, 004);
   if( dude_charisma < 6 ) then
      BOption(188, Node024, 004);
   BOption(189, Node027, 004);
   NOption(190, Node999, 004);
end

procedure Node024 begin
   if( From_24 == 1 ) then begin
      From_24 := 0;
      Reply(337);
   end
   else if( ( From_34 == 1 ) or ( dude_charisma < 6 ) ) then begin
      Reply(191);
   end
   else if( dude_charisma >= 6 ) then
      Reply(192);

   From_24 := 1;

   if( has_skill( dude_obj, SKILL_SPEECH ) < 75 ) then
      NOption(193, Node025, 007);
   if( has_skill( dude_obj, SKILL_SPEECH ) >= 75 ) then
      NOption(194, Node025, 004);
   if( (From_23 == 1) or (From_34 == 1) ) then begin
      From_23 := 0;
      From_34 := 0;
      NOption(338, Node024, 004);
   end
   BOption(339, Node027, 004);
   NOption(340, Node999, 004);
end

procedure Node025 begin
   From_24 := 0;
   if( has_skill( dude_obj, SKILL_SPEECH ) < 75 ) then
      Reply(196);
   else
      Reply(197);

   if( has_skill( dude_obj, SKILL_SPEECH ) < 75 ) then
      NOption(198, Node026, 004);
   if( has_skill( dude_obj, SKILL_SPEECH ) >= 75 ) then
      GOption(199, Node026, 004);
   NOption(200, Node036, 004);
   NOption(201, Node999, 004);
end

procedure Node026 begin
   variable item;

   item := create_object( PID_DAY_PASS, 0, 0 );
   add_obj_to_inven( dude_obj, item );
   set_local_var( LVAR_Gave_Day_Pass, 1 );
   Reply(202);

   NOption(203, Node036, 004);
   NOption(204, Node999, 004);
end

procedure Node027 begin
   set_local_var( LVAR_Wallace_Pissed, 1 );
   set_global_var( GVAR_TOWN_REP_VAULT_CITY, (global_var(GVAR_TOWN_REP_VAULT_CITY) + REP_TOWN_PISSED_WALLACE ) );
   if( From_24 == 1 ) then begin
      From_24 := 0;
      Reply(205);
   end
   else begin
      Reply(206);
   end

   BLowOption(207, Node998);
   NLowOption(208, Node999);
   BOption(209, Node998, 004);
   NOption(210, Node999, 004);
end

procedure Node028 begin
   Reply(211);

   if( ( local_var(LVAR_Gave_Day_Pass) == 0 ) and
       ( global_var(GVAR_VAULT_CITIZEN) != CITIZEN_CAPTAIN_GUARD ) and
       ( global_var(GVAR_VAULT_CITIZEN) != CITIZEN_REAL_CITIZEN ) ) then
      NOption(212, Node028a, 004);
   NOption(213, Node031, 004);
   BOption(214, Node030, 004);
end

procedure Node028a begin
   if( has_skill( dude_obj, SKILL_BARTER ) >= 75 ) then
      call Node029;
   else
      call Node030;
end

procedure Node029 begin
   Reply(215);

   NOption(216, Node032, 004);
   BOption(217, Node030, 004);
end

procedure Node030 begin
   set_local_var( LVAR_Wallace_Pissed, 1 );
   set_global_var( GVAR_TOWN_REP_VAULT_CITY, (global_var(GVAR_TOWN_REP_VAULT_CITY) + REP_TOWN_PISSED_WALLACE ) );
   set_global_var( GVAR_VAULT_CITIZEN, CITIZEN_KICKED_OUT );
   set_global_var( GVAR_TOWN_REP_VAULT_CITY, (global_var(GVAR_TOWN_REP_VAULT_CITY) + REP_TOWN_KICKED_OUT ) );
   set_global_var( GVAR_VAULT_CITIZENSHIP, CITIZEN_FALSE );
   set_global_var(GVAR_DAY_PASS_SHOWN, 0);
   Reply(218);

   BOption(219, Node998, 004);
   NOption(220, Node999, 004);
end

procedure Node031 begin
   variable papers;
   variable paperCount;
   variable dummy;

   paperCount := dude_item_count( PID_FAKE_CITIZENSHIP);
   papers := dude_item( PID_FAKE_CITIZENSHIP);
   dummy := rm_mult_objs_from_inven( dude_obj, papers, paperCount );
   destroy_object(papers); // added by killap
   NMessage(221);
   exile_skeeve := 1;
   call Node031a;
end

procedure Node031a begin
   Reply(341);

   set_global_var(GVAR_VAULT_CITIZEN,0); //added by killap
   set_global_var(GVAR_VAULT_CITIZENSHIP,0); //added by killap

   if( ( local_var(LVAR_Gave_Day_Pass) == 0 ) and
       ( global_var(GVAR_VAULT_CITIZEN) != CITIZEN_CAPTAIN_GUARD ) and
       ( global_var(GVAR_VAULT_CITIZEN) != CITIZEN_REAL_CITIZEN ) ) then
      NOption(222, Node031b, 004);
   //NOption(223, Node036, 004);
   NOption(224, Node999, 004);
end

procedure Node031b begin
   if( has_skill( dude_obj, SKILL_SPEECH ) >= 75 ) then
      call Node033;
   else
      call Node034;
end

procedure Node032 begin
   variable papers;
   variable paperCount;
   variable dummy;

   paperCount := dude_item_count( PID_FAKE_CITIZENSHIP);
   papers := dude_item( PID_FAKE_CITIZENSHIP);
   dummy := rm_mult_objs_from_inven( dude_obj, papers, paperCount );
   destroy_object(papers); //added by killap
   NMessage(225);
   exile_skeeve := 1;
   call Node032a;
end

procedure Node032a begin
   variable item;

   item := create_object( PID_DAY_PASS, 0, 0 );
   add_obj_to_inven( dude_obj, item );
   set_local_var( LVAR_Gave_Day_Pass, 1 );
   Reply(342);

   //NOption(226, Node036, 004);
   BOption(227, Node032b, 004);
   NOption(228, Node999, 004);
end

procedure Node032b begin
   set_local_var( LVAR_Wallace_Pissed, 1 );
   set_global_var( GVAR_TOWN_REP_VAULT_CITY, (global_var(GVAR_TOWN_REP_VAULT_CITY) + REP_TOWN_PISSED_WALLACE ) );
end

procedure Node033 begin
   variable item;

   item := create_object( PID_DAY_PASS, 0, 0 );
   add_obj_to_inven( dude_obj, item );
   set_local_var( LVAR_Gave_Day_Pass, 1 );
   Reply(229);

   //NOption(230, Node036, 004);
   NOption(231, Node999, 004);
end

procedure Node034 begin
   From_34 := 1;
   Reply(232);

   BOption(233, Node024, 004);
   //NOption(234, Node036, 004);
   BOption(235, Node035, 004);
   NOption(236, Node999, 004);
end

procedure Node035 begin
   set_local_var( LVAR_Wallace_Pissed, 1 );
   set_global_var( GVAR_TOWN_REP_VAULT_CITY, (global_var(GVAR_TOWN_REP_VAULT_CITY) + REP_TOWN_PISSED_WALLACE ) );
   Reply(237);

   BOption(238, Node998, 004);
   NOption(239, Node999, 004);
end

procedure Node036 begin
   if( From_13 == 1 ) then begin
      From_13 := 0;
      set_local_var( LVAR_Wallace_Pissed, 0 );
      // Remove pissed Town Rep. NOTICE THE MINUS!!!
      set_global_var( GVAR_TOWN_REP_VAULT_CITY, (global_var(GVAR_TOWN_REP_VAULT_CITY) - REP_TOWN_PISSED_WALLACE ) );
      Reply(240);
   end
   else if( From_WTG == 1 ) then begin
      if( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_CAPTAIN_GUARD ) then
         Reply(241);
      else if( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_REAL_CITIZEN ) then
         Reply(242);
      else
         Reply(243);
   end
   else if( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_CAPTAIN_GUARD ) then
      Reply(244);
   else if( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_REAL_CITIZEN ) then
      Reply(245);
   else
      Reply(246);

   BLowOption(247, Node006);
   NLowOption(248, Node999);
   NOption(249, Node020, 004);
   if( local_var( LVAR_Wallace_Shipment ) == 1 ) then
      NOption(250, Node037, 004);
   if( ( local_var( LVAR_Turned_In_Skeeve ) == 0 ) and
       ( map_var( MVAR_Skeeve_Dead ) == 0 ) and
       ( (global_var( GVAR_VAULT_CITIZEN ) == CITIZEN_SKEEVE_GIVEN_FAKE) or
         (global_var( GVAR_VAULT_CITIZEN ) == CITIZEN_GUARD_BELIEVE_FAKE) ) ) then
      BOption(251, Node021, 004);
   if( ( local_var(LVAR_Gave_Day_Pass) == 1 ) and
       ( dude_item_count( PID_FAKE_CITIZENSHIP) == 0) and
       ( ( global_var(GVAR_VAULT_CITIZEN) != CITIZEN_CAPTAIN_GUARD ) and
         ( global_var(GVAR_VAULT_CITIZEN) != CITIZEN_REAL_CITIZEN ) ) ) then
      BOption(252, Node015, 004);
   if( ( ( global_var(GVAR_VAULT_REDDING_PROBLEM) == REDDING_PROBLEM_KNOW_EXISTS ) or
         ( global_var(GVAR_VAULT_REDDING_PROBLEM) == REDDING_PROBLEM_KNOW_JET ) ) and
       ( local_var(LVAR_Wallace_Redding) == 1 ) ) then
      GOption(253, Node041, 004);
   if( ( global_var(GVAR_VAULT_RAIDERS) == RAIDERS_FOUND ) and
       ( ( not(raiders_dead) and not(raiders_scout_left) ) ) and //edit by killap - expansion
       ( local_var(LVAR_Wallace_Raiders) == 1 ) ) then
      GOption(254, Node050, 004);
   if( ( raiders_dead )  and
       ( local_var(LVAR_Wallace_Raiders) == 1 ) ) then
      GOption(255, Node050, 004);
   //added by killap - expansion
   if( ( raiders_scout_left )  and
       ( local_var(LVAR_Wallace_Raiders) == 1 ) ) then
      GOption(1255, Node050, 004);
   //end added
   if( ( global_var(GVAR_VAULT_CITIZEN) != CITIZEN_CAPTAIN_GUARD ) and
         ( global_var(GVAR_VAULT_CITIZEN) != CITIZEN_REAL_CITIZEN ) ) then
      NOption(256, Node043, 004);
   if( From_WTG == 1 ) then begin
      From_WTG := 0;
      NOption(257, Node999, 004);
   end
   else
      NOption(258, Node999, 004);
end

procedure Node037 begin
   set_local_var( LVAR_Wallace_Shipment, 1 );
   Reply(259);

   NOption(260, Node038, 004);
   NOption(261, Node039, 004);
   NOption(262, Node040, 004);
   NOption(263, Node036, 004);
   NOption(264, Node999, 004);
end

procedure Node038 begin
   mark_den_on_map

   if ( ( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_CAPTAIN_GUARD ) or
        ( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_REAL_CITIZEN ) ) then
      Reply(265);
   else if( has_rep_slaver ) then
      Reply(266);
   else
      Reply(267);

   NOption(268, Node039, 004);
   NOption(269, Node040, 004);
   NOption(270, Node036, 004);
   if ( ( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_CAPTAIN_GUARD ) or
        ( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_REAL_CITIZEN ) ) then
      NOption(271, Node999, 004);
   else if( has_rep_slaver ) then
      NOption(272, Node999, 004);
   else
      NOption(273, Node999, 004);
end

procedure Node039 begin
   mark_broken_hills_on_map

   if ( ( global_var(GVAR_VAULT_CITIZEN) != CITIZEN_CAPTAIN_GUARD ) and
        ( global_var(GVAR_VAULT_CITIZEN) != CITIZEN_REAL_CITIZEN ) ) then
      Reply( mstr(274) + " " + mstr(275) );
   else
      Reply(274);

/*
   if( global_var(GVAR_BH_CHAD) == CHAD_SUSPICIOUS ) then
      NOption(276, Node042, 004);
*/
   NOption(277, Node038, 004);
   NOption(278, Node040, 004);
   NOption(279, Node036, 004);
   NOption(280, Node999, 004);
end

procedure Node040 begin
   set_local_var( LVAR_Wallace_Redding, 1 );
   mark_redding_on_map
   Reply(281);

   if( ( global_var(GVAR_VAULT_REDDING_PROBLEM) == REDDING_PROBLEM_KNOW_EXISTS ) or
       ( global_var(GVAR_VAULT_REDDING_PROBLEM) == REDDING_PROBLEM_KNOW_JET ) ) then
      GOption(282, Node041, 004);
   NOption(283, Node038, 004);
   NOption(284, Node039, 004);
   NOption(285, Node036, 004);
   NOption(286, Node999, 004);
end

procedure Node041 begin
   variable item;

   if ( ( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_CAPTAIN_GUARD ) or
        ( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_REAL_CITIZEN ) or
        ( local_var(LVAR_Gave_Day_Pass) == 1 ) ) then
      Reply(287);
   else begin
      item := create_object( PID_DAY_PASS, 0, 0 );
      add_obj_to_inven( dude_obj, item );
      set_local_var( LVAR_Gave_Day_Pass, 1 );
      Reply(288);
   end

   NOption(289, Node036, 004);
   NOption(291, Node999, 004);
end

procedure Node042 begin
   Reply(292);

   NOption(293, Node038, 004);
   NOption(294, Node040, 004);
   NOption(295, Node036, 004);
   NOption(296, Node999, 004);
end

procedure Node043 begin
   Reply(297);

   NOption(298, Node044, 004);
end

procedure Node044 begin
   Reply(299);

   NOption(300, Node045, 004);
   NOption(301, Node047, 004);
   NOption(302, Node051, 004);
   NOption(303, Node036, 004);
   NOption(304, Node999, 004);
end

procedure Node045 begin
   Reply(305);

   if( dude_iq == 4 ) then
      NOption(306, Node046, 004);
   else
      NOption(307, Node046, 005);
end

procedure Node046 begin
   Reply(308);

   NOption(309, Node047, 004);
   NOption(310, Node051, 004);
   NOption(311, Node036, 004);
   NOption(312, Node999, 004);
end

procedure Node047 begin
   set_local_var( LVAR_Wallace_Raiders, 1 );
   Reply(313);

   if( ( global_var(GVAR_VAULT_RAIDERS) == RAIDERS_FOUND ) and
       ( (not(raiders_dead) and not(raiders_scout_left)) ) and //edit by killap - expansion
       ( local_var(LVAR_Wallace_Raiders) == 1 ) ) then
      GOption(254, Node050, 004);
   if( raiders_dead ) then
      NOption(314, Node050, 004);
   //added by killap - expansion
   if( raiders_scout_left ) then
      NOption(1314, Node050, 004);
   //end added
   if( (not(raiders_dead) and not(raiders_scout_left)) ) then //edit by killap - expansion
      NOption(315, Node048, 004);
   NOption(316, Node045, 004);
   NOption(317, Node051, 004);
   if( (not(raiders_dead) and not(raiders_scout_left)) ) then //edit by killap - expansion
      NOption(318, Node999, 004);
end

procedure Node048 begin
   Reply(319);

   if( ( global_var(GVAR_VAULT_CITIZEN) == 0 ) and ( local_var(LVAR_Gave_Day_Pass) == 0 ) ) then
      GOption(320, Node049, 004);
   NOption(321, Node036, 004);
   if ( ( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_CAPTAIN_GUARD ) or
        ( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_REAL_CITIZEN ) or
        ( local_var(LVAR_Gave_Day_Pass) == 1 ) ) then
      GOption(322, Node999, 004);
   NOption(323, Node999, 004);
end

procedure Node049 begin
   Reply(324);

   GOption(325, Node036, 004);
   GOption(326, Node999, 004);
end

procedure Node050 begin
   variable item;

   if ( ( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_CAPTAIN_GUARD ) or
        ( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_REAL_CITIZEN ) or
        ( local_var(LVAR_Gave_Day_Pass) == 1 ) ) then
      Reply(327);
   else begin
      item := create_object( PID_DAY_PASS, 0, 0 );
      add_obj_to_inven( dude_obj, item );
      set_local_var( LVAR_Gave_Day_Pass, 1 );
      Reply(328);
   end

   NOption(329, Node036, 004);
   if ( ( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_CAPTAIN_GUARD ) or
        ( global_var(GVAR_VAULT_CITIZEN) == CITIZEN_REAL_CITIZEN ) or
        ( local_var(LVAR_Gave_Day_Pass) == 1 ) ) then
      NOption(330, Node999, 004);
   else
      NOption(331, Node999, 004);
end

procedure Node051 begin
   Reply(332);

   NOption(333, Node045, 004);
   NOption(334, Node047, 004);
   NOption(335, Node036, 004);
   NOption(336, Node999, 004);
end

procedure Node052 begin
   if( has_qualifying_party_member ) then
      Reply( mstr(344) + " " + mstr(345) );
   else
      Reply(344);

   if( has_qualifying_party_member ) then
      NOption(346, Node052a, 004);
   if( dude_item_count( PID_GECKO_PELT) > 0) then
      NOption(347, Node053, 004);
   if( dude_item_count( PID_GOLDEN_GECKO_PELT) > 0) then
      NOption(348, Node053, 004);
   if( dude_item_count( PID_GOLD_NUGGET) > 0) then
      NOption(349, Node053, 004);
   if( ( dude_item_count( PID_REFINED_ORE) > 0) or
       ( dude_item_count( PID_URANIUM_ORE) > 0) ) then
      NOption(350, Node053, 004);
   if( ( dude_item_count( PID_GECKO_PELT) == 0) and
       ( dude_item_count( PID_GOLDEN_GECKO_PELT) == 0) and
       ( dude_item_count( PID_GOLD_NUGGET) == 0) and
       ( dude_item_count( PID_REFINED_ORE) == 0) and
       ( dude_item_count( PID_URANIUM_ORE) == 0) ) then
      NOption(351, Node999, 004);
   NOption(352, Node999, 004);
end

procedure Node052a begin
   slaves := 1;
   call Node054;
end

procedure Node053 begin
   Reply(353);

   NOption(354, Node054, 004);
end

procedure Node054 begin
   if( slaves == 1 ) then begin
      slaves := 0;
      Reply( mstr(355) + " " + mstr(357) );
   end
   else
      Reply( mstr(356) + " " + mstr(357) );

   if( dude_caps >= 500) then begin
      NOption(358, Node055, 004);
      NOption(359, Node999, 004);
   end
   else
      NOption(360, Node999, 004);
end

procedure Node055 begin
   variable dayPass;

   dude_caps_adjust( -500);
   dayPass := create_object( PID_DAY_PASS, 0, 0 );
   add_obj_to_inven( dude_obj, dayPass );
   set_local_var( LVAR_Gave_Day_Pass, 1 );
   Reply(361);

   NOption(362, Node036, 004);
   NOption(363, Node999, 004);
end
//xxxxxxxxxxxxxxxxxxxx
