/*
	Script from spatial templete.
*/


/* Include Files */
#define SCRIPT_REALNAME "vsraispt"
#include "../headers/define.h"

#define NAME                    SCRIPT_VSRAISPT
#include "../headers/vctyctyd.h"
#include "../headers/command.h"

/* Standard Script Procedures */
procedure start;
procedure spatial_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure Node001;
procedure NodeFollowRaiders;
procedure NodeDontFollowRaiders;

/*****************************************************************
   Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_
*****************************************************************/

/*******************************************************************
   Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_)
*******************************************************************/

/*******************************************************************
   Local variables which do not need to be saved between map changes.
*******************************************************************/


/*******************************************************************
*******                         PROCEDURES                   *******
*******************************************************************/


/*******************************************************************
   The start procedure is the first procedure called when the map is
   first entered. Any initial information that needs to be set up
   should be placed in here.
*******************************************************************/

procedure start
begin
end


/***************************************************************************************
   Whenever the map is first entered, this procedure will be called.
***************************************************************************************/

procedure map_enter_p_proc
begin
end


/**************************************************************************************
   This procedure gets called roughly every 30 seconds of real time.
**************************************************************************************/

procedure map_update_p_proc
begin
end


/**************************************************************************************
   This procedure gets called when player is near.
**************************************************************************************/

procedure spatial_p_proc begin
   if( not( combat_is_initialized ) ) then begin
      if ( (global_var(GVAR_VAULT_RAIDERS) >= RAIDERS_PROBLEM_KNOWN) and (global_var(GVAR_VAULT_RAIDERS) < RAIDERS_FOUND) ) then begin
         if (map_var(MVAR_Saw_Raiders) == 0) then begin
            if (night) then begin
               if ( is_success( roll_vs_skill( dude_obj, SKILL_OUTDOORSMAN, -30 ) ) ) then begin
                  set_map_var(MVAR_Saw_Raiders,1);
                  start_gdialog(NAME,self_obj,4,-1,-1);
                  gSay_Start;
                     call Node001;
                  gSay_End;
                  end_dialogue;
               end
            end
         end
      end
   end
end

procedure Node001 begin
   Reply(100);
   NOption(101, NodeFollowRaiders, 001);
   NOption(102, NodeDontFollowRaiders, 001);
end

procedure NodeFollowRaiders begin
   mark_on_map(AREA_RAIDERS)
   load_map(MAP_RAIDERS_CAMP1,0);
end

procedure NodeDontFollowRaiders begin
   add_timer_event( self_obj, 0, 1 );
end

procedure timed_event_p_proc begin
   if ( fixed_param == 1 ) then begin
      if( not( combat_is_initialized ) ) then begin
         //animate_move_to_tile(tile_num_in_direction(dude_tile, (has_trait(TRAIT_OBJECT,dude_obj,OBJECT_CUR_ROT)), 3));
         //animate_move_obj_to_tile(dude_obj, 31106, ANIMATE_RUN);
         dude_run_to_tile((tile_num_in_direction(dude_tile, (dude_cur_rot), 3)));
      end
   end
end
