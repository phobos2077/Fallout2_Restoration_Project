/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Angry Brahmin
        Location: New Reno
        Description: Generic brahmin thingy with special

        Log:

           Created: May 12, 1997

           Updated:
*/

/* Include Files */

#define SCRIPT_REALNAME "ncangbra"
#include "../headers/define.h"

#define NAME                    SCRIPT_NCANGBRA
#define TOWN_REP_VAR            GVAR_TOWN_REP_NEW_RENO

#include "../headers/command.h"
#include "../headers/newreno.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure push_p_proc;

procedure Node001;

#define LVAR_Doctor_Attempts                    (0)

#define item_removed                            (local_var(LVAR_Doctor_Attempts) < 0)

#define br_mstr(x)                              message_str(SCRIPT_ZCBRAHMN,x)
#define br_floater(x)                           float_msg(self_obj, br_mstr(x), FLOAT_COLOR_NORMAL)

#define TIMER_STAND_UP 4

procedure timed_event_p_proc begin
variable temp_poo;
   if (fixed_param == 1) then begin
      if ((critter_state(self_obj) bwand DAM_KNOCKED_DOWN) == FALSE) then begin
         self_walk_to_tile(tile_num_in_direction(self_tile,random(0,5),random(1,3)));
      end
      flush_add_timer_event_sec(self_obj, random(45, 90), 1);
   end if (fixed_param == 2) then begin
      br_floater(random(201, 205));
      flush_add_timer_event_sec(self_obj, random(30, 45), 2);
   end else if (fixed_param == 3) then begin
      if (item_removed) then begin
         if (random(1,2) == 1) then begin
            br_floater(206);
            temp_poo := create_object_sid(random(PID_SMALL_GOO_1, PID_SMALL_GOO_3), 0, 0, SCRIPT_ZIBRAPOO);
            move_to(temp_poo, tile_num_in_direction(self_tile, self_inv_rot, 1), 0);
         end
         flush_add_timer_event_sec(self_obj, random(15, 45), 3);
      end
   end else if (fixed_param == TIMER_STAND_UP) then begin
      reg_anim_clear(self_obj);
      reg_anim_begin();
         reg_anim_animate(self_obj, ANIM_back_to_standing, -1);
      reg_anim_end();
      critter_uninjure(self_obj, DAM_KNOCKED_DOWN);
   end
end

procedure start begin
end

procedure critter_p_proc begin
end

procedure pickup_p_proc begin
end
procedure talk_p_proc begin
   call Node001;
end

procedure push_p_proc begin
   if (obj_in_party(source_obj)) then begin
      if (stat_success(source_obj, STAT_st, 0)) then begin
         if ((critter_state(self_obj) bwand DAM_KNOCKED_DOWN) == FALSE) then begin
            reg_anim_clear(self_obj);
            reg_anim_begin();
               reg_anim_animate(self_obj,ANIM_hit_from_front,-1);
               reg_anim_animate(self_obj,ANIM_fall_back,5);
               reg_anim_animate(self_obj,ANIM_fall_back_sf,-1);
            reg_anim_end();
            critter_injure(self_obj,DAM_KNOCKED_DOWN);
            add_timer_event(self_obj, game_ticks(Random(10, 30)), TIMER_STAND_UP);
            ndebug("ahh Cow TIPPED you get +10 Hick Experience Points.");
         end
      end
   end
end

procedure destroy_p_proc begin
end

procedure damage_p_proc begin
end

procedure look_at_p_proc begin
   if (item_removed == false) then begin
      script_overrides;
      display_mstr(100);
   end
end

procedure description_p_proc begin
   if (item_removed == false) then begin
      script_overrides;
      display_mstr(150 + (has_skill(dude_obj, SKILL_DOCTOR)>=50));
   end
end

procedure use_obj_on_p_proc begin
   // if you give a Brahmin beer or booze, it'll fall down and take damage. This was pulled from the original
   //    fallout script
   if ((obj_pid(obj_being_used_with) == PID_BEER) or (obj_pid(obj_being_used_with) == PID_BOOZE)) then begin
      variable item := 0;
      script_overrides;
      item := obj_being_used_with;
      rm_obj_from_inven(source_obj,obj_being_used_with);
      destroy_object(item);
      if ((critter_state(self_obj) bwand DAM_KNOCKED_DOWN) == FALSE) then begin
         reg_anim_clear(self_obj);
         reg_anim_begin();
            reg_anim_animate(self_obj,ANIM_hit_from_front,-1);
            reg_anim_animate(self_obj,ANIM_fall_back,5);
            reg_anim_animate(self_obj,ANIM_fall_back_sf,-1);
         reg_anim_end();
         critter_injure(self_obj,DAM_KNOCKED_DOWN);
      end
   end
end

procedure use_skill_on_p_proc begin
   // a good science skill check will give you a little more info about the brahmin.
   if (action_being_used == SKILL_SCIENCE) then begin
      script_overrides;
      if (is_success(roll_vs_skill(dude_obj,action_being_used,0))) then
         display_msg(br_mstr(101));
      else
         display_msg(br_mstr(102));
   end else if (action_being_used == SKILL_STEAL) then begin
      script_overrides;
   end else if (action_being_used == SKILL_DOCTOR) then begin
      if (item_removed == false) then begin
         if (is_success(roll_vs_skill(dude_obj,SKILL_DOCTOR,-25))) then begin
            floater_rand(198, 199);
            display_mstr(225);
            give_xp(100);
            set_local_var(LVAR_Doctor_Attempts, -1);
            give_pid_qty(dude_obj, PID_MICRO_FUSION_CELL, 1)
            flush_add_timer_event_sec(self_obj, 0, 3);
         end else begin
            script_overrides;
            inc_local_var(LVAR_Doctor_Attempts);
            floater_rand(204, 206);
            if (local_var(LVAR_Doctor_Attempts) >= 3) then begin
               self_attack_dude;
            end else begin
               display_mstr(235);
            end
         end
      end
   end
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
      if (map_first_run) then begin
         set_self_team(TEAM_BRAHMIN);
         set_self_ai(AI_GENERIC_BRAHMIN);
      end
      flush_add_timer_event_sec(self_obj, random(45, 90), 1);
      flush_add_timer_event_sec(self_obj, random(30, 45), 2);
      flush_add_timer_event_sec(self_obj, random(30, 45), 3);
   end
end

procedure Node001 begin
   floater_rand(200-(2*(local_var(LVAR_Doctor_Attempts) < 0)), 206);
end
