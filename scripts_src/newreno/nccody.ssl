/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name:
        Location: Den
        Description:

        Log:

           Created: August 22, 1998

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "nccody"
#include "../headers/define.h"
#define NAME                     SCRIPT_NCCODY
#define TOWN_REP_VAR             GVAR_TOWN_REP_NEW_RENO
#include "../headers/command.h"
#include "../headers/newreno.h"
#include "../headers/modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;
procedure combat_p_proc;
procedure push_p_proc;

procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;

#define LVAR_Home_Rotation                (4)
#define LVAR_Node_17                      (5)
#define LVAR_Flags                        (6)
#define LVAR_Home_Tile                    (7)

#define cody_know_car_bit                 bit_10
#define run_away_bit                      bit_11
#define nuka_karma_bit                    bit_12
#define jet_karma_bit                     bit_13
#define buffout_karma_bit                 bit_14
#define fruit_karma_bit                   bit_15
#define iguana_karma_bit                  bit_16
#define drymeat_karma_bit                 bit_17
#define cody_to_chop_exp_bit              bit_18

#define cody_to_chop_exp                  lvar_bit(LVAR_Flags, cody_to_chop_exp_bit)
#define set_cody_to_chop_exp              if (cody_to_chop_exp == false) then begin          \
                                             give_xp(EXP_NEW_RENO_CODY_LEADS);               \
                                          end                                                \
                                          set_lvar_bit_on(LVAR_Flags, cody_to_chop_exp_bit)

#define cody_know_car                     lvar_bit(LVAR_Flags, cody_know_car_bit)
#define set_cody_know_car                 set_lvar_bit_on(LVAR_Flags, cody_know_car_bit)

#define run_away                          lvar_bit(LVAR_Flags, run_away_bit)
#define set_run_away                      flush_add_timer_event_sec(self_obj, 60, off_run_away_param);   \
                                          set_lvar_bit_on(LVAR_Flags, run_away_bit)
#define off_run_away                      set_lvar_bit_off(LVAR_Flags, run_away_bit)

#define node_17                           (local_var(LVAR_Node_17))
#define inc_node_17                       if (node_17 < 2) then inc_local_var(LVAR_Node_17)


#define nuka_karma                        lvar_bit(LVAR_Flags, nuka_karma_bit)
#define set_nuka_karma                    if (nuka_karma == false) then begin                \
                                             give_fed_cody_rep                               \
                                             inc_general_rep(REP_BONUS_CODY_BAD_FOOD);       \
                                          end                                                \
                                          set_lvar_bit_on(LVAR_Flags, nuka_karma_bit)

#define jet_karma                         lvar_bit(LVAR_Flags, jet_karma_bit)
#define set_jet_karma                     if (jet_karma == false) then begin                 \
                                             inc_general_rep(REP_BONUS_CODY_DRUGS);          \
                                          end                                                \
                                          set_lvar_bit_on(LVAR_Flags, jet_karma_bit)

#define buffout_karma                     lvar_bit(LVAR_Flags, buffout_karma_bit)
#define set_buffout_karma                 if (buffout_karma == false) then begin             \
                                             inc_general_rep(REP_BONUS_CODY_DRUGS);          \
                                          end                                                \
                                          set_lvar_bit_on(LVAR_Flags, buffout_karma_bit)

#define fruit_karma                       lvar_bit(LVAR_Flags, fruit_karma_bit)
#define set_fruit_karma                   if (fruit_karma == false) then begin               \
                                             give_fed_cody_rep                               \
                                             inc_general_rep(REP_BONUS_CODY_GOOD_FOOD);      \
                                          end                                                \
                                          set_lvar_bit_on(LVAR_Flags, fruit_karma_bit)

#define iguana_karma                      lvar_bit(LVAR_Flags, iguana_karma_bit)
#define set_iguana_karma                  if (iguana_karma == false) then begin              \
                                             give_fed_cody_rep                               \
                                             inc_general_rep(REP_BONUS_CODY_GOOD_FOOD);      \
                                          end                                                \
                                          set_lvar_bit_on(LVAR_Flags, iguana_karma_bit)

#define drymeat_karma                     lvar_bit(LVAR_Flags, drymeat_karma_bit)
#define set_drymeat_karma                 if (drymeat_karma == false) then begin             \
                                             give_fed_cody_rep                               \
                                             inc_general_rep(REP_BONUS_CODY_BAD_FOOD);       \
                                          end                                                \
                                          set_lvar_bit_on(LVAR_Flags, drymeat_karma_bit)
#define move_cody_home                    if (self_tile != local_var(LVAR_Home_Tile)) then move_to(self_obj, local_var(LVAR_Home_Tile), self_elevation)

#define give_fed_cody_rep                 if ((nuka_karma + fruit_karma + iguana_karma + drymeat_karma) == 0) then begin   \
                                             inc_reno_rep(REP_NEW_RENO_FEED_CODY);                                         \
                                          end

procedure start begin
end

procedure push_p_proc begin
   if (self_tile == local_var(LVAR_Home_Tile)) then begin
      script_overrides;
   end
end

procedure timed_event_p_proc begin
   if (fixed_param == off_run_away_param) then begin
      if ((self_can_see_dude == false) and (tile_distance_objs(dude_obj, self_obj) > 10)) then begin
         off_run_away;
      end else begin
         nr_add_timer_event(self_obj, 10, off_run_away_param);
      end
   end
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
      check_set_obj_visiblility(self_obj, false);
      if (map_first_run) then begin
         set_local_var(LVAR_Home_Tile, self_tile);
         set_local_var(LVAR_Home_Rotation, self_cur_rot);
         set_self_team(TEAM_NEW_RENO_CODY);
         set_self_ai(AI_CHILD);
      end else if (cody_fingered_jules) then begin
         move_cody_home;
         if ((jules_warned == false) and (jules_dead == false)) then begin
            set_jules_killed_cody;
            kill_critter(self_obj, random(ANIM_fall_back_blood_sf, ANIM_fall_front_blood_sf));
         end
      end else move_cody_home;
   end
end

procedure map_exit_p_proc begin
end

procedure combat_p_proc begin
end

procedure critter_p_proc begin
   if (self_can_see_dude) then begin
      if (hostile) then begin
         self_attack_dude;
      end else if (run_away) then begin
         Flee_From_Dude
      end
   end else if (run_away) then begin
   end else if (self_tile != local_var(LVAR_Home_Tile)) then begin
      anim_move_to_point(local_var(LVAR_Home_Tile))
   end else if (self_cur_rot != local_var(LVAR_Home_Rotation)) then begin
      self_rotate(local_var(LVAR_Home_Rotation));
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
      call Node998;
   end
end

procedure pickup_p_proc begin
   if ((source_obj == dude_obj) or (obj_in_party(source_obj))) then begin
      call Node998;
   end
end

procedure talk_p_proc begin
   if (run_away) then begin
      Flee_From_Dude
   end else if (Fallout2_enclave_destroyed) then begin
      start_dialog_at_node(Node016);
   end else if ((dude_wearing_power_armor) or (has_rep_slaver)) then begin
      start_dialog_at_node(Node012);
   end else if (self_rep < -100) or has_rep_childkiller then begin
      start_dialog_at_node(Node013);
   end else if (marcus_is_dude_companion) then begin
      start_dialog_at_node(Node014);
   end else if (lenny_is_dude_companion) then begin
      start_dialog_at_node(Node015);
   end else begin
      start_dialog_at_node(Node002);
   end
   set_herebefore;
end

procedure destroy_p_proc begin
   inc_good_critter
   set_cody_dead;
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(125);
   set_know_cody;
end

procedure description_p_proc begin
   script_overrides;
   if (examined) then begin
      display_mstr_rand(176, 178);
   end else begin
      display_mstr(175);
   end
   set_examined;
   set_know_cody;
end

procedure use_skill_on_p_proc begin
end

procedure Node998 begin
end
procedure Node999 begin
end
procedure Node990 begin
   set_run_away;
end
procedure Node989 begin
   set_nuka_karma;
   remove_pid_qty(dude_obj, PID_NUKA_COLA, 1)
   call Node007;
end
procedure Node988 begin
   set_jet_karma;
   call Node003;
end
procedure Node987 begin
   set_buffout_karma;
   call Node003;
end
procedure Node986 begin
   set_fruit_karma;
   remove_pid_qty(dude_obj, PID_MUTATED_FRUIT, 1)
   call Node007;
end
procedure Node985 begin
   set_iguana_karma;
   if (self_item_count(PID_MEAT_ON_A_STICK) > 0) then begin
      remove_pid_qty(dude_obj, PID_MEAT_ON_A_STICK, 1)
   end else begin
      remove_pid_qty(dude_obj, PID_IGUANA_ON_A_STICK, 1)
   end
   call Node007;
end
procedure Node984 begin
   set_drymeat_karma;
   remove_pid_qty(dude_obj, PID_MEAT_JERKY, 1)
   call Node007;
end
procedure Node983 begin
   set_cody_to_chop_exp;
   load_map(MAP_NEW_RENO_CHOP_SHOP,777);
end
procedure Node982 begin
   check_set_obj_visiblility(self_obj, true);
end

procedure Node002 begin
   Reply(200 + herebefore);
   set_know_cody;
   BOption(202, Node003, -003);
   BOption(203, Node003, -003);
   NOption(207, Node006, 004);
   NOption(208, Node005, 004);
   NOption(209, Node004, 004);
   if (cody_know_car) then begin
      if (get_stolen_car(stolen_car_stolen)) then begin
         NOption(mstr(205) + dude_name + mstr(1205), Node011, -003);
         NOption(211 + chop_shop_known, Node011, 004);
      end else if (car_was_stolen) then begin
         NOption(213, Node011, 004);
      end
      NOption(214, Node009, 004);
   end else if (get_stolen_car(stolen_car_stolen)) then begin
      NOption(dude_name + mstr(204) + dude_name + mstr(1204) + dude_name + mstr(2204), Node008, -003);
      NOption(210, Node008, 004);
   end
   NOption(206, Node999, -003);
   NOption(215, Node999, 004);
end
procedure Node003 begin
   if (Fallout2_enclave_destroyed) then begin
      Reply(220);
      if (self_rep < -100) or has_rep_childkiller then begin
         BOption(223, Node990, -003);
         BOption(225, Node990, 004);
      end
   end else begin
      Reply(221);
   end
   NOption(322, Node990, -003);
   NOption(224, Node990, 004);
end
procedure Node004 begin
   Reply(230);
   NOption(231, Node004, 004);
   NOption(207, Node006, 004);
   NOption(208, Node005, 004);
   if (cody_know_car) then begin
      if (get_stolen_car(stolen_car_stolen)) then begin
         NOption(211 + chop_shop_known, Node011, 004);
      end else if (car_was_stolen) then begin
         NOption(213, Node011, 004);
      end
      NOption(214, Node009, 004);
   end else if (get_stolen_car(stolen_car_stolen)) then begin
      NOption(210, Node008, 004);
   end
   NOption(239, Node999, 004);
end
procedure Node005 begin
variable has_item := false;
   Reply(230);
   if (dude_item_count(PID_NUKA_COLA) > 0) then begin
      has_item := true;
      GOption(251, Node989, 004);
   end
   if (dude_has_booze) then begin
      has_item := true;
      NOption(252, Node003, 004);
   end
   if (dude_item_count(PID_JET) > 0) then begin
      has_item := true;
      BOption(mstr(253 + dude_is_female) + dude_name + mstr(1254), Node988, 004);
   end
   if ((dude_item_count(PID_BUFFOUT) + dude_item_count(PID_PSYCHO)) > 0) then begin
      has_item := true;
      BOption(255, Node987, 004);
   end
   if (has_item == false) then begin
      NOption(257, Node999, 004);
   end
   NOption(256, Node999, 004);
end
procedure Node006 begin
variable has_item := false;
   Reply(230);
   if (dude_item_count(PID_MUTATED_FRUIT) > 0) then begin
      has_item := true;
      GOption(261, Node986, 004);
   end
   if ((dude_item_count(PID_IGUANA_ON_A_STICK) + dude_item_count(PID_MEAT_ON_A_STICK)) > 0) then begin
      has_item := true;
      GOption(262, Node985, 004);
   end
   if (dude_item_count(PID_MEAT_JERKY) > 0) then begin
      has_item := true;
      GOption(263, Node984, 004);
   end
   if (dude_item_count(PID_JET) > 0) then begin
      has_item := true;
      BOption(mstr(253 + dude_is_female) + dude_name + mstr(1254), Node988, 004);
   end
   if ((dude_item_count(PID_BUFFOUT) + dude_item_count(PID_PSYCHO)) > 0) then begin
      has_item := true;
      BOption(255, Node987, 004);
   end
   if (has_item == false) then begin
      NOption(257, Node999, 004);
   end
   NOption(256, Node999, 004);
end
procedure Node007 begin
   Reply(270);
   NOption(271, Node990, 004);
   NOption(272, Node990, 004);
   NOption(273, Node990, 004);
   if (has_rep_slaver) then begin
      BOption(274, Node990, 004);
   end
end
procedure Node008 begin
   set_cody_know_car;
   Reply(280 + (dude_iq >= 4));
   NOption(mstr(282) + dude_name + mstr(1282), Node011, -003);
   NOption(mstr(283) + dude_name + mstr(1283), Node999, -003);
   NOption(284, Node011, 004);
   NOption(214, Node009, 004);
   NOption(286, Node999, 004);
end
procedure Node009 begin
   set_cody_fingered_jules;
   if (jules_dead == false) then begin
      if (know_jules) then begin
         Reply(290);
         NOption(292, Node999, 004);
      end else begin
         Reply(291);
         NOption(mstr(293) + dude_name + mstr(1293) + dude_name + mstr(2293), Node999, 004);
      end
      NOption(294, Node011, 004);
   end else begin
      call Node010;
   end
end
procedure Node010 begin
   Reply(300);
   NOption(301, Node011, 004);
   NOption(302, Node999, 004);
end
procedure Node011 begin
   Reply(310);
   NOption(311, Node983, 001);
   NOption(312, Node982, -003);
   NOption(313, Node999, 004);
end
procedure Node012 begin
   Reply(320 + (dude_wearing_power_armor));
   NOption(322, Node990, -003);
   NOption(224, Node990, 004);
   if (has_rep_slaver) then begin
      BOption(324, Node990, 004);
   end
end
procedure Node013 begin
   Reply(330);
   NOption(322, Node990, -003);
   NOption(224, Node990, 004);
   if (has_rep_slaver) then begin
      BOption(324, Node990, 004);
   end
end
procedure Node014 begin
   Reply(340);
   NOption(322, Node990, -003);
   NOption(224, Node990, 004);
   if (has_rep_slaver) then begin
      BOption(324, Node990, 004);
   end
end
procedure Node015 begin
   Reply(350);
   NOption(322, Node990, -003);
   NOption(224, Node990, 004);
   if (has_rep_slaver) then begin
      BOption(324, Node990, 004);
   end
end
procedure Node016 begin
   Reply(360 + (know_cody == false));
   set_know_cody;
   NOption(362, Node017, -003);
   NOption(363, Node018, -003);
   NOption(364, Node017, 004);
   NOption(365, Node017, 004);
   NOption(366, Node018, 004);
end
procedure Node017 begin
   Reply(370 + node_17);
   inc_node_17;
   NOption(362, Node017, -003);
   NOption(363, Node018, -003);
   NOption(375, Node017, 004);
   NOption(365, Node017, 004);
   NOption(377, Node018, 004);
end
procedure Node018 begin
   Reply(380);
   NOption(381, Node019, -003);
   NOption(382, Node019, 004);
end
procedure Node019 begin
   if (self_rep < 0) or has_rep_childkiller then begin
      Reply(391);
      BOption(393, Node003, -003);
      BOption(395, Node003, 004);
   end else begin
      Reply(390);
      NOption(392, Node999, -003); //edit by killap - was BOption
      NOption(394, Node999, 004); //edit by killap - was BOption
   end
end
