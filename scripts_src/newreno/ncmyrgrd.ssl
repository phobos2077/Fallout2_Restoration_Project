/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name:
        Location: New Reno
        Description:

        Log:

           Created: May 6, 1998

           Updated:
*/

#define WARNING_IGNORE_ALL_CASE                    ((myron_is_dude_companion == false) and (dude_wearing_power_armor == false) and (Fallout2_enclave_destroyed == false) and (dude_family != self_family))
#define WARNING_IGNORE_CASE                        false
#define WARNING_FAMILY_ACTION                      if (dude_is_armed) then begin       \
                                                      call Node006;                    \
                                                      set_warning_on(warning_attack);  \
                                                   end if (dude_is_male) then begin    \
                                                      call Node007;                    \
                                                   end else begin                      \
                                                      call Node008;                    \
                                                   end
#define WARNING_WEAPON_ACTION                      call Node009;
#define WARNING_SNEAK_ACTION                       call Node010;                       \
                                                   set_warning_on(warning_attack);
#define WARNING_ROBOBRAIN_ACTION                   call Node011;
#define WARNING_MARCUS_ACTION                      call Node012;
#define WARNING_LENNY_ACTION                       call Node013;

/* Include Files */
#define SCRIPT_REALNAME "ncmyrgrd"
#include "../headers/define.h"
#define NAME                    SCRIPT_NCMYRGRD
#define TOWN_REP_VAR            GVAR_TOWN_REP_NEW_RENO
#include "../headers/command.h"
#include "../headers/newreno.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;

/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */

#define LVAR_Flags                     (0)

#define self_family                    (family_mordino)

variable warning_result;
variable prev_node;
import variable myron_guard_obj;

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */

/* Local variables which do not need to be saved between map changes. */


procedure start begin
end

procedure timed_event_p_proc begin
   set_is_float;
   if (fixed_param == warning_loop_param) then begin
      check_all_warnings
      call_warning_loop;
   end else if (fixed_param == tamper_door_param) then begin
      if ((myron_permission) or (dude_family == self_family)) then begin
         call Node002;
      end else begin
         call Node003;
      end
   end else begin
      if (self_can_see_dude) then begin
         if (combat_is_initialized == false) then begin
            set_is_float;
            check_all_warnings
            if (warning_result == warning_result_none) then begin
               if (myron_is_dude_companion) then begin
                  call Node004;
               end else if (self_family == dude_family) then begin
                  call Node005;
               end else if ((dude_is_female) and ((dude_has_porn_star_rep) or (dude_charisma > 5))) then begin
                  call Node014;
               end else if (has_rep_slaver) then begin
                  call Node015;
               end else if (myron_left_stables) then begin
                  call Node016;
               end else begin
                  call Node017;
               end
            end
         end
      end
      nr_add_timer_event_rand(self_obj, 25, 35, float_param);
   end
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
      if (map_first_run) then begin
         set_self_team(TEAM_NEW_RENO_MORDINO);
         set_self_ai(AI_TOUGH_GUARD);
      end
      nr_add_timer_event_rand(self_obj, 25, 35, float_param);
      call_warning_loop;
   end
end

procedure critter_p_proc begin
   if (self_can_see_dude) then begin
      if ((hostile) or (warned_attack) or ((dude_is_made_man) and (self_family != dude_family)) or ((myron_dead) and (myron_left_stables == false))) then begin
         self_attack_dude;
      end else set_new_reno_watcher(myron_guard_obj)
   end else if (myron_called_guards) then begin
//      Follow_Dude(1, 1)
      self_attack_dude; //fix by killap
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

procedure talk_p_proc begin

   set_is_click;
   check_all_warnings
   if (warning_result == warning_result_none) then begin
      if (myron_is_dude_companion) then begin
         call Node004;
      end else if ((myron_left_stables) or (myron_dead)) then begin
         start_dialog_at_node(Node032);
      end else if ( (myron_permission) or (myron_date) or (self_family == dude_family)) then begin
         start_dialog_at_node(Node031);
      end else begin
         start_dialog_at_node(Node018);
      end
   end
   set_herebefore;
   nr_add_timer_event_rand(self_obj, 25, 35, float_param);
end

procedure destroy_p_proc begin
   if (myron_guard_obj == self_obj) then begin
      myron_guard_obj := 0;
   end
   inc_evil_critter
   dec_family_counter(self_family);
   set_myron_guard_dead;
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(100);
end

procedure description_p_proc begin
   script_overrides;
   display_mstr_rand(150, 150 + (2*know_myron));
   set_examined;
end

procedure use_skill_on_p_proc begin
end

procedure Node998 begin
   if (hostile == false) then begin
      set_hostile;
   end
end
procedure Node999 begin
end

#define is_insert_message(x)  ((x == 225) or (x == 236) or        \
                               ((240 <= x) and (x <= 241)))

procedure Node001 begin
   if (warned_tamper) then begin
      set_warning_on(warning_attack);
   end else begin
      set_warning_on(warning_tamper);
      floater_bad(200);
   end
end
procedure Node002 begin
   floater_rand(205, 206);
end
procedure Node003 begin
   if (warned_myron_door) then begin
      set_warning_on(warning_attack);
   end else begin
      set_warning_on(warning_myron_door);
      floater_bad_rand(210, 211);
   end
end
procedure Node004 begin
   floater_rand(215, 218);
end
procedure Node005 begin
   floater_rand_with_check(225, 225, made_man_name, 5000);
end
procedure Node006 begin
   float_msg(self_obj, mstr(230) + made_man_name + mstr(5230), FLOAT_COLOR_BAD);
   call Node998;
end
procedure Node007 begin
   floater_rand_with_check(235, 236, dude_family_name, 5000);
end
procedure Node008 begin
   floater_rand_with_check(240, 241, dude_family_name, 5000);
end
procedure Node009 begin
   floater_bad(245);
end
procedure Node010 begin
   floater_bad(250);
end
procedure Node011 begin
   floater_bad_rand(260, 262);
end
procedure Node012 begin
   floater_bad_rand(270, 272);
end
procedure Node013 begin
   floater_bad_rand(280, 282);
end
procedure Node014 begin
   floater_rand(290, 293);
end
procedure Node015 begin
   floater_bad(300);
end
procedure Node016 begin
   floater(305);
end
procedure Node017 begin
   floater_rand(310, 313);
end
procedure Node018 begin
   if (dude_is_male) then begin
      Reply(320);
   end else if (dude_has_porn_star_rep) then begin
      Reply(321);
   end else begin
      Reply(322 + (dude_charisma > 5));
   end
   NOption(324, Node019, -003);
   BOption(325, Node019, -003);
   BOption(326, Node019, -003);
   NOption(327, Node999, -003);
   if (know_myron) then begin
      NOption(329, Node022, 004);
      if (dude_has_id_badge) then begin
         NOption(330, Node026, 004);
      end
   end
   if (dude_is_female) then begin
      if (myron_kitty) then begin //was(know_myron_whores)
         NOption(331, Node028, 004);   //was Node029 - killap
      end else if ((dude_charisma > 5) or (dude_has_porn_star_rep)) then begin
         GOption(332, Node027, 004);
         NOption(333, Node030, 004);
      //added by killap - fail pretty looking check
      end else begin
         GOption(332, Node029, 004);
      end
      //end added by killap
   end else begin
      BOption(328, Node021, 004);
   end
   NOption(334, Node999, 004);
   prev_node := 18;
end
procedure Node019 begin
   Reply(350);
   BOption(351, Node020, -003);
   BOption(352, Node020, -003);
   BOption(353, Node020, -003);
   NOption(354, Node999, -003);
   prev_node := 19;
end
procedure Node020 begin
   //Reply(360 + (dude_iq > 3)); //comment out by killap
   Reply(random(360,361)); //added by killap
   //NOption(361, Node998, -003); //comment out by killap
   BOption(mstr(362) + dude_name + mstr(363), Node998, -003); //edit by killap - was NOption
   BOption(365, Node998, 004); //edit by killap - was NOption
   BOption(364, Node998, 001); //edit by killap - was NOption
   prev_node := 20;
end
procedure Node021 begin
   Reply(370 + dude_is_female);
   if (know_myron) then begin
      NOption(329, Node022, 004);
      if (dude_has_id_badge) then begin
         NOption(330, Node026, 004);
      end
   end
   BOption(374, Node024, 004);
   NOption(375, Node999, 004);
   prev_node := 21;
end
procedure Node022 begin
   Reply(380);
   if (know_myron) then begin
      NOption(381, Node023, 004);
      if (dude_has_id_badge) then begin
         NOption(330, Node026, 004);
      end
   end
   BOption(374, Node024, 004);
   NOption(375, Node999, 004);
   prev_node := 22;
end
procedure Node023 begin
   Reply(390);
   if (know_myron) then begin
      NOption(391, Node024, 004);
      if (dude_has_id_badge) then begin
         NOption(330, Node026, 004);
      end
   end
   BOption(374, Node024, 004);
   NOption(375, Node999, 004);
   prev_node := 23;
end
procedure Node024 begin
   Reply(400);
   BOption(401 + (check_general_rep < 0), Node025, 004);
   if (dude_has_id_badge) then begin
      NOption(330, Node026, 004);
   end
   NOption(404, Node999, 004);
   prev_node := 24;
end
procedure Node025 begin
   Reply(361);
   BOption(411, Node998, 004);
   BOption(412, Node998, 004);
   prev_node := 25;
end
procedure Node026 begin
   set_myron_permission;
   Reply(425);
   NOption(426, Node999, 004);
   prev_node := 26;
end
procedure Node027 begin
   Reply(435);
   NOption(436, Node028, 004);
   NOption(437, Node028, 004);
   prev_node := 27;
end
procedure Node028 begin
   set_myron_permission;
   if (myron_date) then //added by killap
      Reply(480);
   else
      Reply(445 + dude_is_male);
   NOption(447, Node999, 004);
   prev_node := 28;
end
procedure Node029 begin
   Reply(455);
   BOption(381, Node023, 004);
   if (dude_has_id_badge) then begin
      NOption(457, Node026, 004);
   end
   NOption(458, Node999, 004);
   prev_node := 29;
end
procedure Node030 begin
   Reply(465);
   NOption(466, Node021, 004);
   if (know_myron) then begin
      NOption(329, Node022, 004);
      if (dude_has_id_badge) then begin
         NOption(330, Node026, 004);
      end
   end
   NOption(334, Node999, 004);
   prev_node := 30;
end
procedure Node031 begin
   if (self_family != dude_family) then begin
      Reply(475);
   end else begin
      Reply(mstr(225) + made_man_name + mstr(5476));
   end
   if (myron_date) then //added by killap - expansion
      NOption(479, Node028, 004);
   else
      NOption(477, Node028, 004);
   NOption(478, Node999, 004);
   prev_node := 31;
end
procedure Node032 begin
   if (self_family != dude_family) then begin
      Reply(485);
   end else begin
      Reply(mstr(225) + made_man_name + mstr(5486));
   end
   NOption(487, Node033, 004);
   NOption(404, Node999, 004);
   prev_node := 32;
end
procedure Node033 begin
   Reply(495);
   NOption(404, Node999, 004);
   prev_node := 33;
end
