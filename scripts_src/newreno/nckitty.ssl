/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Kitty
        Location: New Reno
        Description:

        Log:

           Created: May 6, 1998

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "nckitty"
#include "../headers/define.h"
#define NAME                    SCRIPT_NCKITTY
#define TOWN_REP_VAR            GVAR_TOWN_REP_NEW_RENO
#include "../headers/command.h"
#include "../headers/newreno.h"
#include "../headers/modreact.h"
#include "../headers/newr1.h" //added by killap

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;

/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */

#define LVAR_Flags                     (4)
#define LVAR_Date                      (5)
#define LVAR_Home_Tile                 (6)
#define LVAR_Home_Rotation             (7)

#define node_24_bit                    bit_10
#define speech_bonus_given_bit         bit_11
//#define myron_date_bit                 bit_12 -now part of newreno.h (killap - expansion)

#define node_24                        lvar_bit(LVAR_Flags, node_24_bit)
#define set_node_24                    set_lvar_bit_on(LVAR_Flags, node_24_bit)

#define speech_bonus_given             lvar_bit(LVAR_Flags, speech_bonus_given_bit)
#define set_speech_bonus_given         if (speech_bonus_given == false) then begin              \
                                          critter_mod_skill(dude_obj, SKILL_SPEECH, 3);     \
                                       end                                                      \
                                       set_lvar_bit_on(LVAR_Flags, speech_bonus_given_bit)

//commented out below - now part of newreno.h - killap expansion
//#define myron_date                     lvar_bit(LVAR_Flags, myron_date_bit)
//#define set_myron_date                 if (myron_date == false) then begin             \
//                                          give_xp(EXP_NEW_RENO_WHORE_FOR_MYRON);       \
//                                       end                                             \
//                                       set_lvar_bit_on(LVAR_Flags, myron_date_bit)

#define amt_to_cost(x)                 (((x * (100 - ((dude_charisma) + (10 * get_jules_kitty(jules_kitty_discount)) + (25 * ((dude_is_prizefighter) or (dude_has_porn_star_rep))))))/100) * ((Fallout2_enclave_destroyed == false) and (dude_is_made_man == false)))

#define talk_cost                      amt_to_cost(100)
#define blow_job_cost                  amt_to_cost(100)
#define sex_cost                       amt_to_cost(200)
#define strange_sex_cost               amt_to_cost(500)

#define DATE_NONE                      (0)
#define DATE_TRUE                      (1)
#define DATE_DONE                      (2)
#define get_date(x)                    (local_var(LVAR_Date) == x)
#define set_date(x)                    if ((x == DATE_DONE) and (get_date(DATE_TRUE))) then begin        \
                                          inc_reno_rep(REP_NEW_RENO_KITTY_DATE);                         \
                                          set_critter_stat(dude_obj, STAT_ag, 1);/*edit by killap - was dude_agility+1 */ \
                                          display_msg(mstr(900));    /*added by killap - RP*/   \
                                       end                                                               \
                                       if (local_var(LVAR_Date) < x) then set_local_var(LVAR_Date, x)

#define know_kitty                     herebefore
#define set_know_kitty                 set_herebefore

#define possible_sex_partners          (true_party_size - Cyberdog_In_Party - Goris_In_Party - Dogmeat_In_Party - K9_In_Party - Pariah_Dog_In_Party - Robobrain_Abnormal_In_Party - Robobrain_Chimp_In_Party - Laddie_In_Party)

#define sex_blow_job                   (700)
#define sex_sex                        (701)
#define sex_talk                       (702)
#define sex_strange_sex                (703)

#define cp_sex_tile_1                  (25691)
#define cp_sex_tile_2                  (25486)
#define cp_sex_tile_3                  (24282)
#define cp_sex_tile_4                  (22881)
#define cp_sex_tile_5                  (21283)
#define cp_sex_tile_6                  (21290)
#define place_obj_in_rand_room(x)      the_temp := random(1,6);                                 \
                                       if (the_temp == 1) then begin                            \
                                          the_temp := cp_sex_tile_1;                            \
                                       end else if (the_temp == 2) then begin                   \
                                          the_temp := cp_sex_tile_2;                            \
                                       end else if (the_temp == 3) then begin                   \
                                          the_temp := cp_sex_tile_3;                            \
                                       end else if (the_temp == 4) then begin                   \
                                          the_temp := cp_sex_tile_4;                            \
                                       end else if (the_temp == 5) then begin                   \
                                          the_temp := cp_sex_tile_5;                            \
                                       end else begin                                           \
                                          the_temp := cp_sex_tile_6;                            \
                                       end                                                      \
                                       critter_attempt_placement(x, the_temp, self_elevation)


#define check_party_applaude(x)                                                        \
         if ((x != 0) and (sex_partner_obj != x)) then begin                           \
            if (x == Cyberdog_Ptr) then begin                                          \
               float_msg(x, mstr(750), FLOAT_COLOR_NORMAL);                            \
            end else if (x == Robobrain_Ptr) then begin                                \
               float_msg(x, mstr(760), FLOAT_COLOR_NORMAL);                            \
            end else if ((x == Davin_Ptr) or (x == Miria_Ptr)) then begin              \
               float_msg(x, mstr(random(730, 731)), FLOAT_COLOR_NORMAL);               \
            end else if (x == Goris_Ptr) then begin                                    \
               float_msg(x, mstr(740), FLOAT_COLOR_NORMAL);                            \
            end else if ((x == Vic_Ptr) and (sex_partner_obj == dude_obj)) then begin  \
               float_msg(x, mstr(770), FLOAT_COLOR_NORMAL);                            \
            end else if (random(1,5) != 3) then begin                                  \
               float_msg(x, mstr(random(720, 723)), FLOAT_COLOR_NORMAL);               \
            end                                                                        \
         end
#define party_claps                    if (sex_partner_obj != 0) then begin      \
                                          check_party_applaude(dude_obj)         \
                                          check_party_applaude(Myron_Ptr)        \
                                          check_party_applaude(Marcus_Ptr)       \
                                          check_party_applaude(MacRae_Ptr)       \
                                          check_party_applaude(Vic_Ptr)          \
                                          check_party_applaude(Sulik_Ptr)        \
                                          check_party_applaude(Lenny_Ptr)        \
                                          check_party_applaude(Cyberdog_Ptr)     \
                                          check_party_applaude(Doc_Ptr)          \
                                          check_party_applaude(Goris_Ptr)        \
                                          check_party_applaude(Davin_Ptr)        \
                                          check_party_applaude(Miria_Ptr)        \
                                          check_party_applaude(Robobrain_Ptr)    \
                                          check_party_applaude(Dex_Ptr)          \
                                          check_party_applaude(Cat_Jules_Ptr)    \
                                          check_party_applaude(Kitsune_Ptr)      \
                                       end

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */

/* Local variables which do not need to be saved between map changes. */

variable sex_partner_obj;
variable temp_cost;
variable sex_type;
variable the_temp;

procedure start begin
end

procedure push_p_proc begin
   if (self_tile == local_var(LVAR_Home_Tile)) then begin
      script_overrides;
   end
end

procedure timed_event_p_proc begin
   if (fixed_param == float_param) then begin
      if ((combat_is_initialized == false) and (random(1,3) != 2)) then begin
         call Node001;
      end
   end else if (fixed_param == post_sex_param) then begin
      party_claps
   end else if (fixed_param == kitty_sex_param) then begin
      floater(704);
   end else if (fixed_param == no_whore_floats_param) then begin
      off_no_whore_floats;
   end
   nr_add_timer_event_rand(self_obj, 25, 35, float_param);
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
      if (map_first_run) then begin
         set_self_team(TEAM_NEW_RENO_CAT_PAW);
         set_self_ai(AI_TOUGH_CITIZEN);
         set_local_var(LVAR_Home_Tile, self_tile);
         set_local_var(LVAR_Home_Rotation, self_cur_rot);
      end
      nr_add_timer_event_rand(self_obj, 25, 35, float_param);
   end
end

procedure critter_p_proc begin
   if (self_can_see_dude) then begin
      if (hostile) then begin
         self_attack_dude;
      end
   end else if (self_tile != local_var(LVAR_Home_Tile)) then begin
      self_walk_to_tile(local_var(LVAR_Home_Tile));
   end else if (self_cur_rot != local_var(LVAR_Home_Rotation)) then begin
      self_rotate(local_var(LVAR_Home_Rotation));
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

procedure talk_p_proc begin
   sex_partner_obj := dude_obj;
   if (Fallout2_enclave_destroyed) then begin
      start_dialog_at_node(Node024);
   end else begin
      start_dialog_at_node(Node002);
   end
   nr_add_timer_event_rand(self_obj, 25, 35, float_param);
end

procedure destroy_p_proc begin
   inc_good_critter
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(100);
end

procedure description_p_proc begin
   script_overrides;
   display_mstr(150);
   set_examined;
end

procedure use_skill_on_p_proc begin
end

procedure Node998 begin
   if (hostile == false) then begin
      set_hostile;
   end
end
procedure Node999 begin
end

procedure Node990 begin
   set_jules_kitty(jules_kitty_discount);
   call Node004;
end
procedure Node989 begin
   if (Vic_Ptr != 0) then begin
      sex_partner_obj := Vic_Ptr;
      call Node015;
   end else if (Myron_Ptr != 0) then begin
      sex_partner_obj := Myron_Ptr;
      call Node031;
   end else if (Marcus_Ptr != 0) then begin
      sex_partner_obj := Marcus_Ptr;
      call Node031;
   end else if (MacRae_Ptr != 0) then begin
      sex_partner_obj := MacRae_Ptr;
      call Node015;
   end else if (Sulik_Ptr != 0) then begin
      sex_partner_obj := Sulik_Ptr;
      call Node015;
   end else if (Lenny_Ptr != 0) then begin
      sex_partner_obj := Lenny_Ptr;
      call Node031;
   end else if (Doc_Ptr != 0) then begin
      sex_partner_obj := Doc_Ptr;
      call Node015;
   end else if (Davin_Ptr != 0) then begin
      sex_partner_obj := Davin_Ptr;
      call Node015;
   end else if (Miria_Ptr != 0) then begin
      sex_partner_obj := Miria_Ptr;
      call Node015;
   end else if (Robobrain_Ptr != 0) then begin
      sex_partner_obj := Robobrain_Ptr;
      call Node031;
   //added by killap - expansion
   end else if (Robobrain_Human_Ptr != 0) then begin
      sex_partner_obj := Robobrain_Human_Ptr;
      call Node015;
   end
   else if (Dex_Ptr != 0) then begin
      sex_partner_obj := Dex_Ptr;
      call Node015;
   end else if (Cat_Jules_Ptr != 0) then begin
      sex_partner_obj := Cat_Jules_Ptr;
      call Node015;
   end else if (Kitsune_Ptr != 0) then begin
      sex_partner_obj := Kitsune_Ptr;
      call Node015;
   end
   //end added
end
procedure Node988 begin
   gfade_out(ONE_GAME_SECOND);
      set_no_whore_floats;
      nr_add_timer_event(self_obj, 5, no_whore_floats_param);
      if (temp_cost > 0) then begin
         dude_caps_adjust(-temp_cost);
      end
      if (sex_type == sex_blow_job) then begin
         game_time_advance(have_sex_time / 2);
         call create_and_use_itempid_on(sex_partner_obj, PID_KITTY_SEX_DRUG_STRENGTH);
      end else if (sex_type == sex_talk) then begin
         game_time_advance(ONE_GAME_HOUR * 3);
         set_speech_bonus_given;
         display_mstr(710);
         call create_and_use_itempid_on(sex_partner_obj, PID_KITTY_SEX_DRUG_INTELLIGENCE);
      end else if (sex_type == sex_strange_sex) then begin
         game_time_advance(have_sex_time * 2);
         call create_and_use_itempid_on(sex_partner_obj, PID_KITTY_SEX_DRUG_STRENGTH);
      end else begin
         game_time_advance(have_sex_time_obj(sex_partner_obj));
         if (sex_partner_obj != dude_obj) then begin
            call create_and_use_itempid_on(sex_partner_obj, PID_KITTY_SEX_DRUG_STRENGTH);
         end else begin
            call create_and_use_itempid_on(sex_partner_obj, PID_KITTY_SEX_DRUG_AGILITY);
         end
      end
      if (sex_partner_obj == dude_obj) then begin
         if (sex_type != sex_talk) then
            up_sex_status;
      end
      //added by killap - RP
      if (sex_partner_obj == Dex_Ptr) then begin
         float_msg(sex_partner_obj, mstr(random(706,709)), FLOAT_COLOR_NORMAL);
      //end added
      end else if (sex_partner_obj != Marcus_Ptr) then begin
         float_msg(sex_partner_obj, mstr(sex_type), FLOAT_COLOR_NORMAL);
      end else begin
         set_marcus_laid;
         float_msg(sex_partner_obj, mstr(705), FLOAT_COLOR_NORMAL);
      end
      nr_add_timer_event(self_obj, 1, post_sex_param);
      place_obj_in_rand_room(sex_partner_obj);
   gfade_in(ONE_GAME_SECOND);
end
procedure Node987 begin
   sex_partner_obj := Lenny_Ptr;
   call Node031;
end
procedure Node986 begin
   sex_partner_obj := Marcus_Ptr;
   call Node031;
end
procedure Node985 begin
   sex_partner_obj := Myron_Ptr;
   call Node031;
end
procedure Node984 begin
   sex_partner_obj := Sulik_Ptr;
   call Node015;
end
procedure Node983 begin
   sex_partner_obj := MacRae_Ptr;
   call Node015;
end
procedure Node982 begin
   sex_partner_obj := Vic_Ptr;
   call Node015;
end
procedure Node981 begin
   sex_partner_obj := Robobrain_Ptr;
   call Node031;
end
procedure Node980 begin
   sex_partner_obj := Doc_Ptr;
   call Node015;
end
procedure Node979 begin
   sex_partner_obj := Davin_Ptr;
   call Node015;
end
procedure Node978 begin
   sex_partner_obj := Miria_Ptr;
   call Node015;
end

//added by killap - expansion
procedure Node991 begin
   sex_partner_obj := Dex_Ptr;
   call Node015;
end

procedure Node992 begin
   sex_partner_obj := Cat_Jules_Ptr;
   call Node015;
end

procedure Node993 begin
   sex_partner_obj := Kitsune_Ptr;
   call Node015;
end

procedure Node994 begin
   sex_partner_obj := Robobrain_Human_Ptr;
   call Node015;
end
//end added

procedure Node977 begin
   gfade_out(ONE_GAME_SECOND);
   up_sex_status;
   game_time_advance(ONE_GAME_HOUR * 12);
   nr_add_timer_event(self_obj, 1, kitty_sex_param);
   set_date(DATE_DONE); //added by killap - RP
   gfade_in(ONE_GAME_SECOND);
end
procedure Node976 begin
   gfade_out(ONE_GAME_SECOND);
      display_mstr(711);
      set_myron_date;
      game_time_advance(2 * ONE_GAME_HOUR);
   gfade_in(ONE_GAME_SECOND);
   load_map(MAP_NEW_RENO_STABLES,0);
end

procedure Node001 begin
   floater_rand(200, 206);
end
procedure Node002 begin
variable temp_msg;
   if (know_kitty) then begin
      if (dude_is_prizefighter) then begin
         temp_msg := mstr(217);
      end else if (dude_has_porn_star_rep) then begin
         temp_msg := mstr(219);
      end else if (dude_is_made_man) then begin
         temp_msg := mstr(218) + dude_family_name + mstr(1218);
      end else begin
         temp_msg := mstr(216);
      end
   end else begin
      temp_msg := mstr(215);
      set_know_kitty;
   end
   Reply(temp_msg + mstr(220 + dude_is_female));
   NOption(222, Node003, -003);
   NOption(223, Node003, -003);
   if (dude_is_male) then begin
      NOption(224, Node003, -003);
   end
   NOption(225, Node999, -003);
   if (get_jules_kitty(jules_kitty_refer)) then begin
      NOption(226, Node990, 004);
   end
   NOption(227, Node004, 004);
   NOption(228, Node012, 004);
   if get_magazines(MAGAZINES_NOTHING) then begin
      if (dude_item_count(PID_CATS_PAW) > 0) then begin
         NOption(229, Node016, 004);
      end
   end else if get_magazines(MAGAZINES_ASSIGNED) then begin
      if (dude_item_count(PID_CATS_PAW) >= 10) then begin
         NOption(230, Node019, 004);
      end
   end
   NOption(231, Node999, 004);
end
procedure Node003 begin
   Reply(240);
   NOption(241, Node999, -003);
end
procedure Node004 begin
   Reply(245);
   if ((get_date(DATE_NONE)) and (Fallout2_enclave_destroyed == false)) then begin
      if (dude_charisma > 8) then begin
         NOption(246, Node005, 004);
      end
   end
   NOption(247, Node007, 004);
   if (possible_sex_partners == 1) then begin
      NOption(248, Node989, 004);
   end else if (possible_sex_partners > 0) then begin
      NOption(249, Node014, 004);
   end
   NOption(250, Node012, 004);
   NOption(251, Node999, 004);
end
procedure Node005 begin
   Reply(255);
   NOption(256 + dude_is_female, Node006, 004);
   if (dude_has_power_armor) then begin
      NOption(258, Node006, 004);
   end
   NOption(259, Node012, 004);
   NOption(260, Node999, 004);
end
procedure Node006 begin
   set_date(DATE_TRUE);
   Reply(265);
   NOption(266, Node012, 004);
   NOption(267, Node999, 004);
end
procedure Node007 begin
   Reply(275);
   NOption(276, Node008, 004);
   NOption(277 + (dude_charisma > 5), Node009, 004);
   NOption(279, Node010, 004);
   NOption(280, Node013, 007);
   NOption(250, Node012, 004);
   NOption(251, Node999, 004);
end
procedure Node008 begin
   sex_type := sex_blow_job;
   temp_cost := blow_job_cost;
   sex_partner_obj := dude_obj;
   if (temp_cost > 0) then begin
      Reply(mstr(290) + mstr(292) + temp_cost + mstr(422));
      if (dude_caps >= temp_cost) then begin
         NOption(293, Node988, 004);
      end else begin
         NOption(296, Node999, 004);
      end
   end else begin
      Reply(mstr(290) + mstr(291));
      NOption(294, Node988, 004);
   end
   NOption(295, Node012, 004);
   NOption(251, Node999, 004);
end
procedure Node009 begin
   sex_type := sex_sex;
   temp_cost := sex_cost;
   sex_partner_obj := dude_obj;
   if (temp_cost > 0) then begin
      Reply(mstr(290) + mstr(292) + temp_cost + mstr(422));
      if (dude_caps >= temp_cost) then begin
         NOption(293, Node988, 004);
      end else begin
         NOption(296, Node999, 004);
      end
   end else begin
      Reply(mstr(290) + mstr(291));
      NOption(294, Node988, 004);
   end
   NOption(295, Node012, 004);
   NOption(251, Node999, 004);
end
procedure Node010 begin
   sex_type := sex_talk;
   temp_cost := talk_cost;
   sex_partner_obj := dude_obj;
   if (temp_cost > 0) then begin
      Reply(mstr(320) + mstr(322) + temp_cost + mstr(422));
      if (dude_caps >= temp_cost) then begin
         NOption(293, Node988, 004);
      end else begin
         NOption(296, Node999, 004);
      end
   end else begin
      Reply(mstr(320) + mstr(291));
      NOption(325, Node988, 004);
   end
   NOption(323, Node011, 008);
   NOption(326, Node012, 004);
   NOption(251, Node999, 004);
end
procedure Node011 begin
   if (temp_cost > 0) then begin
      Reply(mstr(335) + mstr(336) + temp_cost + mstr(1336));
      if (dude_caps >= temp_cost) then begin
         NOption(mstr(338) + temp_cost + mstr(422), Node988, 004);
      end else begin
         NOption(296, Node999, 004);
      end
   end else begin
      Reply(mstr(335) + mstr(337));
      NOption(294, Node988, 004);
   end
   NOption(340, Node012, 004);
   NOption(251, Node999, 004);
end

procedure Node012 begin
   Reply_Rand(350, 353);
   if ((myron_kitty) and (myron_date == false)) then begin
      if ((myron_left_stables == false) and (Myron_In_Party == false)) then begin
         NOption(354, Node028, 004);
      end
   end
   if (get_jules_kitty(jules_kitty_refer)) then begin
      NOption(226, Node990, 004);
   end
   NOption(227, Node004, 004);
   if (possible_sex_partners == 1) then begin
      NOption(248, Node989, 004);
   end else if (possible_sex_partners > 0) then begin
      NOption(249, Node014, 004);
   end
   if (get_magazines(MAGAZINES_NOTHING)) then begin
      if (dude_item_count(PID_CATS_PAW) > 0) then begin
         NOption(229, Node016, 004);
      end
   end else if (get_magazines(MAGAZINES_ASSIGNED)) then begin
      if (dude_item_count(PID_CATS_PAW) >= 10) then begin
         NOption(230, Node019, 004);
      end
   end
   NOption(361, Node999, 004);
end
procedure Node013 begin
   sex_partner_obj := dude_obj;
   Reply(375);

   //edit by killap - added check
   if (dude_is_male) then
      NOption(random(376, 378), Node031, 004);
   else
      NOption(random(379, 380), Node031, 004);

   //NOption(random(376, 380), Node031, 004);
   if (angela_known) then begin
      NOption(381, Node031, 004);
   end
   if (mrs_bishop_known) then begin
      NOption(382, Node031, 004);
   end
   NOption(383, Node012, 004);
   NOption(384, Node999, 004);
end
procedure Node014 begin
   Reply(395);
   if (Vic_In_Party) then begin
      NOption(401, Node982, 004);
   end
   if (Myron_In_Party) then begin
      NOption(398, Node985, 004);
   end
   if (Lenny_In_Party) then begin
      NOption(396, Node987, 004);
   end
   if (MacRae_In_Party) then begin
      NOption(400, Node983, 004);
   end
   if (Sulik_In_Party) then begin
      NOption(399, Node984, 004);
   end
   if (Marcus_In_Party) then begin
      NOption(397, Node986, 004);
   end
   if (Doc_In_Party) then begin
      NOption(403, Node980, 004);
   end
   if (Davin_In_Party) then begin
      NOption(404, Node979, 004);
   end
   if (Miria_In_Party) then begin
      NOption(405, Node978, 004);
   end
   if (Robobrain_In_Party) then begin
      NOption(402, Node981, 004);
   end
   //added Robobrain_Human_In_Party - killap (expansion)
   if (Robobrain_Human_In_Party) then begin
      NOption(402, Node994, 004);
   end
   if (Dex_In_Party) then begin
      NOption(407, Node991, 004);
   end

   if (Cat_Jules_In_Party) then begin
      NOption(408, Node992, 004);
   end

   if (Kitsune_In_Party) then begin
      NOption(409, Node993, 004);
   end


   NOption(406, Node999, 004);
end
procedure Node015 begin
   sex_type := sex_strange_sex;
   temp_cost := sex_cost;
   if (temp_cost > 0) then begin
      Reply(mstr(420 + (possible_sex_partners == 1)) + temp_cost + mstr(422));
      if (dude_caps >= temp_cost) then begin
         NOption(424, Node988, 004);
      end else begin
         NOption(427, Node999, 004);
      end
   end else begin
      Reply(mstr(420 + (possible_sex_partners == 1)) + mstr(423));
      NOption(425, Node988, 004);
   end
   NOption(426, Node012, 004);
   NOption(428, Node999, 004);
end
procedure Node016 begin
   Reply(440);
   NOption(441 + (dude_iq > 4), Node017, 001);
end
procedure Node017 begin
   Reply(450);
   NOption(451, Node018, 004);
   NOption(452, Node018, 004);
end
procedure Node018 begin
   set_magazines(MAGAZINES_ASSIGNED);
   Reply(460);
   NOption(461, Node012, 004);
   if (dude_item_count(PID_CATS_PAW) >= 10) then begin
      NOption(462, Node019, 004);
   end
   NOption(463, Node999, 004);
end
procedure Node019 begin
   Reply(470);
   NOption(471, Node020, 004);
   NOption(472, Node022, 004);
   NOption(473, Node012, 004);
   NOption(474, Node999, 004);
end
procedure Node020 begin
   Reply(480);
   NOption(481, Node021, 004);
   NOption(482, Node012, 004);
   NOption(483, Node999, 004);
end
procedure Node021 begin
   dude_caps_adjust(750);
   remove_pid_qty(dude_obj, PID_CATS_PAW, 10)
   set_magazines(MAGAZINES_DONE);
   Reply(490);
   NOption(491, Node012, 004);
   NOption(492, Node999, 004);
end
procedure Node022 begin
   Reply(500);
   NOption(501 + dude_is_female, Node023, 004);
end
procedure Node023 begin
   give_pid_qty(dude_obj, PID_CATS_PAW_ISSUE_5, 1)
   dude_caps_adjust(500);
   remove_pid_qty(dude_obj, PID_CATS_PAW, 10)
   set_magazines(MAGAZINES_DONE);
   Reply(510);
   NOption(511, Node012, 004);
   NOption(512, Node999, 004);
end
procedure Node024 begin
   if (node_24) then begin
      Reply(dude_name + mstr(522));
   end else begin
      Reply(520 + (know_kitty == false));
      set_know_kitty;
      set_node_24;
   end
   if (check_general_rep >= 0) then begin
      if (dude_is_male) then begin
         NOption(523, Node025, 004);
         NOption(528, Node025, 004);
      end else begin
         NOption(525, Node025, 004);
         NOption(527, Node025, 004);
      end
   end else begin
      if (dude_is_male) then begin
         NOption(524, Node025, 004);
      end else begin
         NOption(526, Node025, 004);
      end
      NOption(529, Node025, 004);
   end
end
procedure Node025 begin
   if (check_general_rep >= 0) then begin
      Reply(mstr(545) + mstr(547));
      if (get_date(DATE_TRUE)) then begin
         NOption(548, Node026, 004);
      end
      NOption(549, Node026, 004);
      NOption(551, Node012, 004);
      NOption(552, Node999, 004);
   end else begin
      Reply(mstr(546) + mstr(547));
      if (get_date(DATE_TRUE)) then begin
         NOption(548, Node026, 004);
      end
      NOption(550, Node027, 004);
      NOption(551, Node012, 004);
      NOption(553, Node999, 004);
   end
end
procedure Node026 begin
   Reply(mstr(565) + dude_name + mstr(566));
   NOption(567, Node977, 004);
   if (dude_is_female) then begin
      NOption(569, Node977, 004);
      NOption(570, Node977, 004);
   end else if ((dude_item_count(PID_BLUE_CONDOM) + dude_item_count(PID_GREEN_CONDOM) + dude_item_count(PID_RED_CONDOM)) > 0) then begin
      NOption(568, Node977, 004);
   end
end
procedure Node027 begin
   Reply(mstr(575) + dude_name + mstr(576));
   NOption(577, Node977, 004);
end
procedure Node028 begin
   Reply(585);
   if (dude_is_female) then begin
      NOption(586, Node029, 004);
   end
   NOption(587, Node012, 004);
   NOption(588, Node999, 004);
end
procedure Node029 begin
   if (dude_charisma > 5) then begin
      Reply(mstr(595) + mstr(597));
      NOption(598, Node030, 004);
      NOption(600, Node012, 004);
   end else begin
      Reply(mstr(595) + mstr(596));
      NOption(599, Node012, 004);
   end
   NOption(588, Node999, 004);
end
procedure Node030 begin
   Reply(610);
   NOption(611, Node976, 004);
   NOption(612, Node012, 004);
   NOption(613, Node999, 004);
end
procedure Node031 begin
   sex_type := sex_strange_sex;
   temp_cost := strange_sex_cost; // Seraph's Fix: changed 'sex_strange_sex' to 'strange_sex_cost'
   if (temp_cost > 0) then begin
      Reply(mstr(620 + (sex_partner_obj != dude_obj)) + temp_cost + mstr(422));
      if (dude_caps >= temp_cost) then begin
         NOption(424, Node988, 004);
      end else begin
         NOption(427, Node999, 004);
      end
   end else begin
      Reply(mstr(620 + (sex_partner_obj != dude_obj)) + mstr(623));
      NOption(425, Node988, 004);
   end
   NOption(426, Node012, 004);
   NOption(428, Node999, 004);
end
