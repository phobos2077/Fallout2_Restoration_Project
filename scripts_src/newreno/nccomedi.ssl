/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name:
        Location: Den
        Description:

        Log:

           Created: August 22, 1998

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "nccomedi"
#include "../headers/define.h"
#define NAME                     SCRIPT_NCCOMEDI
#define TOWN_REP_VAR             GVAR_TOWN_REP_NEW_RENO
#include "../headers/command.h"
#include "../headers/newreno.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;
procedure combat_p_proc;
procedure map_update_p_proc;

procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

#define LVAR_Flags                        (0)
#define LVAR_Home_Tile                    (1)
#define LVAR_Home_Rotation                (2)
#define LVAR_Routine                      (3)

#define hidden_for_fight_bit              bit_10
#define did_myron_joke_bit                bit_11
#define stopped_routine_bit               bit_12

#define did_myron_joke                    lvar_bit(LVAR_Flags, did_myron_joke_bit)
#define set_did_myron_joke                set_lvar_bit_on(LVAR_Flags, did_myron_joke_bit)

#define stopped_routine                   lvar_bit(LVAR_Flags, stopped_routine_bit)
#define set_stopped_routine               set_lvar_bit_on(LVAR_Flags, stopped_routine_bit)
#define off_stopped_routine               set_lvar_bit_off(LVAR_Flags, stopped_routine_bit)

#define get_new_joke                      new_joke := random(1,8);                                                   \
                                          if ((Myron_In_Party) and (obj_on_screen(self_obj)) and (did_myron_joke == false)) then begin   \
                                             set_did_myron_joke;                                                     \
                                             new_joke := 9;                                                          \
                                          end else if (random(1,3) == 2) then begin                                  \
                                             if ((Fallout2_enclave_destroyed) and (random(0,1))) then begin          \
                                                if (random(0,1)) then begin                                          \
                                                   new_joke := 11;                                                   \
                                                end else if (angela_pregnant) then begin                             \
                                                   new_joke := 10;                                                   \
                                                end                                                                  \
                                             end                                                                     \
                                          end

#define start_random_routine              get_new_joke                                                              \
                                          while (new_joke == local_var(LVAR_Routine)) do begin                      \
                                             get_new_joke                                                           \
                                          end                                                                       \
                                          ndebug("routine == "+new_joke);                                        \
                                          set_local_var(LVAR_Routine, new_joke);                                    \
                                          nr_add_timer_event_rand(self_obj, 3, 5, local_var(LVAR_Routine) * 1000)

//#define self_family                       self_family_var // added by killap - expansion pack

import variable commedian_audience_1_obj;
import variable commedian_audience_2_obj;
import variable commedian_audience_3_obj;

import variable comedian_obj; //added by killap - expansion pack

variable new_joke;
variable last_floater;
variable start_new_routine;
//variable self_family_var; // added by killap - expansion pack

#define attempt_float_on_member(x, y)     if ((commedian_audience_##x##_obj != 0) and (last_floater != commedian_audience_##x##_obj)) then begin     \
                                             last_floater := commedian_audience_##x##_obj;                                                           \
                                             float_msg(commedian_audience_##x##_obj, mstr(y), FLOAT_COLOR_NORMAL);                         \
                                          end

#define float_on_first_audience_member(x)    \
         attempt_float_on_member(1,x)        \
         else attempt_float_on_member(2,x)   \
         else attempt_float_on_member(3,x)

#define check_female_audience(x)                                                                               \
         if (last_floater == 0) then begin                                                                     \
            if (commedian_audience_##x##_obj != 0) then begin                                                  \
               if (is_female(commedian_audience_##x##_obj)) then begin     \
                  last_floater := commedian_audience_##x##_obj;                                                \
                  float_msg(commedian_audience_##x##_obj, mstr(fixed_param), FLOAT_COLOR_NORMAL);              \
               end                                                                                             \
            end                                                                                                \
         end
#define float_first_female_audience_member      \
         last_floater := 0;                     \
         check_female_audience(3)               \
         check_female_audience(2)               \
         check_female_audience(1)
#define send_all_to(x,y)                  if (commedian_audience_##x##_obj != 0) then begin                          \
                                             float_msg(commedian_audience_##x##_obj, mstr(y), FLOAT_COLOR_NORMAL);   \
                                          end
#define send_float_to_all(y)              send_all_to(1,y)     \
                                          send_all_to(2,y)     \
                                          send_all_to(3,y)
procedure start begin
   comedian_obj := self_obj; // added by killap - expansion
end

#define is_crowd_floater(x)               ((x == 1001) or (x == 1002) or (x == 2001) or (x == 2002) or (x == 3001) or (x == 1005) or  \
                                           (x == 4001) or (x == 4002) or (x == 4004) or (x == 5001) or (x == 5003) or (x == 5006) or  \
                                           (x == 6002) or (x == 6005) or (x == 7001) or (x == 7007) or (x == 8001) or (x == 8006) or  \
                                           (x == 8009) or (x == 8012) or (x == 9003) or (x == 11004))
procedure timed_event_p_proc begin
   ndebug("timed_event: comedian(" + fixed_param + ")");
   if ((combat_is_initialized) or (self_visible == false)) then begin
      set_stopped_routine;
   end else if (fixed_param == assassinate_param) then begin
      if (obj_on_screen(self_obj)) then begin
         send_float_to_all(random(10001,10003))
         critter_damage(self_obj, 10000);
      end else begin
         start_random_routine;
      end
   end else begin
      // do tell joke stuff
      if (fixed_param == 10001) then begin   //killap's fix: changed from 10000
         nr_add_timer_event_tic(self_obj, 7, assassinate_param);
      end else if (fixed_param == 9005) then begin
         dude_floater(9005 + (check_general_rep >= 0));
         nr_add_timer_event_rand(self_obj, 5, 7, 9007);
      end else if ((fixed_param == 9001) or (fixed_param == 9004) or (fixed_param == 9007)) then begin
         if ((Myron_In_Party) and (obj_on_screen(self_obj))) then begin
            float_msg(Myron_Ptr, mstr(fixed_param), FLOAT_COLOR_NORMAL);
            nr_add_timer_event_rand(Myron_Ptr, 25, 45, float_param);
            nr_add_timer_event_rand(self_obj, 5, 7, fixed_param + 1);
         end else begin
            start_random_routine;
         end
      end else begin
         if (fixed_param == 3002) then begin
            float_first_female_audience_member
         end else if ((fixed_param == 1004) or (fixed_param == 2009) or (fixed_param == 3004)) then begin
            float_on_first_audience_member(1004)
         end else if ((fixed_param == 2010) or (fixed_param == 3005)) then begin
            float_on_first_audience_member(2010)
         end else if (is_crowd_floater(fixed_param)) then begin
            float_on_first_audience_member(fixed_param)
         end else if (mstr(fixed_param) == "") then begin
            start_new_routine := true;
            start_random_routine;
         end else begin
            last_floater := self_obj;
            start_new_routine := false;
            floater(fixed_param);
         end
         if (start_new_routine == false) then begin
            nr_add_timer_event_rand(self_obj, 5, 7, fixed_param + 1);
         end else begin
            ndebug("set start_new_routine");
         end
      end
      // moves around while telling jokes
      if (anim_busy(self_obj) == false) then begin
         if (self_tile != local_var(LVAR_Home_Tile)) then begin
            self_walk_to_tile(local_var(LVAR_Home_Tile));
         end else if (last_floater == self_obj) then begin
            self_walk_to_tile(tile_num_in_direction(self_tile, random(1,3), random(1,3)));
         end
      end
   end
end

procedure map_enter_p_proc begin
   comedian_obj := self_obj; // added by killap - expansion

   /*// added by killap - expansion
   self_family_var := family_bishop;

   if (self_family == family_bishop and bishop_dead and warned_attack) then begin
      destroy_object(self_obj);
      return;
   end
   // end added*/

   if (is_loading_game == false) then begin
      if (map_first_run) then begin
         set_local_var(LVAR_Home_Tile, self_tile);
         set_local_var(LVAR_Home_Rotation, self_cur_rot);
         set_self_team(TEAM_LONER);
         set_self_ai(AI_COWARD);
      end
      start_random_routine;
   end
end
procedure map_update_p_proc begin
   comedian_obj := self_obj; // added by killap - expansion
   check_hide_durring_boxing_fight
   if (stopped_routine) then begin
      if ((combat_is_initialized == false) or (self_visible)) then begin
         off_stopped_routine;
         start_random_routine;
      end
   end
end

procedure map_exit_p_proc begin
   rm_fixed_timer_event(self_obj, last_timed_param);
end

procedure combat_p_proc begin
end

procedure critter_p_proc begin
   if ((self_can_see_dude) and (hostile)) then begin
      self_attack_dude;
   end else if (anim_busy(self_obj) == false) then begin
      if (self_cur_rot != local_var(LVAR_Home_Rotation)) then begin
         self_rotate(local_var(LVAR_Home_Rotation));
      end
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
      call Node998;
   end
end

procedure pickup_p_proc begin
end

procedure talk_p_proc begin
   set_herebefore;
   display_mstr(200);
end

procedure destroy_p_proc begin
   inc_inv_good_crit
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(100);
end

procedure description_p_proc begin
   script_overrides;
   display_mstr(150);
end

procedure use_skill_on_p_proc begin
end

procedure Node998 begin
   set_hostile;
end
procedure Node999 begin
end
