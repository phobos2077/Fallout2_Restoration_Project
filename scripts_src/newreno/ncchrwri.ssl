/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name:
        Location: New Reno
        Description:

        Log:

           Created: May 6, 1998

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "ncchrwri"
#include "../headers/define.h"
#define NAME                    SCRIPT_NCCHRWRI
#define TOWN_REP_VAR            GVAR_TOWN_REP_NEW_RENO
#include "../headers/command.h"
#include "../headers/modreact.h"
#include "../headers/newreno.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;

#define self_family                    (family_wright)

/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Flags                     (4)

#define pissed_bit                     bit_10
#define reject_bit                     bit_11
#define know_chris_bit                 bit_12
#define node_9_bit                     bit_13

#define pissed                         lvar_bit(LVAR_Flags, pissed_bit)
#define set_pissed                     set_lvar_bit_on(LVAR_Flags, pissed_bit)

#define reject                         lvar_bit(LVAR_Flags, reject_bit)
#define set_reject                     set_lvar_bit_on(LVAR_Flags, reject_bit)

#define know_chris                     lvar_bit(LVAR_Flags, know_chris_bit)
#define set_know_chris                 set_lvar_bit_on(LVAR_Flags, know_chris_bit)

#define node_9                         lvar_bit(LVAR_Flags, node_9_bit)
#define set_node_9                     set_lvar_bit_on(LVAR_Flags, node_9_bit)

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */

/* Local variables which do not need to be saved between map changes. */
variable prev_node;

procedure start begin
end

procedure timed_event_p_proc begin
   if (combat_is_initialized == false) then begin
      if (pissed) then begin
         call Node005;
      end else if (enclave_destroyed) then begin
         call Node001;
      end else if (wright_dead) then begin
         call Node004;
      end else if (dude_wearing_power_armor) then begin
         call Node002;
      end else if (dude_family == self_family) then begin
         call Node003;
      end
   end
   nr_add_timer_event_rand(self_obj, 25, 35, float_param);
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
      if (map_first_run) then begin
         set_self_team(TEAM_NEW_RENO_WRIGHT);
         set_self_ai(AI_TOUGH_GUARD);
      end
      nr_add_timer_event_rand(self_obj, 25, 35, float_param);
   end
end

procedure critter_p_proc begin
   if ((hostile) and (self_can_see_dude)) then begin
      self_attack_dude;
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
      attack_family(self_family) //added by killap
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

procedure talk_p_proc begin
   Evil_Critter:=0;
   Slavery_Tolerant := SLAVE_VERY_INTOLERANT;
   Karma_Perception := KARMA_PERCEPTION2;
   CheckKarma;
   GetReaction;
   ReactToLevel; //added by killap

   if (pissed) then begin
      call Node005;
   end else if (wright_dead) then begin
      call Node004;
   end else begin
      start_gdialog(NAME,self_obj,4,-1,-1);
      gSay_Start;
         if (dude_family == self_family) then begin
            call Node006;
         end else if ( (has_rep_slaver) or (dude_is_made_man) ) then begin
            call Node011;
         end else begin
            call Node006;
         end
      gSay_End;
      end_dialogue;
   end
   set_herebefore;
   nr_add_timer_event_rand(self_obj, 25, 35, float_param);
end

procedure destroy_p_proc begin
   dec_family_counter(self_family);
   inc_good_critter
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(150);
end

procedure description_p_proc begin
   script_overrides;
   display_mstr_rand(150, 150 + (2 * examined));
   set_examined;
end

procedure use_skill_on_p_proc begin
end

procedure Node998 begin
   if (hostile == false) then begin
      set_hostile;
   end
   attack_family(self_family) //added by killap
end
procedure Node999 begin
end
procedure Node990 begin
   if has_rep_berserker or has_rep_childkiller or (self_rep < -100) then begin
      call Node013;
   end else begin
      call Node012;
   end
end
procedure Node989 begin
   if (bad_critter_reaction) then begin
      call Node023;
   end else begin
      call Node010;
   end
end
procedure Node988 begin
   if ((bad_critter_reaction) and (is_success(roll_vs_skill(dude_obj,SKILL_SPEECH,0)) == false)) then begin
      call Node023;
   end else begin
      call Node022;
   end
end
procedure Node987 begin
   if (is_success(roll_vs_skill(dude_obj,SKILL_SPEECH,0))) then begin
      call Node023;
   end else begin
      call Node024;
   end
end

#define is_insert_message(x)  ((x == 200) or (x == 201) or        \
                               ((220<= x) and (x <= 222)) or      \
                               (x == 202))
procedure Node001 begin
   floater_rand_with_check(200, 205, dude_name, 1000);
end
procedure Node002 begin
   floater(215);
end
procedure Node003 begin
   floater_rand_with_check(220, 222, dude_name, 1000);
end
procedure Node004 begin
   floater_sick(230);
end
procedure Node005 begin
   floater_bad_rand(235, 237);
end
procedure Node006 begin
   if ((get_mystery_flag(MYSTERY_STATE_BAD_SOLVED)) or (get_mystery_flag(MYSTERY_STATE_SOLVED))) then begin
      Reply(mstr(247) + dude_name + mstr(248));
   end else if (self_family == dude_family) then begin
      Reply(mstr(246) + dude_name + mstr(1246));
   end else begin
      Reply(245);
   end
   BOption(249, Node007, -003);
   BOption(250, Node007, -003);
   NOption(251, Node999, -003);
   if (know_chris) then begin
      //NOption(257, Node009, 004); // comment out by killap (was ,009) -- too many options here and you can get to this one elsewhere
      if ((reject == false) and (chris_recommends == false)) then begin
         NOption(253, Node990, 004);
      end
      if (know_mrs_wright) then begin
         NOption(254, Node014, 004);
      end
      if (get_mystery_flag(MYSTERY_STATE_ASSIGNED)) then begin
         NOption(255, Node020, 004);
      end
   end else begin
      NOption(252, Node008, 004);
   end
   NOption(256, Node999, 004);
   prev_node := 6;
end
procedure Node007 begin
   Reply(265);
   NOption(251, Node999, -003);
   prev_node := 7;
end
procedure Node008 begin
   set_know_chris;
   Reply(275);
   if ((reject == false) and (chris_recommends == false)) then begin
      NOption(253, Node990, 004);
   end
   BOption(277, Node009, 004);
   if (know_mrs_wright) then begin
      NOption(278, Node014, 004);
   end
   if (get_mystery_flag(MYSTERY_STATE_ASSIGNED)) then begin
      NOption(279, Node020, 004);
   end
   NOption(280, Node999, 004);
   prev_node := 8;
end
procedure Node009 begin
   set_wright_known;
   if (node_9) then begin
      Reply(296);
   end else begin
      set_node_9;
      Reply(290);
   end
   if ((reject == false) and (chris_recommends == false)) then begin
      NOption(291, Node990, 004);
   end
   BOption(292, Node015, 004);
   if (know_mrs_wright) then begin
      NOption(293, Node014, 004);
   end
   if (get_mystery_flag(MYSTERY_STATE_ASSIGNED)) then begin
      NOption(279, Node020, 004);
   end
   NOption(295, Node999, 004);
   prev_node := 9;
end
procedure Node010 begin
   Reply(305);
   BOption(306, Node009, 004);
   if ((reject == false) and (chris_recommends == false)) then begin
      NOption(307, Node990, 004);
   end
   if (know_mrs_wright) then begin
      NOption(308, Node014, 004);
   end
   if (get_mystery_flag(MYSTERY_STATE_ASSIGNED)) then begin
      NOption(279, Node020, 004);
   end
   NOption(310, Node999, 004);
   prev_node := 10;
end
procedure Node011 begin
   set_pissed;
   if (dude_is_made_man) then begin
      Reply(mstr(316) + dude_family_name + mstr(317));
   end else begin
      Reply(315);
   end
   BOption(318, Node998, 004); //edit by killap - was NOption
   NOption(251, Node999, 004);
   NOption(320, Node999, 004);
   prev_node := 11;
end
procedure Node012 begin
   set_chris_recommends;
   Reply(325);
   BOption(326, Node009, 004);
   NOption(330, Node010, 004);
   if (know_mrs_wright) then begin
      NOption(327, Node014, 004);
   end
   if (get_mystery_flag(MYSTERY_STATE_ASSIGNED)) then begin
      NOption(279, Node020, 004);
   end
   NOption(329, Node999, 004);
   prev_node := 12;
end
procedure Node013 begin
   set_reject;
   Reply(335);
   NOption(336, Node999, 004);
   prev_node := 13;
end
procedure Node014 begin
   Reply(345);
   NOption(346, Node016, 004);
   NOption(347, Node016, 004);
   NOption(348, Node999, 004);
   prev_node := 14;
end
procedure Node015 begin
   Reply(355);
   BOption(356, Node024, 004);
   NOption(357, Node989, 004);
   NOption(358, Node999, 004);
   prev_node := 15;
end
procedure Node016 begin
   Reply(365 + mrs_wright_destroyed_still);
   BOption(367, Node015, 004);
   if ((mrs_wright_destroyed_still) and (get_still_mission(still_mission_none))) then begin
      NOption(368, Node017, 004);
   end
   NOption(369, Node010, 004);
   NOption(370, Node999, 004);
   prev_node := 16;
end
procedure Node017 begin
   Reply(380);
   NOption(381, Node018, 004);
   NOption(382, Node010, 004);
   NOption(383, Node999, 004);
   prev_node := 17;
end
procedure Node018 begin
   set_know_still;
   Reply(390);
   NOption(391, Node019, 004);
   NOption(382, Node010, 004);
   NOption(383, Node999, 004);
   prev_node := 18;
end
procedure Node019 begin
   Reply(400);
   NOption(401, Node010, 004);
   NOption(402, Node999, 004);
   prev_node := 19;
end
procedure Node020 begin
   Reply(410);
   BOption(411, Node021, 004);
   NOption(412, Node025, 004);
   NOption(413, Node010, 004);
   NOption(414, Node999, 004);
   prev_node := 20;
end
procedure Node021 begin
   Reply(420);
   NOption(421, Node988, 004);
   BOption(422, Node024, 004);
   NOption(423, Node987, 004);
   NOption(412, Node025, 004); // edit by killap - was 010
   NOption(425, Node999, 004);
   prev_node := 21;
end
procedure Node022 begin
   Reply(435);
   BOption(422, Node024, 004);
   BOption(437, Node987, 004);
   NOption(438, Node010, 004);
   NOption(439, Node999, 004);
   prev_node := 22;
end
procedure Node023 begin
   set_pissed;
   Reply(445);
   BOption(446, Node024, 004);
   NOption(447, Node999, 004);
   prev_node := 23;
end
procedure Node024 begin
   Reply(455);
   BOption(456, Node998, 004);
   prev_node := 24;
end
procedure Node025 begin
   set_know_mordino;
   Reply(465);
   NOption(466, Node010, 004);
   NOption(467, Node026, 004);
   NOption(468, Node999, 004);
   prev_node := 25;
end
procedure Node026 begin
   suspect_jagged_jimmy_j
   suspect_renesco
   suspect_jules
   suspect_lil_jesus
   set_lil_jesus_dealer;
   Reply(475);
   NOption(476, Node028, 004);
   NOption(466, Node010, 004);
   prev_node := 26;
end
procedure Node027 begin
   Reply(mstr(485 + dude_is_female) + mstr(487));
   NOption(488, Node999, 004);
   prev_node := 27;
end
procedure Node028 begin
   suspect_jagged_jimmy_j
   suspect_renesco
   suspect_jules
   suspect_lil_jesus
   set_lil_jesus_dealer;
   Reply(495);
   NOption(466, Node010, 004);
   NOption(497, Node027, 004);
   prev_node := 28;
end
