/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name:
        Location: New Reno
        Description:

        Log:

           Created: May 6, 1998

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "ncftully"
#include "../headers/define.h"
#define NAME                    SCRIPT_NCFTULLY
#define TOWN_REP_VAR            GVAR_TOWN_REP_NEW_RENO
#include "../headers/command.h"
#include "../headers/newreno.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure timed_event_p_proc;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node049;
procedure Node050;
procedure Node051;
procedure Node052;
procedure Node053;
procedure Node054;
procedure Node055;
procedure Node056;
procedure Node057;

//added by killap - expansion pack
procedure Node058;
procedure Node059;
procedure Node060;
procedure Node061;
procedure Node062;
procedure Node063;
procedure Node064;
procedure Node065;
procedure Node066;
procedure Node067;
procedure Node068;
procedure Node069;

procedure Node900;
procedure Node901;
procedure Node902;
procedure Node903;

procedure Node102;
procedure Node103;

/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */

#define LVAR_Flags                     (0)
#define LVAR_Passed_Out_Time           (1)
#define LVAR_Home_Tile                 (2)
#define LVAR_Home_Rotation             (3)
#define LVAR_Said_58                   (4)
#define LVAR_Said_60                   (5)

#define passed_out_state_bit           bit_10
#define running_divorce_bit            bit_11
#define hintbook_bit                   bit_12

#define passed_out_state               lvar_bit(LVAR_Flags, passed_out_state_bit)
#define set_passed_out_state           set_lvar_bit_on(LVAR_Flags, passed_out_state_bit)
#define off_passed_out_state           set_lvar_bit_off(LVAR_Flags, passed_out_state_bit)

#define running_divorce                lvar_bit(LVAR_Flags, running_divorce_bit)
#define set_running_divorce            if (divorce == false) then begin                                                          \
                                          gfade_out(ONE_GAME_SECOND);                                                            \
                                             set_dude_was_married;                                                               \
                                             game_ui_disable;                                                                    \
                                             if (self_tile != local_var(LVAR_Home_Tile)) then begin                              \
                                                critter_attempt_placement(self_obj, local_var(LVAR_Home_Tile), self_elevation);  \
                                             end                                                                                 \
                                             if (Miria_In_Party) then begin                                                      \
                                                temp_spouse := Miria_Ptr;                                                        \
                                             end else begin                                                                      \
                                                temp_spouse := Davin_Ptr;                                                        \
                                             end                                                                                 \
                                             if (dude_is_male) then begin                                                        \
                                                critter_attempt_placement(dude_obj, male_divorce_tile, self_elevation);          \
                                                critter_attempt_placement(temp_spouse, female_divorce_tile, self_elevation);     \
                                             end else begin                                                                      \
                                                critter_attempt_placement(temp_spouse, male_divorce_tile, self_elevation);       \
                                                critter_attempt_placement(dude_obj, female_divorce_tile, self_elevation);        \
                                             end                                                                                 \
                                             Face_Critter(self_obj, temp_spouse);                                                \
                                             Face_Critter(temp_spouse, self_obj);                                                \
                                             Face_Critter(self_obj, dude_obj);                                                   \
                                             Face_Critter(dude_obj, self_obj);                                                   \
                                             set_lvar_bit_on(LVAR_Flags, running_divorce_bit);                                   \
                                             party_no_follow_on;                                                                 \
                                             nr_add_timer_event(self_obj, 5, 957);                                               \
                                          gfade_in(ONE_GAME_SECOND);                                                             \
                                       end                                                                                       \
                                       ndebug("setup divorce script")
#define off_running_divorce            set_divorce;                                                                     \
                                       if (Miria_In_Party) then begin                                                   \
                                          old_spouse := Miria_Ptr;                                                      \
                                       end else begin                                                                   \
                                          old_spouse := Davin_Ptr;                                                      \
                                       end                                                                              \
                                       set_dude_was_married;                                                            \
                                       check_set_obj_visiblility(old_spouse, true);                                     \
                                       party_remove(old_spouse);                                                        \
                                       temp_spouse := create_object_sid(obj_pid(old_spouse), 0, 0, SCRIPT_NCEXSPOU);    \
                                       move_to(temp_spouse, tile_num(old_spouse), elevation(old_spouse));               \
                                       nr_add_timer_event_rand(temp_spouse, 2, 3, float_param);                         \
                                       destroy_object(old_spouse);                                                      \
                                       party_no_follow_off;                                                             \
                                       set_lvar_bit_off(LVAR_Flags, running_divorce_bit);                               \
                                       game_ui_enable

#define hintbook                       lvar_bit(LVAR_Flags, hintbook_bit)
#define set_hintbook                   if (hintbook == false) then begin                        \
                                          give_pid_qty(dude_obj, PID_FALLOUT_2_HINTBOOK, 1)     \
                                       end                                                      \
                                       set_lvar_bit_on(LVAR_Flags, hintbook_bit)

#define passed_out_tile                (23273)
#define male_divorce_tile              (24285)
#define female_divorce_tile            (23885)

#define set_new_passed_out_time        if (divorce == false) then begin                                                       \
                                          set_local_var(LVAR_Passed_Out_Time, game_time + (ONE_GAME_HOUR * (random(1, 4))));  \
                                       end else                                                                               \
                                          set_local_var(LVAR_Passed_Out_Time, game_time + (30 * ONE_GAME_SECOND))

#define is_passed_out                  ((is_critter_prone(self_obj)) and (passed_out_state))
#define is_passing_out                 ((is_critter_prone(self_obj)) == false) and (passed_out_state))

#define check_switch_passsed_out       if (game_time > local_var(LVAR_Passed_Out_Time)) then begin    \
                                          set_new_passed_out_time;                                    \
                                          if (passed_out_state) then begin                            \
                                             off_passed_out_state;                                    \
                                          end else begin                                              \
                                             set_passed_out_state;                                    \
                                          end                                                         \
                                       end
#define give_tully_booze               if (dude_item_count(PID_ROENTGEN_RUM) > 0) then begin                \
                                          use_obj_on_obj(dude_item(PID_ROENTGEN_RUM), self_obj);         \
                                       end else if (dude_item_count(PID_GAMMA_GULP_BEER) > 0) then begin    \
                                          use_obj_on_obj(dude_item(PID_GAMMA_GULP_BEER), self_obj);      \
                                       end else if (dude_item_count(PID_BOOZE) > 0) then begin              \
                                          use_obj_on_obj(dude_item(PID_BOOZE), self_obj);                \
                                       end else if (dude_item_count(PID_BEER) > 0) then begin               \
                                          use_obj_on_obj(dude_item(PID_BEER), self_obj);                 \
                                       end else if (dude_item_count(PID_ROT_GUT) > 0) then begin            \
                                          use_obj_on_obj(dude_item(PID_ROT_GUT), self_obj);              \
                                       end

variable prev_node;
variable geckQuestion;
variable renoQuestion;
variable temp_spouse;
variable old_spouse;
import variable new_reno_poor_box_obj;

//added by killap - expansion pack
variable booze_for_price := 0;
variable Node_64 := 0;
variable Node_69 := 0;
variable Node_07 := 0;
//end added

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */

/* Local variables which do not need to be saved between map changes. */

procedure start begin
end

procedure timed_event_p_proc begin
   ndebug("global_var(GVAR_PLAYER_WAS_MARRIED) == " + global_var(GVAR_PLAYER_WAS_MARRIED));
   if (fixed_param == float_param) then begin
      if (combat_is_initialized == false) then begin
         if (running_divorce == false) then begin
            if (passed_out_state) then begin
               if (is_critter_prone(self_obj)) then begin
                  call Node102;
               end else begin
                  call Node103;
               end
            end else if (self_can_see_dude) then begin
               if ((dude_is_female) and (dude_has_porn_star_rep)) then begin
                  call Node002;
               end else begin
                  call Node001;
               end
            end
         end
      end
      nr_add_timer_event_rand(self_obj, 25, 35, float_param);
   end else if (fixed_param >= 965) then begin
   end else begin
      floater(fixed_param);
      if (fixed_param == 963) then begin
         set_passed_out_state;
         set_new_passed_out_time;
         reg_anim_clear(self_obj);
         reg_anim_begin();
            reg_anim_animate(self_obj,ANIM_fall_front,-1);
         reg_anim_end();
         critter_injure(self_obj,DAM_KNOCKED_DOWN);
         off_running_divorce;
         nr_add_timer_event_rand(self_obj, 25, 35, float_param);
      end
      nr_add_timer_event(self_obj, 7, fixed_param + 1);
   end
end

procedure map_update_p_proc begin
   check_switch_passsed_out
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
      check_poison_kill_critter
      if (random(0,1)) then begin
         set_passed_out_state;
      end else begin
         off_passed_out_state;
      end
      if (map_first_run) then begin
         set_self_team(TEAM_NEW_RENO_CITIZEN);
         set_self_ai(AI_LONER_CITIZEN);
         set_local_var(LVAR_Home_Tile,self_tile);
         set_local_var(LVAR_Home_Rotation, self_cur_rot);
         set_new_passed_out_time;
      end
   end
   nr_add_timer_event_rand(self_obj, 25, 35, float_param);
end

procedure critter_p_proc begin
   if (running_divorce) then begin
      // this is just to trap tully
   end else if ((hostile) and (self_can_see_dude)) then begin
      self_attack_dude;
   end else if (anim_busy(self_obj) == false) then begin
      if (passed_out_state) then begin
         if ((is_critter_prone(self_obj)) == false) then begin
            if (self_tile != passed_out_tile) then begin
               self_walk_to_tile(passed_out_tile);
            end else begin
               reg_anim_clear(self_obj);
               reg_anim_begin();
                  reg_anim_animate(self_obj,ANIM_fall_front,-1);
               reg_anim_end();
               critter_injure(self_obj,DAM_KNOCKED_DOWN);
            end
         end
      end else if (is_critter_prone(self_obj)) then begin
         reg_anim_clear(self_obj);
         reg_anim_begin();
            reg_anim_animate(self_obj, ANIM_back_to_standing, -1);
         reg_anim_end();
      end else if (self_tile != local_var(LVAR_Home_Tile)) then begin
         self_walk_to_tile(local_var(LVAR_Home_Tile));
      end else if (self_cur_rot != local_var(LVAR_Home_Rotation)) then begin
         self_rotate(local_var(LVAR_Home_Rotation));
      end
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

procedure talk_p_proc begin
   geckQuestion := false;
   renoQuestion := false;
   ndebug("global_var(GVAR_PLAYER_MARRIED) == " + global_var(GVAR_PLAYER_MARRIED));
   if (passed_out_state) then begin
      if (is_critter_prone(self_obj)) then begin
         call Node102;
      end else begin
         call Node103;
      end
   end else if (Fallout2_enclave_destroyed) then begin
      start_dialog_at_node(Node003);
   end else begin
      start_dialog_at_node(Node007);
   end
   set_herebefore;
   nr_add_timer_event_rand(self_obj, 25, 35, float_param);
end

procedure destroy_p_proc begin
   inc_good_critter
   set_tully_dead;
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(100);
end

procedure description_p_proc begin
   script_overrides;
   display_mstr(150 + herebefore);
   set_examined;
end

procedure use_skill_on_p_proc begin
end

procedure Node998 begin
   if (hostile == false) then begin
      set_hostile;
   end
end
procedure Node999 begin
end
procedure Node990 begin
   if (hintbook) then begin
      call Node006;
   end else begin
      call Node004;
   end
end
procedure Node989 begin
   give_tully_booze
   call Node029;
end
procedure Node988 begin
   geckQuestion := true;
   call Node014;
end
procedure Node987 begin
   renoQuestion := true;
   call Node014;
end
procedure Node986 begin
end

procedure Node001 begin
   floater_rand(200, 211);
end
procedure Node002 begin
   floater_rand(220, 222);
end
procedure Node003 begin
   Reply(mstr(225 + (know_tully == false)) + mstr(227));
   set_know_tully;

   //added by killap - expansion pack
   if (global_var(GVAR_ABBEY_TULLY) == 3) then
      NOption(2060, Node069, 004);
   if ( ((global_var(GVAR_ABBEY_BOOZE) > 1) and (global_var(GVAR_ABBEY_BOOZE) < 4)) and (dude_item_count(PID_ABBEY_BOOZE)) ) then begin
      NOption(2061, Node065, 004);
      Node_07 := 1;
   end
   if ( (local_var(LVAR_Said_58) != 0) and (local_var(LVAR_Said_60) == 0) ) then
      NOption(2050, Node060, 004);
   //end added

   NOption(228, Node990, -003);
   NOption(229, Node999, -003);
   NOption(230 + dude_is_female, Node990, 004);
   NOption(232, Node999, 004);
   prev_node := 3;
end
procedure Node004 begin
   Reply(235);
   NOption(236, Node005, -003);
   NOption(237, Node999, -003);
   NOption(238, Node005, 004);
   NOption(239, Node999, 004);
   prev_node := 4;
end
procedure Node005 begin
   set_hintbook;
   Reply(240);
   NOption(241, Node006, -003);
   NOption(242, Node006, 004);
   prev_node := 5;
end
procedure Node006 begin
   Reply(245);
   NOption(246, Node999, -003);
   NOption(247, Node999, 004);
   prev_node := 6;
end
procedure Node007 begin
   Reply(250 + (night));
   set_know_tully;
   NOption(252, Node008, -003);
   NOption(253 + (night), Node999, -003);
   NOption(255 + (night), Node009, 004);
   NOption(257, Node010, 004);
   BOption(258, Node011, 004);

   //added by killap - expansion pack
   if (global_var(GVAR_ABBEY_TULLY) == 3) then
      NOption(2060, Node069, 004);
   if ( ((global_var(GVAR_ABBEY_BOOZE) > 1) and (global_var(GVAR_ABBEY_BOOZE) < 4)) and (dude_item_count(PID_ABBEY_BOOZE)) ) then begin
      NOption(2061, Node065, 004);
      Node_07 := 1;
   end
   if ( (local_var(LVAR_Said_58) != 0) and (local_var(LVAR_Said_60) == 0) ) then
      NOption(2050, Node060, 004);
   //end added
   if (divorce == false) then begin
      if ((Davin_In_Party) or (Miria_In_Party)) then begin
         NOption(259, Node021, 004);
      end
   end
   if (tully_drinks) then begin
      if (dude_has_booze) then begin
         GOption(261, Node989, 004);
      end
   end
   NOption(262, Node999, 004);
end
procedure Node008 begin
   Reply(270);
   NOption(271, Node999, -003);
   prev_node := 8;
end
procedure Node009 begin
   Reply(275);
   NOption(257, Node010, 004);
   BOption(258, Node011, 004);
   if (divorce == false) then begin
      if ((Davin_In_Party) or (Miria_In_Party)) then begin
         NOption(259, Node021, 004);
      end
   end
   if (tully_drinks) then begin
      if (dude_has_booze) then begin
         GOption(261, Node989, 004);
      end
   end
   NOption(262, Node999, 004);
   prev_node := 9;
end
procedure Node010 begin
   Reply(290);
   BOption(291, Node011, 004);
   NOption(292, Node013, 004);
   //added by killap - expansion pack
   if (local_var(LVAR_Said_58) == 0) then
      NOption(2000, Node058, 004);
   //end added
   if (divorce == false) then begin
      if ((Davin_In_Party) or (Miria_In_Party)) then begin
         NOption(259, Node021, 004);
      end
   end
   if (tully_drinks) then begin
      if (dude_has_booze) then begin
         GOption(261, Node989, 004);
      end
   end
   NOption(295, Node999, 004);
   prev_node := 10;
end
procedure Node011 begin
   Reply(300);
   NOption(301, Node016, 004);
   NOption(302, Node016, 004);
   NOption(303, Node016, 004);
end
procedure Node012 begin
   Reply(305);
   NOption(306, Node013, 004);
   NOption(445, Node999, 004);
   prev_node := 12;
end
procedure Node013 begin
   Reply(315);
   if (Fallout2_vault13_looking) then begin
      NOption(316, Node014, 004);
   //end else if (Fallout2_tribe_kidnapped) then begin
   end else if ((f2_flag_any >= f2_state_tribe_kidnapped) and (f2_flag_any < f2_state_enclave_destroyed)) then begin //edit by killap
      NOption(317, Node014, 004);
   //end else if (Fallout2_fix_tanker) then begin
   end else if (Fallout2_fix_tanker) or (Fallout2_tanker_known) then begin//edit by killap  - added Fallout2_tanker_known
      NOption(318, Node014, 004);
   end
   if (global_var(GVAR_GAVE_GECK_EXP) == 0) then begin
      NOption(319, Node988, 004);
   end
   //added by killap - expansin pack
   if ( (local_var(LVAR_Said_58) != 0) and (local_var(LVAR_Said_60) == 0) ) then
      NOption(2050, Node060, 004);
   //end added
   NOption(320, Node987, 004);
   if (divorce == false) then begin
      if ((Davin_In_Party) or (Miria_In_Party)) then begin
         NOption(259, Node021, 004);
      end
   end
   NOption(323, Node999, 004);
   prev_node := 13;
end
procedure Node014 begin
   if (renoQuestion) then begin
      renoQuestion := false;
      Reply(325);
   end else if (geckQuestion) then begin
      geckQuestion := false;
      Reply(326);
   end else if (Fallout2_vault13_looking) then begin
      mark_vault_city_on_map
      Reply(327);
   //end else if (Fallout2_tribe_kidnapped) then begin
   end else if ((f2_flag_any >= f2_state_tribe_kidnapped) and (f2_flag_any < f2_state_enclave_destroyed)) then begin //edit by killap
      Reply(328);
   //end else if (Fallout2_fix_tanker) then begin
   end else if (Fallout2_fix_tanker) or (Fallout2_tanker_known) then begin//edit by killap  - added Fallout2_tanker_known
      Reply(329);
   end
   NOption(330, Node015, 004);
   prev_node := 14;
end
procedure Node015 begin
   Reply(335);
   set_tully_drinks;
   if (dude_has_booze) then begin
      GOption(336, Node989, 004);
   end
   NOption(337, Node025, 004);
   GOption(338, Node026, 006);
   NOption(323, Node999, 004);
   prev_node := 15;
end
procedure Node016 begin
   Reply(440);
   NOption(441, Node013, 004);
   NOption(442, Node020, 004);
   NOption(443, Node012, 004);
   NOption(444, Node012, 004);
   NOption(445, Node999, 004);
   prev_node := 16;
end
procedure Node017 begin
   if (item_caps_total(new_reno_poor_box_obj) > 0) then begin
      Reply(mstr(450) + mstr(452));
      dude_caps_adjust(item_caps_total(new_reno_poor_box_obj));
      item_caps_adjust(new_reno_poor_box_obj, -item_caps_total(new_reno_poor_box_obj));
      NOption(454, Node999, 004);
   end else begin
      Reply(mstr(450) + mstr(451));
      NOption(453, Node999, 004);
   end
   prev_node := 17;
end
procedure Node018 begin
   Reply(460);
   NOption(461, Node031, 004);
   NOption(462 + mrs_bishop_banged, Node033, 004);
   NOption(464 + angela_banged, Node034, 004);
   NOption(466, Node028, 004);
   NOption(445, Node999, 004);
   prev_node := 18;
end
procedure Node019 begin
   Reply(470);
   if (dude_iq >= 8) then begin
      NOption(473 + (new_CA_republic_visit != 0), Node030, 004);
   end else if (dude_iq >= 6) then begin
      NOption(472, Node030, 004);
   end else begin
      NOption(471, Node030, 004);
   end
   NOption(475, Node028, 004);
   NOption(476, Node999, 004);
   prev_node := 19;
end
procedure Node020 begin
   Reply(480);
   NOption(481, Node013, 004);
   if (divorce == false) then begin
      if ((Davin_In_Party) or (Miria_In_Party)) then begin
         NOption(482, Node021, 004);
      end
   end
   NOption(484, Node999, 004);
   prev_node := 20;
end
procedure Node021 begin
   if (((Miria_In_Party) and (dude_is_female)) or ((Davin_In_Party) and (dude_is_male))) then begin
      Reply(mstr(490) + mstr(491 + Davin_In_Party) + mstr(493));
   end else begin
      Reply(mstr(490) + mstr(491 + Davin_In_Party));
   end
   NOption(494, Node022, 004);
   NOption(495, Node999, 004);
   prev_node := 21;
end
procedure Node022 begin
   Reply(500);
   if (dude_has_booze) then begin
      NOption(501 + (check_general_rep >= 0), Node024, 004);
   end else begin
      NOption(503 + (check_general_rep >= 0), Node023, 004);
   end
   NOption(505, Node999, 004);
   prev_node := 22;
end
procedure Node023 begin
   Reply(510);
   NOption(512, Node027, 006);
   NOption(511, Node999, 004);
   prev_node := 23;
end
procedure Node024 begin
   give_tully_booze
   set_running_divorce;
   Reply(520);
   NOption(521, Node999, 004);
   prev_node := 24;
end
procedure Node025 begin
   Reply(530);
   GOption(531, Node026, 006);
   NOption(445, Node999, 004);
   prev_node := 25;
end
procedure Node026 begin
   Reply(540);
   NOption(542, Node027, 006);
   NOption(541, Node999, 004);
   NOption(445, Node999, 004);
   prev_node := 26;
end
procedure Node027 begin
   Reply(550);
   NOption(551, Node017, 004);
   NOption(552, Node999, 004);
   prev_node := 27;
end
procedure Node028 begin
   Reply(560);
   if (dude_has_booze) then begin
      GOption(336, Node989, 004);
   end
   NOption(337, Node025, 004);
   GOption(338, Node026, 006);
   NOption(323, Node999, 004);
   prev_node := 28;
end
procedure Node029 begin
   Reply(571 - (prev_node == 15) + (prev_node == 28));
   if (bishop_known) then begin
      NOption(573, Node030, 004);
   end
   if (wright_known) then begin
      NOption(574, Node038, 004);
   end
   if (know_mordino) then begin
      NOption(575, Node044, 004);
   end
   if (know_salvatore) then begin
      NOption(576, Node051, 004);
   end
   if (get_mystery_flag(MYSTERY_STATE_ASSIGNED)) then begin
      NOption(578, Node056, 004);
   end
   NOption(579, Node999, 004);
   prev_node := 29;
end
procedure Node030 begin
   Reply(590);
   NOption(591, Node018, 004);
   prev_node := 30;
end
procedure Node031 begin
   set_bishop_raiders;
   Reply(600);
   NOption(601, Node032, 004);
   NOption(602, Node032, 004);
   NOption(603, Node032, 004);
   NOption(604, Node999, 004);
   prev_node := 31;
end
procedure Node032 begin
   Reply(610);
   NOption(611 + (dude_iq >= 6), Node019, 001);
   prev_node := 32;
end
procedure Node033 begin
   Reply(620);
   if (mrs_bishop_banged) then begin
      NOption(622, Node030, 004);
      NOption(623, Node035, 004);
   end else begin
      NOption(621, Node030, 004);
   end
   NOption(475, Node028, 004);
   NOption(625, Node999, 004);
   prev_node := 33;
end
procedure Node034 begin
   Reply(630);
   if (angela_banged) then begin
      NOption(631, Node035, 004);
   end
   BOption(632, Node036, 004);
   NOption(633, Node030, 004);
   NOption(634, Node028, 004);
   NOption(635, Node999, 004);
   prev_node := 34;
end
procedure Node035 begin
   Reply(640);
   NOption(641, Node030, 004);
   NOption(642 + (dude_is_female), Node028, 004);
   NOption(644, Node999, 004);
   prev_node := 35;
end
procedure Node036 begin
   Reply(650);
   NOption(651, Node037, 004);
   NOption(652, Node028, 004);
   NOption(653, Node999, 004);
   prev_node := 36;
end
procedure Node037 begin
   Reply(660);
   NOption(661, Node044, 004);
   NOption(475, Node028, 004);
   NOption(663, Node999, 004);
   prev_node := 37;
end
procedure Node038 begin
   Reply(670);
   NOption(671, Node039, 004);
   NOption(672, Node999, 004);
   prev_node := 38;
end
procedure Node039 begin
   Reply(680);
   NOption(681, Node040, 004);
   NOption(682, Node042, 004);
   NOption(683, Node043, 004);
   NOption(684, Node999, 004);
   prev_node := 39;
end
procedure Node040 begin
   Reply(690);
   NOption(691, Node041, 004);
   NOption(692, Node039, 004);
   NOption(693, Node028, 004);
   NOption(694, Node999, 004);
   prev_node := 40;
end
procedure Node041 begin
   Reply(700);
   NOption(701, Node039, 004);
   NOption(702, Node028, 004);
   NOption(703, Node999, 004);
   prev_node := 41;
end
procedure Node042 begin
   set_know_still;
   Reply(710 + (prev_node == 43));
   NOption(712, Node040, 004);
   NOption(713, Node039, 004);
   NOption(702, Node028, 004);
   NOption(715, Node999, 004);
   prev_node := 42;
end
procedure Node043 begin
   Reply(720);
   NOption(721, Node042, 004);
   NOption(722, Node039, 004);
   NOption(702, Node028, 004);
   NOption(724, Node999, 004);
   prev_node := 43;
end
procedure Node044 begin
   Reply(730);
   NOption(731, Node045, 004);
   NOption(732, Node046, 004);
   NOption(733, Node047, 004);
   NOption(475, Node028, 004);
   NOption(295, Node999, 004);
   prev_node := 44;
end
procedure Node045 begin
   Reply(740);
   NOption(741, Node046, 004);
   NOption(742, Node047, 004);
   NOption(743, Node028, 004);
   NOption(744, Node999, 004);
   prev_node := 45;
end
procedure Node046 begin
   Reply(750);
   NOption(731, Node045, 004);
   NOption(752, Node047, 004);
   NOption(743, Node028, 004);
   NOption(754, Node999, 004);
   prev_node := 46;
end
procedure Node047 begin
   if (dude_is_female) then begin
      Reply(mstr(760) + mstr(761));
   end else begin
      Reply(761);
   end
   NOption(762, Node048, 004);
   NOption(763, Node999, 004);
   prev_node := 47;
end
procedure Node048 begin
   Reply(770);
   BOption(632, Node036, 004);
   NOption(772, Node049, 004);
   NOption(773, Node050, 004);
   NOption(475, Node028, 004);
   NOption(775, Node999, 004);
   prev_node := 48;
end
procedure Node049 begin
   set_redding_problem_know_jet;
   Reply(780);
   BOption(632, Node036, 004);
   NOption(782, Node050, 004);
   NOption(475, Node028, 004);
   NOption(784, Node999, 004);
   prev_node := 49;
end
procedure Node050 begin
   Reply(790);
   BOption(632, Node036, 004);
   NOption(792, Node049, 004);
   NOption(475, Node028, 004);
   NOption(794, Node999, 004);
   prev_node := 50;
end
procedure Node051 begin
   Reply(800);
   NOption(601, Node052, 004);
   NOption(602, Node052, 004);
   NOption(803, Node028, 004);
   NOption(804, Node999, 004);
   prev_node := 51;
end
procedure Node052 begin
   Reply(810);
   if (dude_iq < 7) then begin
      NOption(811, Node054, 004);
   end else begin
      NOption(812, Node053, 004);
   end
   NOption(475, Node028, 004);
   NOption(814, Node999, 004);
   prev_node := 52;
end
procedure Node053 begin
   set_know_lasers;
   Reply(820);
   NOption(821, Node054, 004);
   NOption(475, Node028, 004);
   NOption(823, Node999, 004);
   prev_node := 53;
end
procedure Node054 begin
   set_know_lasers;
   Reply(830);
   NOption(831, Node055, 006);
   NOption(475, Node028, 004);
   NOption(833, Node999, 004);
   prev_node := 54;
end
procedure Node055 begin
   Reply(840);
   NOption(841, Node028, 004);
   NOption(842, Node999, 004);
   prev_node := 55;
end
procedure Node056 begin
   Reply(850);
   NOption(632, Node036, 004);
   NOption(852, Node057, 004);
   NOption(853, Node028, 004);
   NOption(854, Node999, 004);
   prev_node := 56;
end
procedure Node057 begin
   Reply(860);
   NOption(853, Node028, 004);
   NOption(862, Node999, 004);
   prev_node := 57;
end

//added by killap - expansion pack
procedure Node058 begin
   set_local_var(LVAR_Said_58,1);
   Reply(2001);
   if not(abbey_visit) then begin
      NOption(2002, Node059, 004);
      NOption(2003, Node059, 004);
   end else begin
      if ( (global_var(GVAR_ABBEY_TULLY) == 1) or (global_var(GVAR_ABBEY_TULLY) == 5) ) then
         NOption(2020, Node063, 004);
      else
         NOption(2040, Node067, 004);
   end
end

procedure Node059 begin
   //put Abbey on map
   mark_abbey_on_map
   Reply(2004);
   NOption(2005, Node013, 004);
   NOption(2006, Node060, 004);
   NOption(2007, Node999, 004);
end

procedure Node060 begin
   set_local_var(LVAR_Said_60,1);
   Reply(2008);
   NOption(2009, Node061, 004);
   NOption(20091, Node061, 004);
   NOption(2010, Node999, 004);
end

procedure Node061 begin
   Reply(2011);

   if ( (global_var(GVAR_ABBEY_TULLY) < 2) ) then
      NOption(2012, Node062, 004);
   else if (global_var(GVAR_ABBEY_BOOZE) < 2) then
      NOption(2016, Node062, 004);
   NOption(2017, Node999, 004);
end

procedure Node062 begin
   //set global of getting booze, knowing Thomas, etc
   if (global_var(GVAR_ABBEY_TULLY) < 2) then
      set_global_var(GVAR_ABBEY_TULLY,2);
   set_global_var(GVAR_ABBEY_BOOZE,2);
   Reply(2013);
   if (not(Fallout2_enclave_destroyed)) then
     NOption(2014, Node013, 004);
   NOption(2015, Node999, 004);
end

procedure Node063 begin
   Reply(2021);
   if (global_var(GVAR_ABBEY_TULLY) == 5) then
      NOption(3022, Node068, 004);
   else
       NOption(2022, Node064, 004);
end

procedure Node064 begin
   if (global_var(GVAR_ABBEY_TULLY) < 2) then
      set_global_var(GVAR_ABBEY_TULLY,2);
   //give_xp(750);
   Reply(2023);
  // display_msg(mstr(3000));
   if ((global_var(GVAR_ABBEY_BOOZE) > 0) and (global_var(GVAR_ABBEY_BOOZE) < 4)) then begin
      if (dude_item_count(PID_ABBEY_BOOZE)) then begin
         NOption(2024, Node065, 004);
         Node_64 := 1;
      end else begin
         NOption(2025, Node065, 004);
         Node_64 := 2;
      end
   end else begin
      NOption(2026, Node065, 004);
      Node_64 := 3;
   end
end

procedure Node065 begin
   if ( (Node_64 == 1) or (Node_69 == 1) or (Node_07 == 1) ) then begin
      Reply(2029);
      NOption(2033, Node066, 004);
      NOption(2035, Node902, 004);
      NOption(2034, Node999, 004);
   end else if (Node_64 == 2) then begin
      Reply(2027);
      NOption(2030, Node900, 004); //then to exit
      if (not(Fallout2_enclave_destroyed)) then
        NOption(2032, Node901, 004); //then to 013
      NOption(2031, Node999, 004);
   end else if (Node_64 == 3) then begin
      Reply(2028);
      NOption(2030, Node900, 004); //then to exit
      if (not(Fallout2_enclave_destroyed)) then
        NOption(2032, Node901, 004); //then to 013
      NOption(2031, Node999, 004);
   end
end

procedure Node066 begin
   variable tmp;

   set_global_var(GVAR_ABBEY_BOOZE,4);
   display_msg(mstr(3001));
   give_xp(500);

   //remove booze from dude inventory
   if (dude_item_count(PID_ABBEY_BOOZE)) then
      remove_pid_qty(dude_obj, PID_ABBEY_BOOZE, 1)

   if not(booze_for_price) then begin
      Reply(2036);
   end else begin
      Reply(2037);
      tmp := random(15,30);
      dude_caps_adjust(tmp);
   end
   NOption(g_mstr(350), Node903, 004); //move father to ground and drunk. -NEED NEW TEXT
end

procedure Node067 begin
   if (global_var(GVAR_ABBEY_TULLY) < 2) then
      set_global_var(GVAR_ABBEY_TULLY,2);
   Reply(2041);
   NOption(2042, Node060, 004);
   NOption(2015, Node999, 004);
end

procedure Node068 begin
   set_global_var(GVAR_ABBEY_TULLY,6); //dead
   Reply(2045);
   if (not(Fallout2_enclave_destroyed)) then
     NOption(2046, Node013, 004);
   NOption(2047, Node999, 004);
end

procedure Node069 begin
   set_global_var(GVAR_ABBEY_TULLY,4);
   display_msg(mstr(3000));
   give_xp(750);

   Reply(2062);
   NOption(2063, Node999, 004);
   if (dude_item_count(PID_ABBEY_BOOZE)) then
      NOption(2064, Node065, 004);

   Node_69 := 1;
end

procedure Node900 begin
   set_global_var(GVAR_ABBEY_BOOZE,2);
   //set global
   call Node999;
end

procedure Node901 begin
   set_global_var(GVAR_ABBEY_BOOZE,2);
   //set global
   call Node013;
end

procedure Node902 begin
   booze_for_price := 1;
   call Node066;
end

procedure Node903 begin
   gfade_out(600);
   move_to(self_obj,passed_out_tile,self_elevation);
   reg_anim_clear(self_obj);
   reg_anim_begin();
   reg_anim_animate(self_obj,ANIM_fall_front,-1);
   reg_anim_end();
   critter_injure(self_obj,DAM_KNOCKED_DOWN);
   set_passed_out_state;
   set_new_passed_out_time;
   gfade_in(600);
   //move Tully to drunk position
end

procedure Node102 begin
   floater_rand(967, 971);
end
procedure Node103 begin
   floater_rand(1000, 1005);
end
