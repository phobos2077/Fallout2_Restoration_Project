/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name:
        Location: New Reno
        Description:

        Log:

           Created: May 6, 1998

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "ncbill"
#include "../headers/define.h"
#define NAME                    SCRIPT_NCBILL
#define TOWN_REP_VAR            GVAR_TOWN_REP_NEW_RENO
#include "../headers/command.h"
#include "../headers/newreno.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure push_p_proc;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;

/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Flags                    (0)
#define LVAR_Home_Tile                (1)

#define dude_wearing_shades           ((obj_pid(dude_right_hand) == PID_MIRROR_SHADES) or                \
                                       (obj_pid(dude_left_hand) == PID_MIRROR_SHADES))

//#define self_family                       self_family_var // added by killap - expansion pack

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */

/* Local variables which do not need to be saved between map changes. */

//variable self_family_var; // added by killap - expansion pack

procedure start begin
end

procedure timed_event_p_proc begin
   if (combat_is_initialized == false) then begin
      if (local_var(LVAR_Home_Tile) == self_tile) then begin
         floater_rand(200, 203);
      end
   end
   nr_add_timer_event_rand(self_obj, 20, 35, float_param);
end

procedure map_enter_p_proc begin
   // Comment out by killap - I see no reason to have this check. Removed here and in various other New Reno scripts.
   //if ((message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") == 0) then begin
   //   destroy_object(self_obj);
   //end else if (is_loading_game == false) then begin

      /*// added by killap - expansion
      self_family_var := family_salvatore;

      if (self_family == family_salvatore and salvatore_dead and warned_attack) then begin
         destroy_object(self_obj);
         return;
      end
      // end added*/

      if (map_first_run) then begin
         set_local_var(LVAR_Home_Tile, self_tile);
         set_self_team(TEAM_NEW_RENO_SALVATORE);
         set_self_ai(AI_TOUGH_CITIZEN);
      end
      nr_add_timer_event_rand(self_obj, 20, 35, float_param);
   //end
end

procedure critter_p_proc begin
   if (self_can_see_dude) then begin
      if (hostile) then begin
         self_attack_dude;
      end
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

procedure talk_p_proc begin
   /*// added by killap - expansion
   if (self_family == family_salvatore and salvatore_dead and warned_attack) then begin
     float_msg(self_obj, message_str(SCRIPT_DCGAMBLE,200), FLOAT_COLOR_NORMAL);
   // end added
   end else begin*/
      if (dude_is_stupid) then begin
         call Node002;
      end else begin
         start_dialog_at_node(Node003);
         set_herebefore;
      end
      nr_add_timer_event_rand(self_obj, 20, 35, float_param);
   //end
end

procedure destroy_p_proc begin
   inc_good_critter
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(100);
end

procedure description_p_proc begin
   script_overrides;
   display_mstr(150);
   set_examined;
end

procedure use_skill_on_p_proc begin
end

procedure push_p_proc begin
   if (local_var(LVAR_Home_Tile) == self_tile) then begin
      script_overrides;
   end
end

procedure Node998 begin
   if (hostile == false) then begin
      set_hostile;
   end
end
procedure Node999 begin
end

procedure Node002 begin
   floater(210);
end
procedure Node003 begin
   Reply(220);
   BOption(221, Node007, 004);
   if (dude_wearing_shades) then begin
      BOption(222, Node006, 004);
   end
   if (herebefore) then begin
      BOption(223, Node004, 004);
   end
   NOption(224, Node999, 004);
end
procedure Node004 begin
   Reply(230);
   BOption(231, Node005, 004);
   NOption(232, Node999, 004);
end
procedure Node005 begin
   Reply(240);
   BOption(241, Node998, 004);
   NOption(232, Node999, 004);
end
procedure Node006 begin
   Reply(250);
   BOption(251, Node005, 004);
   NOption(252, Node999, 004);
end
procedure Node007 begin
   Reply(260);
   NOption(261, Node999, 004);
end
