/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Jagged Jimmy J
        Location: New Reno
        Description:

        Log:

           Created: May 6, 1998

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "ncjimmyj"
#include "../headers/define.h"
#define NAME                    SCRIPT_NCJIMMYJ
#define TOWN_REP_VAR            GVAR_TOWN_REP_NEW_RENO
#include "../headers/command.h"
#include "../headers/newreno.h"
#include "../headers/modreact.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure timed_event_p_proc;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

procedure Node984;

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;

/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */

#define LVAR_Flags                        (4)
#define LVAR_Barter_Penalty               (5)

#define recognizes_pc_bit                 bit_10
#define freebie_bit                       bit_11
#define pissed_bit                        bit_12
#define stole_from_jjj_bit                bit_13
#define node_8_bit                        bit_14
#define node_9_bit                        bit_15
#define hidden_for_fight_bit              bit_16

#define recognizes_pc                     lvar_bit(LVAR_Flags, recognizes_pc_bit)
#define set_recognizes_pc                 if (recognizes_pc == false) then begin          \
                                             adjust_barter(-20);                           \
                                          end                                             \
                                          set_lvar_bit_on(LVAR_Flags, recognizes_pc_bit)

#define freebie                           lvar_bit(LVAR_Flags, freebie_bit)
#define set_freebie                       set_lvar_bit_on(LVAR_Flags, freebie_bit)

#define node_8                            lvar_bit(LVAR_Flags, node_8_bit)
#define set_node_8                        set_lvar_bit_on(LVAR_Flags, node_8_bit)

#define node_9                            lvar_bit(LVAR_Flags, node_9_bit)
#define set_node_9                        set_lvar_bit_on(LVAR_Flags, node_9_bit)

#define stole_from_jjj                    lvar_bit(LVAR_Flags, stole_from_jjj_bit)
#define set_stole_from_jjj                if (stole_from_jjj == false) then begin                  \
                                             inc_general_rep(REP_BONUS_NEW_RENO_STEAL_FROM_JJJ);   \
                                          end                                                      \
                                          set_lvar_bit_on(LVAR_Flags, stole_from_jjj_bit)

#define pissed                            lvar_bit(LVAR_Flags, pissed_bit)
#define set_pissed                        if (pissed == false) then begin                 \
                                             adjust_barter(20);                          \
                                          end                                             \
                                          set_lvar_bit_on(LVAR_Flags, pissed_bit)

#define set_did_slander_penalty           if (jjj_slander == false) then begin            \
                                             adjust_barter(20);                          \
                                          end                                             \
                                          set_jjj_slander

#define adjust_barter(x)                  inc_local_var_amt(LVAR_Barter_Penalty, x);            \
                                          gdialog_set_barter_mod(local_var(LVAR_Barter_Penalty))
#define check_recognize                   ((recognizes_pc == false) and ((enclave_destroyed) or (dude_has_porn_star_rep) or (dude_is_prizefighter) or (dude_is_made_man)))

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */
import variable new_reno_jimmy_j_box;
import variable new_reno_temp_box;

/* Local variables which do not need to be saved between map changes. */
variable return_node;
variable prev_node;
variable temp_barter_bonus;

procedure start begin
end

procedure timed_event_p_proc begin
   if (fixed_param == float_param) then begin
      if ((combat_is_initialized == false) and (self_visible)) then begin
         if (enclave_destroyed) then begin
            call Node001;
         end else begin
            call Node002;
         end
      end
      nr_add_timer_event_rand(self_obj, 20, 35, float_param);
   end
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
      if (map_first_run) then begin
         set_self_team(TEAM_NEW_RENO_JAGGED_JIMMY_J);
         set_self_ai(AI_TOUGH_GUARD);
      end
      nr_add_timer_event_rand(self_obj, 25, 35, float_param);
   end
end

procedure map_update_p_proc begin
   if (jjj_dead) then begin
      call destroy_p_proc;
      destroy_object(self_obj);
   end
   check_hide_durring_boxing_fight
end

procedure critter_p_proc begin
   if (self_can_see_dude) then begin
      if (hostile) then begin
         self_attack_dude;
      end
   end else begin
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

procedure talk_p_proc begin
   //added by killap
   if ( (jjj_slander) or (pissed) ) then
     gdialog_set_barter_mod(20);

   if (know_jjj) then begin
      start_dialog_at_node(Node007);
   end else begin
      start_dialog_at_node(Node003);
   end
   if (temp_barter_bonus) then begin
      temp_barter_bonus := false;
      adjust_barter(20); //killap's fix: was -20
   end

   set_herebefore;
   nr_add_timer_event_rand(self_obj, 25, 35, float_param);
end

procedure destroy_p_proc begin
   set_jjj_dead;
   inc_evil_critter
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(100);
end

procedure description_p_proc begin
   script_overrides;
   display_mstr_rand(150, 150 + (3 * examined));
   set_examined;
end

procedure use_skill_on_p_proc begin
end

procedure Node998 begin
   if (hostile == false) then begin
      set_hostile;
   end
end
procedure Node999 begin
end
procedure Node990 begin
   if (check_recognize) then begin
      call Node009;
   end
end
procedure Node989 begin
   if (check_recognize) then begin
      call Node009;
   end else begin
      call Node984;
   end
end
procedure Node988 begin
   if (check_recognize) then begin
      call Node009;
   end else begin
      call Node012;
   end
end
procedure Node987 begin
   if (check_recognize) then begin
      call Node009;
   end else if ((myron_dead) or (myron_left_stables) or (myron_is_dude_companion)) then begin
      call Node022;
   end else begin
      call Node021;
   end
end
procedure Node986 begin
   if (check_recognize) then begin
      call Node009;
   end else begin
      call Node037;
   end
end
procedure Node985 begin
   if (check_recognize) then begin
      call Node009;
   end else begin
      call Node036;
   end
end
procedure Node984 begin

   //added by killap
   if ( (jjj_slander) or (pissed) ) then
      gdialog_mod_barter(20);
   else if (temp_barter_bonus) then
      gdialog_mod_barter(-20);
   else
   //added by killap
      gdialog_barter;

   call return_node;
end
procedure Node983 begin
   set_stole_from_jjj;
   move_obj_inven_to_obj(self_obj, dude_obj);
end
procedure Node982 begin
   if (temp_barter_bonus == false) then begin
      adjust_barter(-20); //killap's fix: was 20
   end
   temp_barter_bonus := true;
   call Node016;
end
procedure Node981 begin
   set_pissed;
   call Node015;
end
procedure Node980 begin
   if (freebie) then begin
      call Node984;
   end else begin
      call Node019;
   end
end

#define is_insert_message(x)        ((x == 200) or (x == 201))
procedure Node001 begin
   floater_rand_with_check(200, 206, dude_name, 5000);
end
procedure Node002 begin
   floater_rand(220, 228);
end
procedure Node003 begin
   return_node := @Node003;
   Reply(mstr(240) + mstr(241 + dude_is_female));
   NOption(243, Node004, -003);
   NOption(244, Node004, -003);
   NOption(245, Node004, -003);
   NOption(246, Node004, 004);
   BOption(247, Node004, 004);
   BOption(248, Node004, 004);
   prev_node := 3;
end
procedure Node004 begin
   return_node := @Node004;
   Reply(260);
   NOption(261, Node005, -003);
   NOption(245, Node005, -003);
   NOption(263, Node005, 004);
   BOption(264, Node005, 004);
   prev_node := 4;
end
procedure Node005 begin
   return_node := @Node005;
   set_know_jjj;
   Reply(270);
   NOption(271, Node006, -003);
   NOption(272, Node006, -003);
   NOption(273, Node006, 004);
   BOption(274, Node006, 004);
   prev_node := 5;
end
procedure Node006 begin
   return_node := @Node006;
   Reply(280);
   NOption(mstr(281) + dude_name + mstr(5281) + dude_name + mstr(6281), Node008, -003);
   NOption(282, Node008, -003);
   NOption(283, Node008, 004);
   BOption(284, Node008, 004);
   prev_node := 6;
end
procedure Node007 begin
   return_node := @Node007;
   Reply(290 + ((jjj_slander) or (pissed)));
   NOption(292, Node990, -003);
   BOption(mstr(314) + dude_name + mstr(5314), Node998, -003);
   NOption(294, Node989, -003);
   NOption(295, Node989, 004);
   if (pissed == false) then begin
      NOption(296, Node988, 004);
   end
   NOption(297, Node987, 004);
   if (get_mystery_flag(MYSTERY_STATE_ASSIGNED)) then begin
      BOption(298, Node986, 004);
      NOption(299, Node985, 006);
   end
   BOption(300, Node999, 004);
   prev_node := 7;
end
procedure Node008 begin
   return_node := @Node008;
   Reply(310 + (node_8 * (1 + ((jjj_slander == false) and (pissed == false)))));
   NOption(292, Node990, -003);
   BOption(mstr(314) + dude_name + mstr(5314), Node998, -003);
   NOption(294, Node989, -003);
   NOption(295, Node989, 004);
   if (pissed == false) then begin
      NOption(296, Node988, 004);
   end
   NOption(297, Node987, 004);
   if ((get_mystery_flag(MYSTERY_STATE_ASSIGNED)) and (know_scott == false)) then begin
      BOption(298, Node986, 004);
      NOption(299, Node985, 006);
   end
   BOption(300, Node999, 004);
   prev_node := 8;
   set_node_8;
end
procedure Node009 begin
   return_node := @Node009;
   Reply(330 + node_9);
   if (enclave_destroyed) then begin
      NOption(332, Node010, -003);
      NOption(338, Node010, 004);
   end else if (dude_is_prizefighter) then begin
      NOption(333, Node010, -003);
      NOption(339, Node010, 004);
   end else if (dude_has_porn_star_rep) then begin
      NOption(334, Node010, -003);
      NOption(mstr(340) + porn_star_name + mstr(5340), Node010, 004);
   end else if (dude_is_made_man) then begin
      NOption(335, Node010, -003);
      NOption(mstr(341) + dude_family_name + mstr(5341), Node010, 004);
   end
   NOption(336, Node011, 004); // edit by killap - was -003
   NOption(337, Node999, -003);
   NOption(342, Node984, 004);
   NOption(343, Node009, 004);
   NOption(344, Node999, 004);
   prev_node := 9;
   set_node_9;
end
procedure Node010 begin
   set_recognizes_pc;
   return_node := @Node010;
   Reply(360);
   NOption(294, Node984, -003);
   NOption(361, Node999, -003);
   GOption(363, Node984, 004);
   NOption(364, Node008, 004);
   NOption(365, Node999, 004);
   prev_node := 10;
end
procedure Node011 begin
   return_node := @Node011;
   Reply(375);
   if (inven_count(self_obj) > 0) then begin
      NOption(376, Node983, 001);
   end
   NOption(dude_name + mstr(377), Node999, 001);
   prev_node := 11;
end
procedure Node012 begin
   return_node := @Node012;
   Reply(385);
   GOption(386, Node013, 004);
   GOption(387, Node013, 004);
   NOption(388, Node008, 004);
   NOption(389, Node984, 004);
   NOption(390, Node999, 004);
   prev_node := 12;
end
procedure Node013 begin
   return_node := @Node013;
   Reply(400);
   if (jjj_truth) then begin
      BOption(416, Node981, 004);
   end
   GOption(401, Node014, 004);
   GOption(402, Node014, 004);
   NOption(388, Node008, 004);
   NOption(389, Node984, 004);
   NOption(390, Node999, 004);
   prev_node := 13;
end
procedure Node014 begin
   return_node := @Node014;
   Reply(415);
   if (jjj_truth) then begin
      BOption(416, Node981, 004);
   end
   if ((dude_smooth_talker) or (dude_charisma > 6) or (has_skill(dude_obj, SKILL_SPEECH) > 50)) then begin
      GOption(417, Node982, 004);
   end
   NOption(418, Node008, 004);
   NOption(419, Node984, 004);
   NOption(420, Node999, 004);
   prev_node := 14;
end
procedure Node015 begin
   return_node := @Node015;
   Reply(430);
   NOption(431, Node984, 004);
   NOption(432, Node008, 004);
   BOption(433, Node984, 004);
   BOption(434, Node999, 004);
   NOption(435, Node999, 004);
   prev_node := 15;
end
procedure Node016 begin
   return_node := @Node016;
   Reply(445);
   if (dude_charisma > 5) then begin
      GOption(446, Node017, 004);
   end
   NOption(447, Node008, 004);
   NOption(448, Node999, 004);
   prev_node := 16;
end
procedure Node017 begin
   return_node := @Node017;
   Reply(455);
   if (dude_charisma > 5) then begin
      GOption(456, Node018, 004);
   end
   NOption(457, Node008, 004);
   NOption(448, Node999, 004);
   prev_node := 17;
end
procedure Node018 begin
   return_node := @Node018;
   Reply(465);
   if (dude_charisma > 5) then begin
      GOption(466, Node980, 004);
   end
   NOption(467, Node008, 004);
   NOption(448, Node999, 004);
   prev_node := 18;
end
procedure Node019 begin
   return_node := @Node019;
   Reply(475);
   GOption(476, Node020, 004);
   prev_node := 19;
end
procedure Node020 begin
   if (not(freebie)) then begin
      set_freebie;
      give_pid_qty(dude_obj, PID_JET, 1)
   end
   return_node := @Node020;
   Reply(480);
   GOption(481, Node984, 004);
   NOption(482, Node008, 004);
   NOption(483, Node999, 004);
   prev_node := 20;
end
procedure Node021 begin
   return_node := @Node021;
   Reply(490);
   NOption(491, Node023, 004);
   NOption(492, Node008, 004);
   NOption(514, Node999, 004);
   prev_node := 21;
end
procedure Node022 begin
   return_node := @Node022;
   set_know_mordino;
   Reply(500 + myron_is_dude_companion);
   NOption(502, Node008, 004);
   NOption(514, Node999, 004);
   prev_node := 22;
end
procedure Node023 begin
   return_node := @Node023;
   set_know_mordino;
   Reply(510);
   NOption(511, Node024, 004);
   NOption(512, Node008, 004);
   NOption(513, Node025, 005);
   NOption(514, Node999, 004);
   prev_node := 23;
end
procedure Node024 begin
   return_node := @Node024;
   set_know_mordino;
   Reply(520);
   NOption(521, Node984, 004);
   NOption(512, Node008, 004);
   NOption(523, Node025, 005);
   NOption(514, Node999, 004);
   prev_node := 24;
end
procedure Node025 begin
   return_node := @Node025;
   set_know_mordino;
   Reply(530);
   NOption(531, Node026, 005);
   if (know_myron_whores) then begin
      NOption(532, Node029, 007);
   end
   NOption(533, Node008, 004);
   NOption(534, Node999, 004);
   prev_node := 25;
end
procedure Node026 begin
   return_node := @Node026;
   Reply(540);
   NOption(541, Node027, 005);
   if (know_myron_whores) then begin
      NOption(532, Node029, 007);
   end
   NOption(543, Node008, 004);
   NOption(534, Node999, 004);
   prev_node := 26;
end
procedure Node027 begin
   return_node := @Node027;
   set_stables_known
   Reply(550);
   NOption(551, Node028, 005);
   if (know_myron_whores) then begin
      NOption(532, Node029, 007);
   end
   NOption(543, Node008, 004);
   NOption(554, Node999, 004);
   prev_node := 27;
end
procedure Node028 begin
   return_node := @Node028;
   Reply(560);
   NOption(561, Node984, 004);
   if (know_myron_whores) then begin
      NOption(532, Node029, 007);
   end
   NOption(707, Node008, 004);
   NOption(564, Node999, 004);
   prev_node := 28;
end
procedure Node029 begin
   return_node := @Node029;
   Reply(570);
   NOption(571, Node030, 004);
   NOption(572, Node008, 004);
   NOption(573, Node999, 004);
   prev_node := 29;
end
procedure Node030 begin
   return_node := @Node030;
   Reply(580);
   NOption(581, Node031, 004);
   BOption(582, Node032, 007);
   NOption(572, Node008, 004);
   NOption(584, Node999, 004);
   prev_node := 30;
end
procedure Node031 begin
   return_node := @Node031;
   Reply(590);
   NOption(561, Node984, 004);
   BOption(592, Node032, 007);
   NOption(572, Node008, 004);
   NOption(584, Node999, 004);
   prev_node := 31;
end
procedure Node032 begin
   return_node := @Node032;
   set_myron_kitty;
   Reply(600);
   BOption(601, Node033, 004);
   BOption(602, Node033, 004);
   BOption(603, Node033, 004);
   prev_node := 32;
end
procedure Node033 begin
   return_node := @Node033;
   if ((dude_is_female) and (dude_charisma > 5)) then begin
      Reply(611);
      NOption(612, Node984, 004);
      NOption(615, Node008, 004);
      NOption(616, Node999, 004);
   end else begin
      Reply(610);
      NOption(613, Node984, 004);
      NOption(614, Node008, 004);
      NOption(617, Node999, 004);
   end
   prev_node := 33;
end
procedure Node036 begin
   return_node := @Node036;
   Reply(625);
   if ((prev_node == 7) or (prev_node == 8)) then begin
      NOption(626, Node984, 004);
      if (dude_has_empty_jet_canister) then begin
         NOption(627, Node040, 004);
      end
      if (examined_body) then begin
         NOption(628, Node043, 004);
      end
   end
   NOption(629, Node008, 004);
   NOption(727, Node999, 004);
   prev_node := 36;
end
procedure Node037 begin
   return_node := @Node037;
   set_did_slander_penalty;
   Reply(635);
   BOption(636, Node038, 004);
   BOption(637, Node038, 004);
   BOption(638, Node038, 004);
   BOption(639, Node038, 004);
   prev_node := 37;
end
procedure Node038 begin
   return_node := @Node038;
   suspect_jules
   suspect_renesco
   Reply(645);
   BOption(646, Node039, 004);
   BOption(637, Node039, 004);
   BOption(648, Node039, 004);
   BOption(639, Node039, 004);
   prev_node := 38;
end
procedure Node039 begin
   return_node := @Node039;
   Reply(655);
   if (renesco_slander) then begin
      BOption(656, Node044, 004);
   end
   if (dude_has_empty_jet_canister) then begin
      NOption(627, Node040, 004);
   end
   if (examined_body) then begin
      NOption(628, Node043, 004);
   end
   NOption(659, Node008, 004);
   BOption(660 + (check_general_rep < 0), Node998, 004);
   NOption(662, Node999, 004);
   if (check_general_rep >= 0) then begin
      NOption(663, Node999, 004);
   end
   prev_node := 39;
end
procedure Node040 begin
   return_node := @Node040;
   if (jet_canister_poison == false) then begin
      if (examined_body == false) then begin
         display_mstr(800);
      end
      give_xp(EXP_NEW_RENO_RICHARD_POISONED);
      set_jet_canister_poison;
   end
   Reply(675);
   NOption(676, Node041, 004);
   NOption(677, Node008, 004);
   NOption(678, Node999, 004);
   prev_node := 40;
end
procedure Node041 begin
   return_node := @Node041;
   Reply(685);
   NOption(686, Node042, 004);
   NOption(677, Node008, 004);
   NOption(678, Node999, 004);
   prev_node := 41;
end
procedure Node042 begin
   return_node := @Node042;
   Reply(695);
   NOption(696, Node008, 004);
   NOption(697, Node999, 004);
   prev_node := 42;
end
procedure Node043 begin
   return_node := @Node043;
   Reply(705);
   NOption(706, Node036, 004);
   NOption(707, Node008, 004);
   NOption(708, Node999, 004);
   prev_node := 43;
end
procedure Node044 begin
   return_node := @Node044;
   Reply(715);
   NOption(716, Node045, 004);
   NOption(707, Node008, 004);
   NOption(708, Node999, 004);
   prev_node := 44;
end
procedure Node045 begin
   return_node := @Node045;
   set_did_slander_penalty;
   Reply(725);
   NOption(707, Node008, 004);
   NOption(727, Node999, 004);
   prev_node := 45;
end
