/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Sheb
        Location: New Reno
        Description:

        Log:

           Created: April 24, 1998

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "ncsheb"
#include "../headers/define.h"
#define NAME                    SCRIPT_NCSHEB
#define TOWN_REP_VAR            GVAR_TOWN_REP_NEW_RENO
#include "../headers/command.h"
#include "../headers/newreno.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

procedure Node001;

/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Message                      (0)
#define LVAR_Flags                        (1)


/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */

/* Local variables which do not need to be saved between map changes. */


procedure start begin
end

procedure timed_event_p_proc begin
   if (fixed_param == float_param) then begin
      call Node001;
      nr_add_timer_event_rand(self_obj, 15, 35, float_param);
   end
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
      if (map_first_run) then begin
         set_self_team(TEAM_NEW_RENO_CAT_PAW);
         set_self_ai(AI_THUG);
      end
   end
   nr_add_timer_event_rand(self_obj, 15, 35, float_param);
end

procedure critter_p_proc begin
   if ((hostile) and (self_can_see_dude)) then begin
      self_attack_dude;
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

procedure talk_p_proc begin
   call Node001;
   nr_add_timer_event_rand(self_obj, 15, 35, float_param);
end

procedure destroy_p_proc begin
   inc_evil_critter
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(100);
end

procedure description_p_proc begin
   script_overrides;
   display_mstr(150);
end

procedure use_skill_on_p_proc begin
end

procedure Node998 begin
   if (hostile == false) then begin
      set_hostile;
   end
end
procedure Node999 begin
end

procedure Node001 begin
   if ((local_var(LVAR_Message) < 200) or (local_var(LVAR_Message) > 213)) then begin
      set_local_var(LVAR_Message, 200);
   end
   if (obj_on_screen(self_obj)) then begin
      floater(local_var(LVAR_Message));
   end
   inc_local_var(LVAR_Message);
end
