/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name:
        Location: New Reno
        Description:

        Log:

           Created: May 6, 1998

           Updated:
*/

/* Include Files */
#define SCRIPT_REALNAME "nchumper"
#include "../headers/define.h"
#define NAME                    SCRIPT_NCHUMPER
#define TOWN_REP_VAR            GVAR_TOWN_REP_NEW_RENO
#include "../headers/command.h"
#include "../headers/newreno.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

procedure Node001;

/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */

#define LVAR_Flags                    (0)



/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable
   Needs to be saved, make it a map variable (MVAR_) */

/* Local variables which do not need to be saved between map changes. */


procedure start begin
end

procedure timed_event_p_proc begin
   if (combat_is_initialized == false) then begin
      //floater_rand(, );
   end
   nr_add_timer_event_rand(self_obj, 15, 30, float_param);
end

procedure map_enter_p_proc begin
   destroy_object(self_obj);
   /*
   if (is_loading_game == false) then begin
   end
   if (map_first_run) then begin
   end
   set_self_team(TEAM_NEW_RENO_);
   set_self_ai(AI_);
   */
   nr_add_timer_event_rand(self_obj, 5, 30, float_param);
end

procedure critter_p_proc begin
   if ((hostile) and (self_can_see_dude)) then begin

      self_attack_dude;
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

procedure talk_p_proc begin
   set_herebefore;
end

procedure destroy_p_proc begin
   // inc__critter ***
end

procedure look_at_p_proc begin
   script_overrides;
   // display_mstr(100); ***
end

procedure description_p_proc begin
   script_overrides;
   // display_mstr_rand(,); ***
   set_examined;
end

procedure use_skill_on_p_proc begin
end

procedure Node998 begin
   if (hostile == false) then begin
      set_hostile;
   end
end
procedure Node999 begin
end
/*
#define is_insert_message(x)  ((x == ) or (x == ) or        \
                               ((<= x) and (x <= )) or     \
                               (x == ))
*/

procedure Node001 begin
   // floater_rand(, ); ***
end
