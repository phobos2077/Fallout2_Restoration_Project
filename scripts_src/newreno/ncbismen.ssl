/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/*
        Name: Bishop's Men
        Location: New Reno
        Description:

        Log:

           Created: April 27, 1998

           Updated:
*/

#define WARNING_FAMILY_ACTION                call Node006;
#define WARNING_WEAPON_ACTION                if (dude_is_prizefighter) then begin               \
                                                call Node008;                                   \
                                             end else if (dude_has_porn_star_rep) then begin    \
                                                call Node011;                                   \
                                             end else if (has_rep_slaver) then begin            \
                                                call Node016;                                   \
                                             end else begin                                     \
                                                call Node018;                                   \
                                             end
#define WARNING_SNEAK_ACTION                 if (has_rep_slaver) then begin   \
                                                call Node017;                 \
                                             end else begin                   \
                                                call Node019;                 \
                                             end
#define WARNING_ROBOBRAIN_ACTION             call Node020;
#define WARNING_MARCUS_ACTION                call Node021;
#define WARNING_LENNY_ACTION                 call Node034;

/* Include Files */
#define SCRIPT_REALNAME "ncbismen"
#include "../headers/define.h"
#define NAME                    SCRIPT_NCBISMEN
#define TOWN_REP_VAR            GVAR_TOWN_REP_NEW_RENO
#include "../headers/command.h"
#include "../headers/modreact.h"
#include "../headers/newreno.h"
#include "../headers/newr2.h"

/* Standard Script Procedures */
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure timed_event_p_proc;
procedure combat_p_proc;

/* Script Specific Procedure Calls */
procedure Node998;                                      // This Node is Always Combat
procedure Node999;                                      // This Node is Always Ending

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node013;
procedure Node014;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node027;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node034;

/* Local Variables which are saved. All Local Variables need to be
   prepended by LVAR_ */
#define LVAR_Flags                     (4)
#define LVAR_Weapon                    (5)
#define LVAR_Home_Tile                 (6)
#define LVAR_Home_Rotation             (7)
#define LVAR_Boom_Tile                 (8)

/* Imported variables from the Map scripts. These should only be
   pointers and variables that need not be saved. If a variable

   Needs to be saved, make it a map variable (MVAR_) */
#define hidden_for_fight_bit           bit_10
#define heard_help_bit                 bit_11

#define heard_boom_tile                (local_var(LVAR_Boom_Tile))
#define heard_boom                     (heard_boom_tile != 0)
#define set_heard_boom                 temp_tile := 0;                                                    \
                                       if (help_me_obj != 0) then begin                                   \
                                          temp_tile := tile_num(help_me_obj);                             \
                                       end                                                                \
                                       set_local_var(LVAR_Boom_Tile, temp_tile)
#define off_heard_boom                 set_local_var(LVAR_Boom_Tile, 0)

#define heard_help                     (lvar_bit(LVAR_Flags, heard_help_bit))
#define set_heard_help                 if (heard_help == false) then begin                         \
                                          nr_add_timer_event(self_obj, 5, off_head_help_param);    \
                                       end                                                         \
                                       set_lvar_bit_on(LVAR_Flags, heard_help_bit)
#define off_heard_help                 set_lvar_bit_off(LVAR_Flags, heard_help_bit)

#define heard_boom_tile                (local_var(LVAR_Boom_Tile))

#define self_family                    family_bishop

/* Local variables which do not need to be saved between map changes. */

variable warning_result;
variable temp_tile;

import variable mcGeeOBJ;
import variable bishop_roof_guard_obj;
import variable angela_guard_obj;
import variable help_me_obj;
import variable new_reno_bishop_men_obj;

procedure start begin
end

procedure combat_p_proc begin
   if ((mcGeeOBJ != 0) and (global_var(GVAR_NEW_RENO_MCGEE_ATTACKED) == 1)) then begin
      set_global_var(GVAR_NEW_RENO_MCGEE_ATTACKED, 2);
      attack(mcGeeOBJ);
      self_attack_dude;
   end
end

procedure NodeArmed begin
end
procedure NodeSneak begin
end

procedure timed_event_p_proc begin
   if (self_visible) then begin
      if (fixed_param == warning_loop_param) then begin
         check_all_warnings
         call_warning_loop;
      end else if (fixed_param == float_param) then begin
         if (self_can_see_dude) then begin
            if ((combat_is_initialized == false) and (obj_on_family_property(dude_obj, self_family))) then begin
               // check float
               set_is_float;
               check_all_warnings
               if (warning_result == warning_result_none) then begin
                  if (Fallout2_enclave_destroyed) then begin
                     call Node001;
                  end else if (dude_wearing_power_armor) then begin
                     call Node002;
                  end else if (dude_family == self_family) then begin
                     if (dude_is_armed) then begin
                        call Node003;
                     end else if (dude_is_sneaking) then begin
                        call Node004;
                     end else begin
                        call Node005;
                     end
                  end else if (dude_is_prizefighter) then begin
                     if (dude_is_sneaking) then begin
                        call Node009;
                     end else begin
                        call Node010;
                     end
                  end else if (dude_has_porn_star_rep) then begin
                     if (dude_is_sneaking) then begin
                        if (dude_is_male) then begin
                           call Node009;
                        end else begin
                           call Node013;
                        end
                     end else begin
                        call Node014;
                     end
                  end else begin
                     call Node022;
                  end
               end
            end
         end
         nr_add_timer_event_rand(self_obj, 25, 35, float_param);
      end else if (fixed_param == off_head_help_param) then begin
         off_heard_help;
      end else if (fixed_param == heard_explosion_param) then begin
         set_heard_boom;
      end else if (fixed_param == tamper_door_param) then begin
         if (warned_door) then begin
            set_warning_on(warning_attack);
         end else begin
            float_msg(self_obj, g_mstr(5400), FLOAT_COLOR_NORMAL);
         end
      end else if (fixed_param == heard_help_param) then begin
         ndebug("got heard help");
         set_heard_help;
      end
   end
end

procedure map_update_p_proc begin
   if (self_elevation == dude_elevation) then begin
      if (angela_guard_obj == 0) then begin
         angela_guard_obj := self_obj;
      end else if (tile_distance_objs(dude_obj, self_obj) < tile_distance_objs(dude_obj, angela_guard_obj)) then begin
         angela_guard_obj := self_obj;
      end
   end else if (self_obj == angela_guard_obj) then begin
      angela_guard_obj := 0;
   end
   if (self_elevation == 2) then begin
      if (bishop_roof_guard_obj == 0) then begin
         bishop_roof_guard_obj := self_obj;
      end else if (tile_distance_objs(dude_obj, self_obj) < tile_distance_objs(dude_obj, bishop_roof_guard_obj)) then begin
         bishop_roof_guard_obj := self_obj;
      end
   end else begin
      check_hide_durring_boxing_fight
   end
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
      if (map_first_run) then begin
         // setup inventory
         set_local_var(LVAR_Home_Tile, self_tile);
         set_local_var(LVAR_Home_Rotation, self_cur_rot);
         set_self_team(TEAM_NEW_RENO_BISHOP);
         set_self_ai(AI_TOUGH_GUARD);
      end
      nr_add_timer_event_rand(self_obj, 25, 35, float_param);
      call_warning_loop;
   end
end

procedure critter_p_proc begin
   if (self_can_see_dude) then begin
      if ((hostile) or (warned_attack) or (heard_help) or (heard_boom)) then begin
         self_attack_dude;
      end else set_new_reno_watcher(new_reno_bishop_men_obj)
   end else if (heard_help) then begin
      Follow_Dude_Run_Only(1, 1)
   end else if (heard_boom) then begin
      if (tile_distance(self_tile, heard_boom_tile) > 3) then begin
         anim_run_to_point_rate(heard_boom_tile, 5)
      end else if (anim_busy(self_obj) == false) then begin
         set_local_var(LVAR_Boom_Tile, 0);
      end
   end else if (self_tile != local_var(LVAR_Home_Tile)) then begin
      anim_move_to_point_rate(local_var(LVAR_Home_Tile), 5)
   end else if (self_cur_rot != local_var(LVAR_Home_Rotation)) then begin
      self_rotate(local_var(LVAR_Home_Rotation));
   end
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      set_personal_enemy;
      attack_family(self_family)
   end
end

procedure pickup_p_proc begin
   if (source_obj == dude_obj) then begin
      call Node998;
   end
end

procedure talk_p_proc begin
   Evil_Critter:=1;
   Slavery_Tolerant := SLAVE_TOLERANT;
   Karma_Perception := KARMA_PERCEPTION2;
   CheckKarma;
   GetReaction;
   ReactToLevel; //added by killap

   set_is_click;
   check_all_warnings
   if (warning_result == warning_result_none) then begin
      if (Fallout2_enclave_destroyed) then begin
         call Node023;
      end else if (dude_wearing_power_armor) then begin
         call Node002;
      end else if (dude_family == self_family) then begin
         if (dude_is_armed) then begin
            call Node003;
         end else if (dude_is_sneaking) then begin
            call Node004;
         end else begin
            call Node024;
         end
      end else if (dude_is_sneaking) then begin
         if ((dude_is_prizefighter) or (dude_is_male)) then begin
            call Node009;
         end else begin
            call Node013;
         end
      end else if (dude_is_prizefighter) then begin
         call Node025;
      end else if (dude_has_porn_star_rep) then begin
         call Node027;
      end else if (has_rep_slaver) then begin
         call Node029;
      end else if (local_var(LVAR_reaction_level) > REACTION_LEVEL_NEUTRAL) then begin
         call Node030;
      end else if (dude_is_male) then begin
         call Node031;
      end else begin
         call Node032;
      end
   end

   nr_add_timer_event_rand(self_obj, 25, 35, float_param);
end

procedure destroy_p_proc begin
   inc_evil_critter
   if (bishop_roof_guard_obj == self_obj) then begin
      bishop_roof_guard_obj := 0;
   end
   if (angela_guard_obj == self_obj) then begin
      angela_guard_obj := 0;
   end
   dec_family_counter(self_family);
end

procedure look_at_p_proc begin
   script_overrides;
   display_mstr(100);
end

procedure description_p_proc begin
   script_overrides;
   display_mstr(150 + (examined));
   set_examined;
end

procedure use_skill_on_p_proc begin
end

procedure Node998 begin
   if (hostile == false) then begin
      set_hostile;
      warning_result := warning_result_none;
   end
end
procedure Node999 begin
end

#define is_insert_message(x)  ((x == 200) or (x == 210) or (x == 215) or (x == 216) or      \
                               (x == 220) or (x == 221) or (x == 222) or (x == 228) or      \
                               (x == 229) or (x == 230) or (x == 231) or (x == 236) or      \
                               (x == 252) or (x == 260) or (x == 261) or (x == 266) or      \
                               (x == 267) or (x == 269) or (x == 280) or (x == 350) or      \
                               (x == 351) or (x == 352) or (x == 402))
procedure floater_rand_with_check_cust(variable x, variable y, variable the_patch) begin
variable the_msg;
   the_msg := random(x, y);
   if (is_insert_message(the_msg)) then begin
      if ((the_msg == 229) or (the_msg == 230)) then begin
         the_msg := "" + mstr(the_msg) + made_man_name + mstr(the_msg+1000);
      end else begin
         the_msg := "" + mstr(the_msg) + the_patch + mstr(the_msg+1000);
      end
      float_msg(self_obj, the_msg, FLOAT_COLOR_NORMAL);
   end else
      floater(the_msg);
end

procedure Node001 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      call floater_rand_with_check_cust(200, 203, dude_name);
   //else
   //   float_msg(self_obj, mstr(200) + dude_name + mstr(1200), FLOAT_COLOR_NORMAL);
end
procedure Node002 begin
   floater(205);
end
procedure Node003 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      call floater_rand_with_check_cust(210, 210, made_man_name);
   //else
   //   float_msg(self_obj, mstr(210) + dude_name + mstr(1210), FLOAT_COLOR_NORMAL);
end
procedure Node004 begin
   call floater_rand_with_check_cust(215, 216, made_man_name);
end
procedure Node005 begin
   call floater_rand_with_check_cust(220, 222, made_man_name);
end
procedure Node006 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      call floater_rand_with_check_cust(229-(4*dude_is_male), 231+(5*dude_is_female), dude_family_name);
   //else
   //   float_msg(self_obj, mstr(229) + dude_name + mstr(1229), FLOAT_COLOR_NORMAL);
end
procedure Node008 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      call floater_rand_with_check_cust(250, 252, prizefighter_name);
   //else
   //   floater(250);
end
procedure Node009 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      floater_rand(255, 257);
   //else
   //   floater(256);
end
procedure Node010 begin
   call floater_rand_with_check_cust(260, 261, prizefighter_name);
end
procedure Node011 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      call floater_rand_with_check_cust(267-(2*dude_is_male), 267+(2*dude_is_female), porn_star_name);
   //else
   //   call floater_rand_with_check_cust(266, 267, porn_star_name);
end
procedure Node013 begin
   floater(275);
end
procedure Node014 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      call floater_rand_with_check_cust(280, 284+(dude_is_female), porn_star_name);
   //else
   //   floater(280);
end
procedure Node016 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      floater_rand(295, 297);
   //else
   //   floater(296);
end
procedure Node017 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      floater_rand(300, 303);
   //else
   //   floater(301);
end
procedure Node018 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      floater_rand(305, 307);
   //else
   //   floater(306);
end
procedure Node019 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      floater_rand(310, 313);
   //else
   //   floater(311);
end
procedure Node020 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      floater_rand(315, 317);
   //else
   //   floater(315);
end
procedure Node021 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      floater_rand(320, 322);
   //else
   //   floater(322);
end
procedure Node022 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      floater_rand(325, 326);
   //else
   //   floater(326);
end
procedure Node023 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      floater_rand(330, 340);
   //else
   //   floater_rand(330, 332);
end
procedure Node024 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      call floater_rand_with_check_cust(350, 374, made_man_name);
   //else if (random(0, 1)) then
   //   call floater_rand_with_check_cust(350, 352, made_man_name);
   //else
   //   floater_rand(356, 357);
end
procedure Node025 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      floater_rand(383-(3*dude_is_male), 393+(3*dude_is_female));
   //else
   //   floater(287);
end
procedure Node027 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      call floater_rand_with_check_cust(402-(2*dude_is_male), 409+(7*dude_is_female), porn_star_name);
   //else
   //   call floater_rand_with_check_cust(402-(2*dude_is_male), 402+(dude_is_female), porn_star_name);
end
procedure Node029 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      floater_rand(420, 429);
   //else
   //   floater_rand(420, 421);
end
procedure Node030 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      floater_rand(440, 441);
   //else
   //   floater(441);
end
procedure Node031 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      floater_rand(445, 453);
   //else
   //   floater_rand(445, 446);
end
procedure Node032 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      floater_rand(462-(2*(dude_charisma>5)), 472+(4*(dude_charisma<=5)));
   //else
   //   floater_rand(460, 462);
end
procedure Node034 begin
   //if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then
      floater_rand(490, 492);
   //else
   //   floater(492);
end
